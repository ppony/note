ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 1


   1              		.syntax unified
   2              		.arch armv8-m.base
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.align	2
  20              		.code	16
  21              		.thumb_func
  22              		.type	NVIC_SetPriority, %function
  23              	NVIC_SetPriority:
  24              	.LFB48:
  25              		.file 1 "src/core_armv8mbl.h"
   1:src/core_armv8mbl.h **** /**************************************************************************//**
   2:src/core_armv8mbl.h ****  * @file     core_armv8mbl.h
   3:src/core_armv8mbl.h ****  * @brief    CMSIS ARMv8MBL Core Peripheral Access Layer Header File
   4:src/core_armv8mbl.h ****  * @version  V5.00
   5:src/core_armv8mbl.h ****  * @date     29. April 2016
   6:src/core_armv8mbl.h ****  ******************************************************************************/
   7:src/core_armv8mbl.h **** /*
   8:src/core_armv8mbl.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:src/core_armv8mbl.h ****  *
  10:src/core_armv8mbl.h ****  * SPDX-License-Identifier: Apache-2.0
  11:src/core_armv8mbl.h ****  *
  12:src/core_armv8mbl.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:src/core_armv8mbl.h ****  * not use this file except in compliance with the License.
  14:src/core_armv8mbl.h ****  * You may obtain a copy of the License at
  15:src/core_armv8mbl.h ****  *
  16:src/core_armv8mbl.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:src/core_armv8mbl.h ****  *
  18:src/core_armv8mbl.h ****  * Unless required by applicable law or agreed to in writing, software
  19:src/core_armv8mbl.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:src/core_armv8mbl.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:src/core_armv8mbl.h ****  * See the License for the specific language governing permissions and
  22:src/core_armv8mbl.h ****  * limitations under the License.
  23:src/core_armv8mbl.h ****  */
  24:src/core_armv8mbl.h **** 
  25:src/core_armv8mbl.h **** 
  26:src/core_armv8mbl.h **** 
  27:src/core_armv8mbl.h **** #if   defined ( __ICCARM__ )
  28:src/core_armv8mbl.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  29:src/core_armv8mbl.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  30:src/core_armv8mbl.h ****   #pragma clang system_header   /* treat file as system include file */
  31:src/core_armv8mbl.h **** #endif
  32:src/core_armv8mbl.h **** 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 2


  33:src/core_armv8mbl.h **** #ifndef __CORE_ARMV8MBL_H_GENERIC
  34:src/core_armv8mbl.h **** #define __CORE_ARMV8MBL_H_GENERIC
  35:src/core_armv8mbl.h **** 
  36:src/core_armv8mbl.h **** #include <stdint.h>
  37:src/core_armv8mbl.h **** 
  38:src/core_armv8mbl.h **** #ifdef __cplusplus
  39:src/core_armv8mbl.h ****  extern "C" {
  40:src/core_armv8mbl.h **** #endif
  41:src/core_armv8mbl.h **** 
  42:src/core_armv8mbl.h **** /**
  43:src/core_armv8mbl.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  44:src/core_armv8mbl.h ****   CMSIS violates the following MISRA-C:2004 rules:
  45:src/core_armv8mbl.h **** 
  46:src/core_armv8mbl.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  47:src/core_armv8mbl.h ****      Function definitions in header files are used to allow 'inlining'.
  48:src/core_armv8mbl.h **** 
  49:src/core_armv8mbl.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  50:src/core_armv8mbl.h ****      Unions are used for effective representation of core registers.
  51:src/core_armv8mbl.h **** 
  52:src/core_armv8mbl.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  53:src/core_armv8mbl.h ****      Function-like macros are used to allow more efficient code.
  54:src/core_armv8mbl.h ****  */
  55:src/core_armv8mbl.h **** 
  56:src/core_armv8mbl.h **** 
  57:src/core_armv8mbl.h **** /*******************************************************************************
  58:src/core_armv8mbl.h ****  *                 CMSIS definitions
  59:src/core_armv8mbl.h ****  ******************************************************************************/
  60:src/core_armv8mbl.h **** /**
  61:src/core_armv8mbl.h ****   \ingroup Cortex_ARMv8MBL
  62:src/core_armv8mbl.h ****   @{
  63:src/core_armv8mbl.h ****  */
  64:src/core_armv8mbl.h **** 
  65:src/core_armv8mbl.h **** /*  CMSIS cmGrebe definitions */
  66:src/core_armv8mbl.h **** #define __ARMv8MBL_CMSIS_VERSION_MAIN  ( 5U)                                       /*!< [31:16] CMS
  67:src/core_armv8mbl.h **** #define __ARMv8MBL_CMSIS_VERSION_SUB   ( 0U)                                       /*!< [15:0]  CMS
  68:src/core_armv8mbl.h **** #define __ARMv8MBL_CMSIS_VERSION       ((__ARMv8MBL_CMSIS_VERSION_MAIN << 16U) | \
  69:src/core_armv8mbl.h ****                                          __ARMv8MBL_CMSIS_VERSION_SUB           )  /*!< CMSIS HAL v
  70:src/core_armv8mbl.h **** 
  71:src/core_armv8mbl.h **** #define __CORTEX_M                     ( 2U)                                            /*!< Cortex
  72:src/core_armv8mbl.h **** 
  73:src/core_armv8mbl.h **** /* Common defines in core_*.h files
  74:src/core_armv8mbl.h ****   - #define __ASM               Compiler keyword for asm
  75:src/core_armv8mbl.h ****   - #define __INLINE            Compiler keyword for inline
  76:src/core_armv8mbl.h ****   - #define __STATIC_INLINE     Compiler keyword for static inline
  77:src/core_armv8mbl.h ****   - #define __NO_RETURN         function that never returns
  78:src/core_armv8mbl.h ****   - #define __USED              function or variable that is not optimized away
  79:src/core_armv8mbl.h ****   - #define __WEAK              weak function or variable
  80:src/core_armv8mbl.h ****   - #define __UNALIGNED_UINT32  pointer to unaligned uint32_t variable
  81:src/core_armv8mbl.h ****  */
  82:src/core_armv8mbl.h **** #if   defined ( __CC_ARM )                                            /* ARM Compiler 4/5 */
  83:src/core_armv8mbl.h ****   #define __ASM                     __asm
  84:src/core_armv8mbl.h ****   #define __INLINE                  __inline
  85:src/core_armv8mbl.h ****   #define __STATIC_INLINE           static __inline
  86:src/core_armv8mbl.h ****   #define __NO_RETURN               __declspec(noreturn)
  87:src/core_armv8mbl.h ****   #define __USED                    __attribute__((used))
  88:src/core_armv8mbl.h ****   #define __WEAK                    __attribute__((weak))
  89:src/core_armv8mbl.h ****   #define __UNALIGNED_UINT32(x)     (*((__packed uint32_t *)(x)))
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 3


  90:src/core_armv8mbl.h **** 
  91:src/core_armv8mbl.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)       /* ARM Compiler 6 */
  92:src/core_armv8mbl.h ****   #define __ASM                     __asm
  93:src/core_armv8mbl.h ****   #define __INLINE                  __inline
  94:src/core_armv8mbl.h ****   #define __STATIC_INLINE           static __inline
  95:src/core_armv8mbl.h ****   #define __NO_RETURN               __attribute__((noreturn))
  96:src/core_armv8mbl.h ****   #define __USED                    __attribute__((used))
  97:src/core_armv8mbl.h ****   #define __WEAK                    __attribute__((weak))
  98:src/core_armv8mbl.h ****   #pragma clang diagnostic push
  99:src/core_armv8mbl.h ****   #pragma clang diagnostic ignored "-Wpacked"
 100:src/core_armv8mbl.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
 101:src/core_armv8mbl.h ****   #pragma clang diagnostic pop
 102:src/core_armv8mbl.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
 103:src/core_armv8mbl.h **** 
 104:src/core_armv8mbl.h **** #elif defined ( __GNUC__ )                                            /* GNU Compiler */
 105:src/core_armv8mbl.h ****   #define __ASM                     __asm
 106:src/core_armv8mbl.h ****   #define __INLINE                  inline
 107:src/core_armv8mbl.h ****   #define __STATIC_INLINE           static inline
 108:src/core_armv8mbl.h ****   #define __NO_RETURN               __attribute__((noreturn))
 109:src/core_armv8mbl.h ****   #define __USED                    __attribute__((used))
 110:src/core_armv8mbl.h ****   #define __WEAK                    __attribute__((weak))
 111:src/core_armv8mbl.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
 112:src/core_armv8mbl.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
 113:src/core_armv8mbl.h **** 
 114:src/core_armv8mbl.h **** #elif defined ( __ICCARM__ )                                          /* IAR Compiler */
 115:src/core_armv8mbl.h ****   #define __ASM                     __asm
 116:src/core_armv8mbl.h ****   #define __INLINE                  inline
 117:src/core_armv8mbl.h ****   #define __STATIC_INLINE           static inline
 118:src/core_armv8mbl.h ****   #define __NO_RETURN               __noreturn
 119:src/core_armv8mbl.h ****   #define __USED
 120:src/core_armv8mbl.h ****   #define __WEAK                    __weak
 121:src/core_armv8mbl.h ****   struct __packed T_UINT32 { uint32_t v; };
 122:src/core_armv8mbl.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
 123:src/core_armv8mbl.h **** 
 124:src/core_armv8mbl.h **** #elif defined ( __TI_ARM__ )                                          /* TI ARM Compiler */
 125:src/core_armv8mbl.h ****   #define __ASM                     __asm
 126:src/core_armv8mbl.h ****   #define __INLINE                  inline
 127:src/core_armv8mbl.h ****   #define __STATIC_INLINE           static inline
 128:src/core_armv8mbl.h ****   #define __NO_RETURN               __attribute__((noreturn))
 129:src/core_armv8mbl.h ****   #define __USED                    __attribute__((used))
 130:src/core_armv8mbl.h ****   #define __WEAK                    __attribute__((weak))
 131:src/core_armv8mbl.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
 132:src/core_armv8mbl.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
 133:src/core_armv8mbl.h **** 
 134:src/core_armv8mbl.h **** #elif defined ( __TASKING__ )                                         /* TASKING Compiler */
 135:src/core_armv8mbl.h ****   #define __ASM                     __asm
 136:src/core_armv8mbl.h ****   #define __INLINE                  inline
 137:src/core_armv8mbl.h ****   #define __STATIC_INLINE           static inline
 138:src/core_armv8mbl.h ****   #define __NO_RETURN               __attribute__((noreturn))
 139:src/core_armv8mbl.h ****   #define __USED                    __attribute__((used))
 140:src/core_armv8mbl.h ****   #define __WEAK                    __attribute__((weak))
 141:src/core_armv8mbl.h ****   struct __packed__ T_UINT32 { uint32_t v; };
 142:src/core_armv8mbl.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
 143:src/core_armv8mbl.h **** 
 144:src/core_armv8mbl.h **** #elif defined ( __CSMC__ )                                            /* COSMIC Compiler */
 145:src/core_armv8mbl.h ****   #define __packed
 146:src/core_armv8mbl.h ****   #define __ASM                     _asm
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 4


 147:src/core_armv8mbl.h ****   #define __INLINE                  inline
 148:src/core_armv8mbl.h ****   #define __STATIC_INLINE           static inline
 149:src/core_armv8mbl.h ****   #define __NO_RETURN
 150:src/core_armv8mbl.h ****   #define __USED
 151:src/core_armv8mbl.h ****   #define __WEAK
 152:src/core_armv8mbl.h ****   #define __UNALIGNED_UINT32(x)     (*x)
 153:src/core_armv8mbl.h **** 
 154:src/core_armv8mbl.h **** #else
 155:src/core_armv8mbl.h ****   #error Unknown compiler
 156:src/core_armv8mbl.h **** #endif
 157:src/core_armv8mbl.h **** 
 158:src/core_armv8mbl.h **** /** __FPU_USED indicates whether an FPU is used or not.
 159:src/core_armv8mbl.h ****     This core does not support an FPU at all
 160:src/core_armv8mbl.h **** */
 161:src/core_armv8mbl.h **** #define __FPU_USED       0U
 162:src/core_armv8mbl.h **** 
 163:src/core_armv8mbl.h **** #if defined ( __CC_ARM )
 164:src/core_armv8mbl.h ****   #if defined __TARGET_FPU_VFP
 165:src/core_armv8mbl.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 166:src/core_armv8mbl.h ****   #endif
 167:src/core_armv8mbl.h **** 
 168:src/core_armv8mbl.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 169:src/core_armv8mbl.h ****   #if defined __ARM_PCS_VFP
 170:src/core_armv8mbl.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 171:src/core_armv8mbl.h ****   #endif
 172:src/core_armv8mbl.h **** 
 173:src/core_armv8mbl.h **** #elif defined ( __GNUC__ )
 174:src/core_armv8mbl.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 175:src/core_armv8mbl.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 176:src/core_armv8mbl.h ****   #endif
 177:src/core_armv8mbl.h **** 
 178:src/core_armv8mbl.h **** #elif defined ( __ICCARM__ )
 179:src/core_armv8mbl.h ****   #if defined __ARMVFP__
 180:src/core_armv8mbl.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 181:src/core_armv8mbl.h ****   #endif
 182:src/core_armv8mbl.h **** 
 183:src/core_armv8mbl.h **** #elif defined ( __TI_ARM__ )
 184:src/core_armv8mbl.h ****   #if defined __TI_VFP_SUPPORT__
 185:src/core_armv8mbl.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 186:src/core_armv8mbl.h ****   #endif
 187:src/core_armv8mbl.h **** 
 188:src/core_armv8mbl.h **** #elif defined ( __TASKING__ )
 189:src/core_armv8mbl.h ****   #if defined __FPU_VFP__
 190:src/core_armv8mbl.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 191:src/core_armv8mbl.h ****   #endif
 192:src/core_armv8mbl.h **** 
 193:src/core_armv8mbl.h **** #elif defined ( __CSMC__ )
 194:src/core_armv8mbl.h ****   #if ( __CSMC__ & 0x400U)
 195:src/core_armv8mbl.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 196:src/core_armv8mbl.h ****   #endif
 197:src/core_armv8mbl.h **** 
 198:src/core_armv8mbl.h **** #endif
 199:src/core_armv8mbl.h **** 
 200:src/core_armv8mbl.h **** #include "core_cminstr.h"                /* Core Instruction Access */
 201:src/core_armv8mbl.h **** #include "core_cmfunc.h"                 /* Core Function Access */
 202:src/core_armv8mbl.h **** 
 203:src/core_armv8mbl.h **** #ifdef __cplusplus
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 5


 204:src/core_armv8mbl.h **** }
 205:src/core_armv8mbl.h **** #endif
 206:src/core_armv8mbl.h **** 
 207:src/core_armv8mbl.h **** #endif /* __CORE_ARMV8MBL_H_GENERIC */
 208:src/core_armv8mbl.h **** 
 209:src/core_armv8mbl.h **** #ifndef __CMSIS_GENERIC
 210:src/core_armv8mbl.h **** 
 211:src/core_armv8mbl.h **** #ifndef __CORE_ARMV8MBL_H_DEPENDANT
 212:src/core_armv8mbl.h **** #define __CORE_ARMV8MBL_H_DEPENDANT
 213:src/core_armv8mbl.h **** 
 214:src/core_armv8mbl.h **** #ifdef __cplusplus
 215:src/core_armv8mbl.h ****  extern "C" {
 216:src/core_armv8mbl.h **** #endif
 217:src/core_armv8mbl.h **** 
 218:src/core_armv8mbl.h **** /* check device defines and use defaults */
 219:src/core_armv8mbl.h **** #if defined __CHECK_DEVICE_DEFINES
 220:src/core_armv8mbl.h ****  #ifndef __ARMv8MBL_REV
 221:src/core_armv8mbl.h ****     #define __ARMv8MBL_REV               0x0000U
 222:src/core_armv8mbl.h ****     #warning "__ARMv8MBL_REV not defined in device header file; using default!"
 223:src/core_armv8mbl.h ****   #endif
 224:src/core_armv8mbl.h **** 
 225:src/core_armv8mbl.h ****   #ifndef __FPU_PRESENT
 226:src/core_armv8mbl.h ****     #define __FPU_PRESENT             0U
 227:src/core_armv8mbl.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 228:src/core_armv8mbl.h ****   #endif
 229:src/core_armv8mbl.h **** 
 230:src/core_armv8mbl.h ****   #ifndef __MPU_PRESENT
 231:src/core_armv8mbl.h ****     #define __MPU_PRESENT             0U
 232:src/core_armv8mbl.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 233:src/core_armv8mbl.h ****   #endif
 234:src/core_armv8mbl.h **** 
 235:src/core_armv8mbl.h ****   #ifndef __SAU_PRESENT
 236:src/core_armv8mbl.h ****     #define __SAU_PRESENT             0U
 237:src/core_armv8mbl.h ****     #warning "__SAU_PRESENT not defined in device header file; using default!"
 238:src/core_armv8mbl.h ****   #endif
 239:src/core_armv8mbl.h **** 
 240:src/core_armv8mbl.h ****   #ifndef __VTOR_PRESENT
 241:src/core_armv8mbl.h ****     #define __VTOR_PRESENT            0U
 242:src/core_armv8mbl.h ****     #warning "__VTOR_PRESENT not defined in device header file; using default!"
 243:src/core_armv8mbl.h ****   #endif
 244:src/core_armv8mbl.h **** 
 245:src/core_armv8mbl.h ****   #ifndef __NVIC_PRIO_BITS
 246:src/core_armv8mbl.h ****     #define __NVIC_PRIO_BITS          2U
 247:src/core_armv8mbl.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 248:src/core_armv8mbl.h ****   #endif
 249:src/core_armv8mbl.h **** 
 250:src/core_armv8mbl.h ****   #ifndef __Vendor_SysTickConfig
 251:src/core_armv8mbl.h ****     #define __Vendor_SysTickConfig    0U
 252:src/core_armv8mbl.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 253:src/core_armv8mbl.h ****   #endif
 254:src/core_armv8mbl.h **** 
 255:src/core_armv8mbl.h ****   #ifndef __ETM_PRESENT
 256:src/core_armv8mbl.h ****     #define __ETM_PRESENT             0U
 257:src/core_armv8mbl.h ****     #warning "__ETM_PRESENT not defined in device header file; using default!"
 258:src/core_armv8mbl.h ****   #endif
 259:src/core_armv8mbl.h **** 
 260:src/core_armv8mbl.h ****   #ifndef __MTB_PRESENT
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 6


 261:src/core_armv8mbl.h ****     #define __MTB_PRESENT             0U
 262:src/core_armv8mbl.h ****     #warning "__MTB_PRESENT not defined in device header file; using default!"
 263:src/core_armv8mbl.h ****   #endif
 264:src/core_armv8mbl.h **** 
 265:src/core_armv8mbl.h **** #endif
 266:src/core_armv8mbl.h **** 
 267:src/core_armv8mbl.h **** /* IO definitions (access restrictions to peripheral registers) */
 268:src/core_armv8mbl.h **** /**
 269:src/core_armv8mbl.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 270:src/core_armv8mbl.h **** 
 271:src/core_armv8mbl.h ****     <strong>IO Type Qualifiers</strong> are used
 272:src/core_armv8mbl.h ****     \li to specify the access to peripheral variables.
 273:src/core_armv8mbl.h ****     \li for automatic generation of peripheral register debug information.
 274:src/core_armv8mbl.h **** */
 275:src/core_armv8mbl.h **** #ifdef __cplusplus
 276:src/core_armv8mbl.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 277:src/core_armv8mbl.h **** #else
 278:src/core_armv8mbl.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 279:src/core_armv8mbl.h **** #endif
 280:src/core_armv8mbl.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 281:src/core_armv8mbl.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 282:src/core_armv8mbl.h **** 
 283:src/core_armv8mbl.h **** /* following defines should be used for structure members */
 284:src/core_armv8mbl.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 285:src/core_armv8mbl.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 286:src/core_armv8mbl.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 287:src/core_armv8mbl.h **** 
 288:src/core_armv8mbl.h **** /*@} end of group ARMv8MBL */
 289:src/core_armv8mbl.h **** 
 290:src/core_armv8mbl.h **** 
 291:src/core_armv8mbl.h **** 
 292:src/core_armv8mbl.h **** /*******************************************************************************
 293:src/core_armv8mbl.h ****  *                 Register Abstraction
 294:src/core_armv8mbl.h ****   Core Register contain:
 295:src/core_armv8mbl.h ****   - Core Register
 296:src/core_armv8mbl.h ****   - Core NVIC Register
 297:src/core_armv8mbl.h ****   - Core SCB Register
 298:src/core_armv8mbl.h ****   - Core SysTick Register
 299:src/core_armv8mbl.h ****   - Core Debug Register
 300:src/core_armv8mbl.h ****   - Core MPU Register
 301:src/core_armv8mbl.h ****   - Core SAU Register
 302:src/core_armv8mbl.h ****  ******************************************************************************/
 303:src/core_armv8mbl.h **** /**
 304:src/core_armv8mbl.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 305:src/core_armv8mbl.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 306:src/core_armv8mbl.h **** */
 307:src/core_armv8mbl.h **** 
 308:src/core_armv8mbl.h **** /**
 309:src/core_armv8mbl.h ****   \ingroup    CMSIS_core_register
 310:src/core_armv8mbl.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 311:src/core_armv8mbl.h ****   \brief      Core Register type definitions.
 312:src/core_armv8mbl.h ****   @{
 313:src/core_armv8mbl.h ****  */
 314:src/core_armv8mbl.h **** 
 315:src/core_armv8mbl.h **** /**
 316:src/core_armv8mbl.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 317:src/core_armv8mbl.h ****  */
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 7


 318:src/core_armv8mbl.h **** typedef union
 319:src/core_armv8mbl.h **** {
 320:src/core_armv8mbl.h ****   struct
 321:src/core_armv8mbl.h ****   {
 322:src/core_armv8mbl.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 323:src/core_armv8mbl.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 324:src/core_armv8mbl.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 325:src/core_armv8mbl.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 326:src/core_armv8mbl.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 327:src/core_armv8mbl.h ****   } b;                                   /*!< Structure used for bit  access */
 328:src/core_armv8mbl.h ****   uint32_t w;                            /*!< Type      used for word access */
 329:src/core_armv8mbl.h **** } APSR_Type;
 330:src/core_armv8mbl.h **** 
 331:src/core_armv8mbl.h **** /* APSR Register Definitions */
 332:src/core_armv8mbl.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 333:src/core_armv8mbl.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 334:src/core_armv8mbl.h **** 
 335:src/core_armv8mbl.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 336:src/core_armv8mbl.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 337:src/core_armv8mbl.h **** 
 338:src/core_armv8mbl.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 339:src/core_armv8mbl.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 340:src/core_armv8mbl.h **** 
 341:src/core_armv8mbl.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 342:src/core_armv8mbl.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 343:src/core_armv8mbl.h **** 
 344:src/core_armv8mbl.h **** 
 345:src/core_armv8mbl.h **** /**
 346:src/core_armv8mbl.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 347:src/core_armv8mbl.h ****  */
 348:src/core_armv8mbl.h **** typedef union
 349:src/core_armv8mbl.h **** {
 350:src/core_armv8mbl.h ****   struct
 351:src/core_armv8mbl.h ****   {
 352:src/core_armv8mbl.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 353:src/core_armv8mbl.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 354:src/core_armv8mbl.h ****   } b;                                   /*!< Structure used for bit  access */
 355:src/core_armv8mbl.h ****   uint32_t w;                            /*!< Type      used for word access */
 356:src/core_armv8mbl.h **** } IPSR_Type;
 357:src/core_armv8mbl.h **** 
 358:src/core_armv8mbl.h **** /* IPSR Register Definitions */
 359:src/core_armv8mbl.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 360:src/core_armv8mbl.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 361:src/core_armv8mbl.h **** 
 362:src/core_armv8mbl.h **** 
 363:src/core_armv8mbl.h **** /**
 364:src/core_armv8mbl.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 365:src/core_armv8mbl.h ****  */
 366:src/core_armv8mbl.h **** typedef union
 367:src/core_armv8mbl.h **** {
 368:src/core_armv8mbl.h ****   struct
 369:src/core_armv8mbl.h ****   {
 370:src/core_armv8mbl.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 371:src/core_armv8mbl.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 372:src/core_armv8mbl.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 373:src/core_armv8mbl.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 374:src/core_armv8mbl.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 8


 375:src/core_armv8mbl.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 376:src/core_armv8mbl.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 377:src/core_armv8mbl.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 378:src/core_armv8mbl.h ****   } b;                                   /*!< Structure used for bit  access */
 379:src/core_armv8mbl.h ****   uint32_t w;                            /*!< Type      used for word access */
 380:src/core_armv8mbl.h **** } xPSR_Type;
 381:src/core_armv8mbl.h **** 
 382:src/core_armv8mbl.h **** /* xPSR Register Definitions */
 383:src/core_armv8mbl.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 384:src/core_armv8mbl.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 385:src/core_armv8mbl.h **** 
 386:src/core_armv8mbl.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 387:src/core_armv8mbl.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 388:src/core_armv8mbl.h **** 
 389:src/core_armv8mbl.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 390:src/core_armv8mbl.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 391:src/core_armv8mbl.h **** 
 392:src/core_armv8mbl.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 393:src/core_armv8mbl.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 394:src/core_armv8mbl.h **** 
 395:src/core_armv8mbl.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 396:src/core_armv8mbl.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 397:src/core_armv8mbl.h **** 
 398:src/core_armv8mbl.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 399:src/core_armv8mbl.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 400:src/core_armv8mbl.h **** 
 401:src/core_armv8mbl.h **** 
 402:src/core_armv8mbl.h **** /**
 403:src/core_armv8mbl.h ****   \brief  Union type to access the Control Registers (CONTROL).
 404:src/core_armv8mbl.h ****  */
 405:src/core_armv8mbl.h **** typedef union
 406:src/core_armv8mbl.h **** {
 407:src/core_armv8mbl.h ****   struct
 408:src/core_armv8mbl.h ****   {
 409:src/core_armv8mbl.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 410:src/core_armv8mbl.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack-pointer select */
 411:src/core_armv8mbl.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 412:src/core_armv8mbl.h ****   } b;                                   /*!< Structure used for bit  access */
 413:src/core_armv8mbl.h ****   uint32_t w;                            /*!< Type      used for word access */
 414:src/core_armv8mbl.h **** } CONTROL_Type;
 415:src/core_armv8mbl.h **** 
 416:src/core_armv8mbl.h **** /* CONTROL Register Definitions */
 417:src/core_armv8mbl.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 418:src/core_armv8mbl.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 419:src/core_armv8mbl.h **** 
 420:src/core_armv8mbl.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 421:src/core_armv8mbl.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 422:src/core_armv8mbl.h **** 
 423:src/core_armv8mbl.h **** /*@} end of group CMSIS_CORE */
 424:src/core_armv8mbl.h **** 
 425:src/core_armv8mbl.h **** 
 426:src/core_armv8mbl.h **** /**
 427:src/core_armv8mbl.h ****   \ingroup    CMSIS_core_register
 428:src/core_armv8mbl.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 429:src/core_armv8mbl.h ****   \brief      Type definitions for the NVIC Registers
 430:src/core_armv8mbl.h ****   @{
 431:src/core_armv8mbl.h ****  */
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 9


 432:src/core_armv8mbl.h **** 
 433:src/core_armv8mbl.h **** /**
 434:src/core_armv8mbl.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 435:src/core_armv8mbl.h ****  */
 436:src/core_armv8mbl.h **** typedef struct
 437:src/core_armv8mbl.h **** {
 438:src/core_armv8mbl.h ****   __IOM uint32_t ISER[16U];              /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 439:src/core_armv8mbl.h ****         uint32_t RESERVED0[16U];
 440:src/core_armv8mbl.h ****   __IOM uint32_t ICER[16U];              /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 441:src/core_armv8mbl.h ****         uint32_t RSERVED1[16U];
 442:src/core_armv8mbl.h ****   __IOM uint32_t ISPR[16U];              /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 443:src/core_armv8mbl.h ****         uint32_t RESERVED2[16U];
 444:src/core_armv8mbl.h ****   __IOM uint32_t ICPR[16U];              /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 445:src/core_armv8mbl.h ****         uint32_t RESERVED3[16U];
 446:src/core_armv8mbl.h ****   __IOM uint32_t IABR[16U];              /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 447:src/core_armv8mbl.h ****         uint32_t RESERVED4[16U];
 448:src/core_armv8mbl.h ****   __IOM uint32_t ITNS[16U];              /*!< Offset: 0x280 (R/W)  Interrupt Non-Secure State Regis
 449:src/core_armv8mbl.h ****         uint32_t RESERVED5[16U];
 450:src/core_armv8mbl.h ****   __IOM uint32_t IPR[124U];              /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 451:src/core_armv8mbl.h **** }  NVIC_Type;
 452:src/core_armv8mbl.h **** 
 453:src/core_armv8mbl.h **** /*@} end of group CMSIS_NVIC */
 454:src/core_armv8mbl.h **** 
 455:src/core_armv8mbl.h **** 
 456:src/core_armv8mbl.h **** /**
 457:src/core_armv8mbl.h ****   \ingroup  CMSIS_core_register
 458:src/core_armv8mbl.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 459:src/core_armv8mbl.h ****   \brief    Type definitions for the System Control Block Registers
 460:src/core_armv8mbl.h ****   @{
 461:src/core_armv8mbl.h ****  */
 462:src/core_armv8mbl.h **** 
 463:src/core_armv8mbl.h **** /**
 464:src/core_armv8mbl.h ****   \brief  Structure type to access the System Control Block (SCB).
 465:src/core_armv8mbl.h ****  */
 466:src/core_armv8mbl.h **** typedef struct
 467:src/core_armv8mbl.h **** {
 468:src/core_armv8mbl.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 469:src/core_armv8mbl.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 470:src/core_armv8mbl.h **** #if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
 471:src/core_armv8mbl.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 472:src/core_armv8mbl.h **** #else
 473:src/core_armv8mbl.h ****         uint32_t RESERVED0;
 474:src/core_armv8mbl.h **** #endif
 475:src/core_armv8mbl.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 476:src/core_armv8mbl.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 477:src/core_armv8mbl.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 478:src/core_armv8mbl.h ****         uint32_t RESERVED1;
 479:src/core_armv8mbl.h ****   __IOM uint32_t SHPR[2U];               /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 480:src/core_armv8mbl.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 481:src/core_armv8mbl.h **** } SCB_Type;
 482:src/core_armv8mbl.h **** 
 483:src/core_armv8mbl.h **** /* SCB CPUID Register Definitions */
 484:src/core_armv8mbl.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 485:src/core_armv8mbl.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 486:src/core_armv8mbl.h **** 
 487:src/core_armv8mbl.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 488:src/core_armv8mbl.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 10


 489:src/core_armv8mbl.h **** 
 490:src/core_armv8mbl.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 491:src/core_armv8mbl.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 492:src/core_armv8mbl.h **** 
 493:src/core_armv8mbl.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 494:src/core_armv8mbl.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 495:src/core_armv8mbl.h **** 
 496:src/core_armv8mbl.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 497:src/core_armv8mbl.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 498:src/core_armv8mbl.h **** 
 499:src/core_armv8mbl.h **** /* SCB Interrupt Control State Register Definitions */
 500:src/core_armv8mbl.h **** #define SCB_ICSR_PENDNMISET_Pos            31U                                            /*!< SCB 
 501:src/core_armv8mbl.h **** #define SCB_ICSR_PENDNMISET_Msk            (1UL << SCB_ICSR_PENDNMISET_Pos)               /*!< SCB 
 502:src/core_armv8mbl.h **** 
 503:src/core_armv8mbl.h **** #define SCB_ICSR_PENDNMICLR_Pos            30U                                            /*!< SCB 
 504:src/core_armv8mbl.h **** #define SCB_ICSR_PENDNMICLR_Msk            (1UL << SCB_ICSR_PENDNMICLR_Pos)               /*!< SCB 
 505:src/core_armv8mbl.h **** 
 506:src/core_armv8mbl.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 507:src/core_armv8mbl.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 508:src/core_armv8mbl.h **** 
 509:src/core_armv8mbl.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 510:src/core_armv8mbl.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 511:src/core_armv8mbl.h **** 
 512:src/core_armv8mbl.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 513:src/core_armv8mbl.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 514:src/core_armv8mbl.h **** 
 515:src/core_armv8mbl.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 516:src/core_armv8mbl.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 517:src/core_armv8mbl.h **** 
 518:src/core_armv8mbl.h **** #define SCB_ICSR_STTNS_Pos                 24U                                            /*!< SCB 
 519:src/core_armv8mbl.h **** #define SCB_ICSR_STTNS_Msk                 (1UL << SCB_ICSR_STTNS_Pos)                    /*!< SCB 
 520:src/core_armv8mbl.h **** 
 521:src/core_armv8mbl.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 522:src/core_armv8mbl.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 523:src/core_armv8mbl.h **** 
 524:src/core_armv8mbl.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 525:src/core_armv8mbl.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 526:src/core_armv8mbl.h **** 
 527:src/core_armv8mbl.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 528:src/core_armv8mbl.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 529:src/core_armv8mbl.h **** 
 530:src/core_armv8mbl.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 531:src/core_armv8mbl.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 532:src/core_armv8mbl.h **** 
 533:src/core_armv8mbl.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 534:src/core_armv8mbl.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 535:src/core_armv8mbl.h **** 
 536:src/core_armv8mbl.h **** #if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
 537:src/core_armv8mbl.h **** /* SCB Vector Table Offset Register Definitions */
 538:src/core_armv8mbl.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 539:src/core_armv8mbl.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 540:src/core_armv8mbl.h **** #endif
 541:src/core_armv8mbl.h **** 
 542:src/core_armv8mbl.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 543:src/core_armv8mbl.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 544:src/core_armv8mbl.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 545:src/core_armv8mbl.h **** 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 11


 546:src/core_armv8mbl.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 547:src/core_armv8mbl.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 548:src/core_armv8mbl.h **** 
 549:src/core_armv8mbl.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 550:src/core_armv8mbl.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 551:src/core_armv8mbl.h **** 
 552:src/core_armv8mbl.h **** #define SCB_AIRCR_PRIS_Pos                 14U                                            /*!< SCB 
 553:src/core_armv8mbl.h **** #define SCB_AIRCR_PRIS_Msk                 (1UL << SCB_AIRCR_PRIS_Pos)                    /*!< SCB 
 554:src/core_armv8mbl.h **** 
 555:src/core_armv8mbl.h **** #define SCB_AIRCR_BFHFNMINS_Pos            13U                                            /*!< SCB 
 556:src/core_armv8mbl.h **** #define SCB_AIRCR_BFHFNMINS_Msk            (1UL << SCB_AIRCR_BFHFNMINS_Pos)               /*!< SCB 
 557:src/core_armv8mbl.h **** 
 558:src/core_armv8mbl.h **** #define SCB_AIRCR_SYSRESETREQS_Pos          3U                                            /*!< SCB 
 559:src/core_armv8mbl.h **** #define SCB_AIRCR_SYSRESETREQS_Msk         (1UL << SCB_AIRCR_SYSRESETREQS_Pos)            /*!< SCB 
 560:src/core_armv8mbl.h **** 
 561:src/core_armv8mbl.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 562:src/core_armv8mbl.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 563:src/core_armv8mbl.h **** 
 564:src/core_armv8mbl.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 565:src/core_armv8mbl.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 566:src/core_armv8mbl.h **** 
 567:src/core_armv8mbl.h **** /* SCB System Control Register Definitions */
 568:src/core_armv8mbl.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 569:src/core_armv8mbl.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 570:src/core_armv8mbl.h **** 
 571:src/core_armv8mbl.h **** #define SCB_SCR_SLEEPDEEPS_Pos              3U                                            /*!< SCB 
 572:src/core_armv8mbl.h **** #define SCB_SCR_SLEEPDEEPS_Msk             (1UL << SCB_SCR_SLEEPDEEPS_Pos)                /*!< SCB 
 573:src/core_armv8mbl.h **** 
 574:src/core_armv8mbl.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 575:src/core_armv8mbl.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 576:src/core_armv8mbl.h **** 
 577:src/core_armv8mbl.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 578:src/core_armv8mbl.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 579:src/core_armv8mbl.h **** 
 580:src/core_armv8mbl.h **** /* SCB Configuration Control Register Definitions */
 581:src/core_armv8mbl.h **** #define SCB_CCR_BP_Pos                     18U                                            /*!< SCB 
 582:src/core_armv8mbl.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 583:src/core_armv8mbl.h **** 
 584:src/core_armv8mbl.h **** #define SCB_CCR_IC_Pos                     17U                                            /*!< SCB 
 585:src/core_armv8mbl.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 586:src/core_armv8mbl.h **** 
 587:src/core_armv8mbl.h **** #define SCB_CCR_DC_Pos                     16U                                            /*!< SCB 
 588:src/core_armv8mbl.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
 589:src/core_armv8mbl.h **** 
 590:src/core_armv8mbl.h **** #define SCB_CCR_STKOFHFNMIGN_Pos           10U                                            /*!< SCB 
 591:src/core_armv8mbl.h **** #define SCB_CCR_STKOFHFNMIGN_Msk           (1UL << SCB_CCR_STKOFHFNMIGN_Pos)              /*!< SCB 
 592:src/core_armv8mbl.h **** 
 593:src/core_armv8mbl.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 594:src/core_armv8mbl.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 595:src/core_armv8mbl.h **** 
 596:src/core_armv8mbl.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 597:src/core_armv8mbl.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 598:src/core_armv8mbl.h **** 
 599:src/core_armv8mbl.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 600:src/core_armv8mbl.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 601:src/core_armv8mbl.h **** 
 602:src/core_armv8mbl.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 12


 603:src/core_armv8mbl.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 604:src/core_armv8mbl.h **** 
 605:src/core_armv8mbl.h **** /* SCB System Handler Control and State Register Definitions */
 606:src/core_armv8mbl.h **** #define SCB_SHCSR_HARDFAULTPENDED_Pos      21U                                            /*!< SCB 
 607:src/core_armv8mbl.h **** #define SCB_SHCSR_HARDFAULTPENDED_Msk      (1UL << SCB_SHCSR_HARDFAULTPENDED_Pos)         /*!< SCB 
 608:src/core_armv8mbl.h **** 
 609:src/core_armv8mbl.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 610:src/core_armv8mbl.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 611:src/core_armv8mbl.h **** 
 612:src/core_armv8mbl.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 613:src/core_armv8mbl.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 614:src/core_armv8mbl.h **** 
 615:src/core_armv8mbl.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 616:src/core_armv8mbl.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 617:src/core_armv8mbl.h **** 
 618:src/core_armv8mbl.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 619:src/core_armv8mbl.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 620:src/core_armv8mbl.h **** 
 621:src/core_armv8mbl.h **** #define SCB_SHCSR_NMIACT_Pos                5U                                            /*!< SCB 
 622:src/core_armv8mbl.h **** #define SCB_SHCSR_NMIACT_Msk               (1UL << SCB_SHCSR_NMIACT_Pos)                  /*!< SCB 
 623:src/core_armv8mbl.h **** 
 624:src/core_armv8mbl.h **** #define SCB_SHCSR_HARDFAULTACT_Pos          2U                                            /*!< SCB 
 625:src/core_armv8mbl.h **** #define SCB_SHCSR_HARDFAULTACT_Msk         (1UL << SCB_SHCSR_HARDFAULTACT_Pos)            /*!< SCB 
 626:src/core_armv8mbl.h **** 
 627:src/core_armv8mbl.h **** /*@} end of group CMSIS_SCB */
 628:src/core_armv8mbl.h **** 
 629:src/core_armv8mbl.h **** 
 630:src/core_armv8mbl.h **** /**
 631:src/core_armv8mbl.h ****   \ingroup  CMSIS_core_register
 632:src/core_armv8mbl.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 633:src/core_armv8mbl.h ****   \brief    Type definitions for the System Timer Registers.
 634:src/core_armv8mbl.h ****   @{
 635:src/core_armv8mbl.h ****  */
 636:src/core_armv8mbl.h **** 
 637:src/core_armv8mbl.h **** /**
 638:src/core_armv8mbl.h ****   \brief  Structure type to access the System Timer (SysTick).
 639:src/core_armv8mbl.h ****  */
 640:src/core_armv8mbl.h **** typedef struct
 641:src/core_armv8mbl.h **** {
 642:src/core_armv8mbl.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 643:src/core_armv8mbl.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 644:src/core_armv8mbl.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 645:src/core_armv8mbl.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 646:src/core_armv8mbl.h **** } SysTick_Type;
 647:src/core_armv8mbl.h **** 
 648:src/core_armv8mbl.h **** /* SysTick Control / Status Register Definitions */
 649:src/core_armv8mbl.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 650:src/core_armv8mbl.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 651:src/core_armv8mbl.h **** 
 652:src/core_armv8mbl.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 653:src/core_armv8mbl.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 654:src/core_armv8mbl.h **** 
 655:src/core_armv8mbl.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 656:src/core_armv8mbl.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 657:src/core_armv8mbl.h **** 
 658:src/core_armv8mbl.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 659:src/core_armv8mbl.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 13


 660:src/core_armv8mbl.h **** 
 661:src/core_armv8mbl.h **** /* SysTick Reload Register Definitions */
 662:src/core_armv8mbl.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 663:src/core_armv8mbl.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 664:src/core_armv8mbl.h **** 
 665:src/core_armv8mbl.h **** /* SysTick Current Register Definitions */
 666:src/core_armv8mbl.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 667:src/core_armv8mbl.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 668:src/core_armv8mbl.h **** 
 669:src/core_armv8mbl.h **** /* SysTick Calibration Register Definitions */
 670:src/core_armv8mbl.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 671:src/core_armv8mbl.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 672:src/core_armv8mbl.h **** 
 673:src/core_armv8mbl.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 674:src/core_armv8mbl.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 675:src/core_armv8mbl.h **** 
 676:src/core_armv8mbl.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 677:src/core_armv8mbl.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 678:src/core_armv8mbl.h **** 
 679:src/core_armv8mbl.h **** /*@} end of group CMSIS_SysTick */
 680:src/core_armv8mbl.h **** 
 681:src/core_armv8mbl.h **** 
 682:src/core_armv8mbl.h **** /**
 683:src/core_armv8mbl.h ****   \ingroup  CMSIS_core_register
 684:src/core_armv8mbl.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 685:src/core_armv8mbl.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 686:src/core_armv8mbl.h ****   @{
 687:src/core_armv8mbl.h ****  */
 688:src/core_armv8mbl.h **** 
 689:src/core_armv8mbl.h **** /**
 690:src/core_armv8mbl.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 691:src/core_armv8mbl.h ****  */
 692:src/core_armv8mbl.h **** typedef struct
 693:src/core_armv8mbl.h **** {
 694:src/core_armv8mbl.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 695:src/core_armv8mbl.h ****         uint32_t RESERVED0[6U];
 696:src/core_armv8mbl.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 697:src/core_armv8mbl.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 698:src/core_armv8mbl.h ****         uint32_t RESERVED1[1U];
 699:src/core_armv8mbl.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 700:src/core_armv8mbl.h ****         uint32_t RESERVED2[1U];
 701:src/core_armv8mbl.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 702:src/core_armv8mbl.h ****         uint32_t RESERVED3[1U];
 703:src/core_armv8mbl.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 704:src/core_armv8mbl.h ****         uint32_t RESERVED4[1U];
 705:src/core_armv8mbl.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 706:src/core_armv8mbl.h ****         uint32_t RESERVED5[1U];
 707:src/core_armv8mbl.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 708:src/core_armv8mbl.h ****         uint32_t RESERVED6[1U];
 709:src/core_armv8mbl.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 710:src/core_armv8mbl.h ****         uint32_t RESERVED7[1U];
 711:src/core_armv8mbl.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 712:src/core_armv8mbl.h ****         uint32_t RESERVED8[1U];
 713:src/core_armv8mbl.h ****   __IOM uint32_t COMP4;                  /*!< Offset: 0x060 (R/W)  Comparator Register 4 */
 714:src/core_armv8mbl.h ****         uint32_t RESERVED9[1U];
 715:src/core_armv8mbl.h ****   __IOM uint32_t FUNCTION4;              /*!< Offset: 0x068 (R/W)  Function Register 4 */
 716:src/core_armv8mbl.h ****         uint32_t RESERVED10[1U];
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 14


 717:src/core_armv8mbl.h ****   __IOM uint32_t COMP5;                  /*!< Offset: 0x070 (R/W)  Comparator Register 5 */
 718:src/core_armv8mbl.h ****         uint32_t RESERVED11[1U];
 719:src/core_armv8mbl.h ****   __IOM uint32_t FUNCTION5;              /*!< Offset: 0x078 (R/W)  Function Register 5 */
 720:src/core_armv8mbl.h ****         uint32_t RESERVED12[1U];
 721:src/core_armv8mbl.h ****   __IOM uint32_t COMP6;                  /*!< Offset: 0x080 (R/W)  Comparator Register 6 */
 722:src/core_armv8mbl.h ****         uint32_t RESERVED13[1U];
 723:src/core_armv8mbl.h ****   __IOM uint32_t FUNCTION6;              /*!< Offset: 0x088 (R/W)  Function Register 6 */
 724:src/core_armv8mbl.h ****         uint32_t RESERVED14[1U];
 725:src/core_armv8mbl.h ****   __IOM uint32_t COMP7;                  /*!< Offset: 0x090 (R/W)  Comparator Register 7 */
 726:src/core_armv8mbl.h ****         uint32_t RESERVED15[1U];
 727:src/core_armv8mbl.h ****   __IOM uint32_t FUNCTION7;              /*!< Offset: 0x098 (R/W)  Function Register 7 */
 728:src/core_armv8mbl.h ****         uint32_t RESERVED16[1U];
 729:src/core_armv8mbl.h ****   __IOM uint32_t COMP8;                  /*!< Offset: 0x0A0 (R/W)  Comparator Register 8 */
 730:src/core_armv8mbl.h ****         uint32_t RESERVED17[1U];
 731:src/core_armv8mbl.h ****   __IOM uint32_t FUNCTION8;              /*!< Offset: 0x0A8 (R/W)  Function Register 8 */
 732:src/core_armv8mbl.h ****         uint32_t RESERVED18[1U];
 733:src/core_armv8mbl.h ****   __IOM uint32_t COMP9;                  /*!< Offset: 0x0B0 (R/W)  Comparator Register 9 */
 734:src/core_armv8mbl.h ****         uint32_t RESERVED19[1U];
 735:src/core_armv8mbl.h ****   __IOM uint32_t FUNCTION9;              /*!< Offset: 0x0B8 (R/W)  Function Register 9 */
 736:src/core_armv8mbl.h ****         uint32_t RESERVED20[1U];
 737:src/core_armv8mbl.h ****   __IOM uint32_t COMP10;                 /*!< Offset: 0x0C0 (R/W)  Comparator Register 10 */
 738:src/core_armv8mbl.h ****         uint32_t RESERVED21[1U];
 739:src/core_armv8mbl.h ****   __IOM uint32_t FUNCTION10;             /*!< Offset: 0x0C8 (R/W)  Function Register 10 */
 740:src/core_armv8mbl.h ****         uint32_t RESERVED22[1U];
 741:src/core_armv8mbl.h ****   __IOM uint32_t COMP11;                 /*!< Offset: 0x0D0 (R/W)  Comparator Register 11 */
 742:src/core_armv8mbl.h ****         uint32_t RESERVED23[1U];
 743:src/core_armv8mbl.h ****   __IOM uint32_t FUNCTION11;             /*!< Offset: 0x0D8 (R/W)  Function Register 11 */
 744:src/core_armv8mbl.h ****         uint32_t RESERVED24[1U];
 745:src/core_armv8mbl.h ****   __IOM uint32_t COMP12;                 /*!< Offset: 0x0E0 (R/W)  Comparator Register 12 */
 746:src/core_armv8mbl.h ****         uint32_t RESERVED25[1U];
 747:src/core_armv8mbl.h ****   __IOM uint32_t FUNCTION12;             /*!< Offset: 0x0E8 (R/W)  Function Register 12 */
 748:src/core_armv8mbl.h ****         uint32_t RESERVED26[1U];
 749:src/core_armv8mbl.h ****   __IOM uint32_t COMP13;                 /*!< Offset: 0x0F0 (R/W)  Comparator Register 13 */
 750:src/core_armv8mbl.h ****         uint32_t RESERVED27[1U];
 751:src/core_armv8mbl.h ****   __IOM uint32_t FUNCTION13;             /*!< Offset: 0x0F8 (R/W)  Function Register 13 */
 752:src/core_armv8mbl.h ****         uint32_t RESERVED28[1U];
 753:src/core_armv8mbl.h ****   __IOM uint32_t COMP14;                 /*!< Offset: 0x100 (R/W)  Comparator Register 14 */
 754:src/core_armv8mbl.h ****         uint32_t RESERVED29[1U];
 755:src/core_armv8mbl.h ****   __IOM uint32_t FUNCTION14;             /*!< Offset: 0x108 (R/W)  Function Register 14 */
 756:src/core_armv8mbl.h ****         uint32_t RESERVED30[1U];
 757:src/core_armv8mbl.h ****   __IOM uint32_t COMP15;                 /*!< Offset: 0x110 (R/W)  Comparator Register 15 */
 758:src/core_armv8mbl.h ****         uint32_t RESERVED31[1U];
 759:src/core_armv8mbl.h ****   __IOM uint32_t FUNCTION15;             /*!< Offset: 0x118 (R/W)  Function Register 15 */
 760:src/core_armv8mbl.h **** } DWT_Type;
 761:src/core_armv8mbl.h **** 
 762:src/core_armv8mbl.h **** /* DWT Control Register Definitions */
 763:src/core_armv8mbl.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 764:src/core_armv8mbl.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 765:src/core_armv8mbl.h **** 
 766:src/core_armv8mbl.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 767:src/core_armv8mbl.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 768:src/core_armv8mbl.h **** 
 769:src/core_armv8mbl.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 770:src/core_armv8mbl.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 771:src/core_armv8mbl.h **** 
 772:src/core_armv8mbl.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 773:src/core_armv8mbl.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 15


 774:src/core_armv8mbl.h **** 
 775:src/core_armv8mbl.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 776:src/core_armv8mbl.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 777:src/core_armv8mbl.h **** 
 778:src/core_armv8mbl.h **** /* DWT Comparator Function Register Definitions */
 779:src/core_armv8mbl.h **** #define DWT_FUNCTION_ID_Pos                27U                                         /*!< DWT FUN
 780:src/core_armv8mbl.h **** #define DWT_FUNCTION_ID_Msk                (0x1FUL << DWT_FUNCTION_ID_Pos)             /*!< DWT FUN
 781:src/core_armv8mbl.h **** 
 782:src/core_armv8mbl.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
 783:src/core_armv8mbl.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 784:src/core_armv8mbl.h **** 
 785:src/core_armv8mbl.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
 786:src/core_armv8mbl.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 787:src/core_armv8mbl.h **** 
 788:src/core_armv8mbl.h **** #define DWT_FUNCTION_ACTION_Pos             4U                                         /*!< DWT FUN
 789:src/core_armv8mbl.h **** #define DWT_FUNCTION_ACTION_Msk            (0x3UL << DWT_FUNCTION_ACTION_Pos)          /*!< DWT FUN
 790:src/core_armv8mbl.h **** 
 791:src/core_armv8mbl.h **** #define DWT_FUNCTION_MATCH_Pos              0U                                         /*!< DWT FUN
 792:src/core_armv8mbl.h **** #define DWT_FUNCTION_MATCH_Msk             (0xFUL /*<< DWT_FUNCTION_MATCH_Pos*/)       /*!< DWT FUN
 793:src/core_armv8mbl.h **** 
 794:src/core_armv8mbl.h **** /*@}*/ /* end of group CMSIS_DWT */
 795:src/core_armv8mbl.h **** 
 796:src/core_armv8mbl.h **** 
 797:src/core_armv8mbl.h **** /**
 798:src/core_armv8mbl.h ****   \ingroup  CMSIS_core_register
 799:src/core_armv8mbl.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 800:src/core_armv8mbl.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
 801:src/core_armv8mbl.h ****   @{
 802:src/core_armv8mbl.h ****  */
 803:src/core_armv8mbl.h **** 
 804:src/core_armv8mbl.h **** /**
 805:src/core_armv8mbl.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
 806:src/core_armv8mbl.h ****  */
 807:src/core_armv8mbl.h **** typedef struct
 808:src/core_armv8mbl.h **** {
 809:src/core_armv8mbl.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 810:src/core_armv8mbl.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 811:src/core_armv8mbl.h ****         uint32_t RESERVED0[2U];
 812:src/core_armv8mbl.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 813:src/core_armv8mbl.h ****         uint32_t RESERVED1[55U];
 814:src/core_armv8mbl.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 815:src/core_armv8mbl.h ****         uint32_t RESERVED2[131U];
 816:src/core_armv8mbl.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 817:src/core_armv8mbl.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 818:src/core_armv8mbl.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 819:src/core_armv8mbl.h ****         uint32_t RESERVED3[759U];
 820:src/core_armv8mbl.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 821:src/core_armv8mbl.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
 822:src/core_armv8mbl.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
 823:src/core_armv8mbl.h ****         uint32_t RESERVED4[1U];
 824:src/core_armv8mbl.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
 825:src/core_armv8mbl.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
 826:src/core_armv8mbl.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
 827:src/core_armv8mbl.h ****         uint32_t RESERVED5[39U];
 828:src/core_armv8mbl.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
 829:src/core_armv8mbl.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
 830:src/core_armv8mbl.h ****         uint32_t RESERVED7[8U];
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 16


 831:src/core_armv8mbl.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
 832:src/core_armv8mbl.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
 833:src/core_armv8mbl.h **** } TPI_Type;
 834:src/core_armv8mbl.h **** 
 835:src/core_armv8mbl.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
 836:src/core_armv8mbl.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
 837:src/core_armv8mbl.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
 838:src/core_armv8mbl.h **** 
 839:src/core_armv8mbl.h **** /* TPI Selected Pin Protocol Register Definitions */
 840:src/core_armv8mbl.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
 841:src/core_armv8mbl.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
 842:src/core_armv8mbl.h **** 
 843:src/core_armv8mbl.h **** /* TPI Formatter and Flush Status Register Definitions */
 844:src/core_armv8mbl.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
 845:src/core_armv8mbl.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
 846:src/core_armv8mbl.h **** 
 847:src/core_armv8mbl.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
 848:src/core_armv8mbl.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
 849:src/core_armv8mbl.h **** 
 850:src/core_armv8mbl.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
 851:src/core_armv8mbl.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
 852:src/core_armv8mbl.h **** 
 853:src/core_armv8mbl.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
 854:src/core_armv8mbl.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
 855:src/core_armv8mbl.h **** 
 856:src/core_armv8mbl.h **** /* TPI Formatter and Flush Control Register Definitions */
 857:src/core_armv8mbl.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
 858:src/core_armv8mbl.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
 859:src/core_armv8mbl.h **** 
 860:src/core_armv8mbl.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
 861:src/core_armv8mbl.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
 862:src/core_armv8mbl.h **** 
 863:src/core_armv8mbl.h **** /* TPI TRIGGER Register Definitions */
 864:src/core_armv8mbl.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
 865:src/core_armv8mbl.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
 866:src/core_armv8mbl.h **** 
 867:src/core_armv8mbl.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
 868:src/core_armv8mbl.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
 869:src/core_armv8mbl.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
 870:src/core_armv8mbl.h **** 
 871:src/core_armv8mbl.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
 872:src/core_armv8mbl.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
 873:src/core_armv8mbl.h **** 
 874:src/core_armv8mbl.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
 875:src/core_armv8mbl.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
 876:src/core_armv8mbl.h **** 
 877:src/core_armv8mbl.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
 878:src/core_armv8mbl.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
 879:src/core_armv8mbl.h **** 
 880:src/core_armv8mbl.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
 881:src/core_armv8mbl.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
 882:src/core_armv8mbl.h **** 
 883:src/core_armv8mbl.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
 884:src/core_armv8mbl.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
 885:src/core_armv8mbl.h **** 
 886:src/core_armv8mbl.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
 887:src/core_armv8mbl.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 17


 888:src/core_armv8mbl.h **** 
 889:src/core_armv8mbl.h **** /* TPI ITATBCTR2 Register Definitions */
 890:src/core_armv8mbl.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
 891:src/core_armv8mbl.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
 892:src/core_armv8mbl.h **** 
 893:src/core_armv8mbl.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
 894:src/core_armv8mbl.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
 895:src/core_armv8mbl.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
 896:src/core_armv8mbl.h **** 
 897:src/core_armv8mbl.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
 898:src/core_armv8mbl.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
 899:src/core_armv8mbl.h **** 
 900:src/core_armv8mbl.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
 901:src/core_armv8mbl.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
 902:src/core_armv8mbl.h **** 
 903:src/core_armv8mbl.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
 904:src/core_armv8mbl.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
 905:src/core_armv8mbl.h **** 
 906:src/core_armv8mbl.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
 907:src/core_armv8mbl.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
 908:src/core_armv8mbl.h **** 
 909:src/core_armv8mbl.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
 910:src/core_armv8mbl.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
 911:src/core_armv8mbl.h **** 
 912:src/core_armv8mbl.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
 913:src/core_armv8mbl.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
 914:src/core_armv8mbl.h **** 
 915:src/core_armv8mbl.h **** /* TPI ITATBCTR0 Register Definitions */
 916:src/core_armv8mbl.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
 917:src/core_armv8mbl.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
 918:src/core_armv8mbl.h **** 
 919:src/core_armv8mbl.h **** /* TPI Integration Mode Control Register Definitions */
 920:src/core_armv8mbl.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
 921:src/core_armv8mbl.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
 922:src/core_armv8mbl.h **** 
 923:src/core_armv8mbl.h **** /* TPI DEVID Register Definitions */
 924:src/core_armv8mbl.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
 925:src/core_armv8mbl.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
 926:src/core_armv8mbl.h **** 
 927:src/core_armv8mbl.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
 928:src/core_armv8mbl.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
 929:src/core_armv8mbl.h **** 
 930:src/core_armv8mbl.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
 931:src/core_armv8mbl.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
 932:src/core_armv8mbl.h **** 
 933:src/core_armv8mbl.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
 934:src/core_armv8mbl.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
 935:src/core_armv8mbl.h **** 
 936:src/core_armv8mbl.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
 937:src/core_armv8mbl.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
 938:src/core_armv8mbl.h **** 
 939:src/core_armv8mbl.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
 940:src/core_armv8mbl.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
 941:src/core_armv8mbl.h **** 
 942:src/core_armv8mbl.h **** /* TPI DEVTYPE Register Definitions */
 943:src/core_armv8mbl.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
 944:src/core_armv8mbl.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 18


 945:src/core_armv8mbl.h **** 
 946:src/core_armv8mbl.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
 947:src/core_armv8mbl.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
 948:src/core_armv8mbl.h **** 
 949:src/core_armv8mbl.h **** /*@}*/ /* end of group CMSIS_TPI */
 950:src/core_armv8mbl.h **** 
 951:src/core_armv8mbl.h **** 
 952:src/core_armv8mbl.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
 953:src/core_armv8mbl.h **** /**
 954:src/core_armv8mbl.h ****   \ingroup  CMSIS_core_register
 955:src/core_armv8mbl.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
 956:src/core_armv8mbl.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
 957:src/core_armv8mbl.h ****   @{
 958:src/core_armv8mbl.h ****  */
 959:src/core_armv8mbl.h **** 
 960:src/core_armv8mbl.h **** /**
 961:src/core_armv8mbl.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
 962:src/core_armv8mbl.h ****  */
 963:src/core_armv8mbl.h **** typedef struct
 964:src/core_armv8mbl.h **** {
 965:src/core_armv8mbl.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
 966:src/core_armv8mbl.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
 967:src/core_armv8mbl.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region Number Register */
 968:src/core_armv8mbl.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
 969:src/core_armv8mbl.h ****   __IOM uint32_t RLAR;                   /*!< Offset: 0x010 (R/W)  MPU Region Limit Address Registe
 970:src/core_armv8mbl.h ****         uint32_t RESERVED0[7U];
 971:src/core_armv8mbl.h ****   __IOM uint32_t MAIR0;                  /*!< Offset: 0x030 (R/W)  MPU Memory Attribute Indirection
 972:src/core_armv8mbl.h ****   __IOM uint32_t MAIR1;                  /*!< Offset: 0x034 (R/W)  MPU Memory Attribute Indirection
 973:src/core_armv8mbl.h **** } MPU_Type;
 974:src/core_armv8mbl.h **** 
 975:src/core_armv8mbl.h **** /* MPU Type Register Definitions */
 976:src/core_armv8mbl.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
 977:src/core_armv8mbl.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 978:src/core_armv8mbl.h **** 
 979:src/core_armv8mbl.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
 980:src/core_armv8mbl.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 981:src/core_armv8mbl.h **** 
 982:src/core_armv8mbl.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
 983:src/core_armv8mbl.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
 984:src/core_armv8mbl.h **** 
 985:src/core_armv8mbl.h **** /* MPU Control Register Definitions */
 986:src/core_armv8mbl.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
 987:src/core_armv8mbl.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 988:src/core_armv8mbl.h **** 
 989:src/core_armv8mbl.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
 990:src/core_armv8mbl.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 991:src/core_armv8mbl.h **** 
 992:src/core_armv8mbl.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
 993:src/core_armv8mbl.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
 994:src/core_armv8mbl.h **** 
 995:src/core_armv8mbl.h **** /* MPU Region Number Register Definitions */
 996:src/core_armv8mbl.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
 997:src/core_armv8mbl.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
 998:src/core_armv8mbl.h **** 
 999:src/core_armv8mbl.h **** /* MPU Region Base Address Register Definitions */
1000:src/core_armv8mbl.h **** #define MPU_RBAR_BASE_Pos                   5U                                            /*!< MPU 
1001:src/core_armv8mbl.h **** #define MPU_RBAR_BASE_Msk                  (0x7FFFFFFUL << MPU_RBAR_BASE_Pos)             /*!< MPU 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 19


1002:src/core_armv8mbl.h **** 
1003:src/core_armv8mbl.h **** #define MPU_RBAR_SH_Pos                     3U                                            /*!< MPU 
1004:src/core_armv8mbl.h **** #define MPU_RBAR_SH_Msk                    (0x3UL << MPU_RBAR_SH_Pos)                     /*!< MPU 
1005:src/core_armv8mbl.h **** 
1006:src/core_armv8mbl.h **** #define MPU_RBAR_AP_Pos                     1U                                            /*!< MPU 
1007:src/core_armv8mbl.h **** #define MPU_RBAR_AP_Msk                    (0x3UL << MPU_RBAR_AP_Pos)                     /*!< MPU 
1008:src/core_armv8mbl.h **** 
1009:src/core_armv8mbl.h **** #define MPU_RBAR_XN_Pos                     0U                                            /*!< MPU 
1010:src/core_armv8mbl.h **** #define MPU_RBAR_XN_Msk                    (01UL /*<< MPU_RBAR_XN_Pos*/)                  /*!< MPU 
1011:src/core_armv8mbl.h **** 
1012:src/core_armv8mbl.h **** /* MPU Region Limit Address Register Definitions */
1013:src/core_armv8mbl.h **** #define MPU_RLAR_LIMIT_Pos                  5U                                            /*!< MPU 
1014:src/core_armv8mbl.h **** #define MPU_RLAR_LIMIT_Msk                 (0x7FFFFFFUL << MPU_RLAR_LIMIT_Pos)            /*!< MPU 
1015:src/core_armv8mbl.h **** 
1016:src/core_armv8mbl.h **** #define MPU_RLAR_AttrIndx_Pos               1U                                            /*!< MPU 
1017:src/core_armv8mbl.h **** #define MPU_RLAR_AttrIndx_Msk              (0x7UL << MPU_RLAR_AttrIndx_Pos)               /*!< MPU 
1018:src/core_armv8mbl.h **** 
1019:src/core_armv8mbl.h **** #define MPU_RLAR_EN_Pos                     0U                                            /*!< MPU 
1020:src/core_armv8mbl.h **** #define MPU_RLAR_EN_Msk                    (1UL /*<< MPU_RLAR_EN_Pos*/)                   /*!< MPU 
1021:src/core_armv8mbl.h **** 
1022:src/core_armv8mbl.h **** /* MPU Memory Attribute Indirection Register 0 Definitions */
1023:src/core_armv8mbl.h **** #define MPU_MAIR0_Attr3_Pos                24U                                            /*!< MPU 
1024:src/core_armv8mbl.h **** #define MPU_MAIR0_Attr3_Msk                (0xFFUL << MPU_MAIR0_Attr3_Pos)                /*!< MPU 
1025:src/core_armv8mbl.h **** 
1026:src/core_armv8mbl.h **** #define MPU_MAIR0_Attr2_Pos                16U                                            /*!< MPU 
1027:src/core_armv8mbl.h **** #define MPU_MAIR0_Attr2_Msk                (0xFFUL << MPU_MAIR0_Attr2_Pos)                /*!< MPU 
1028:src/core_armv8mbl.h **** 
1029:src/core_armv8mbl.h **** #define MPU_MAIR0_Attr1_Pos                 8U                                            /*!< MPU 
1030:src/core_armv8mbl.h **** #define MPU_MAIR0_Attr1_Msk                (0xFFUL << MPU_MAIR0_Attr1_Pos)                /*!< MPU 
1031:src/core_armv8mbl.h **** 
1032:src/core_armv8mbl.h **** #define MPU_MAIR0_Attr0_Pos                 0U                                            /*!< MPU 
1033:src/core_armv8mbl.h **** #define MPU_MAIR0_Attr0_Msk                (0xFFUL /*<< MPU_MAIR0_Attr0_Pos*/)            /*!< MPU 
1034:src/core_armv8mbl.h **** 
1035:src/core_armv8mbl.h **** /* MPU Memory Attribute Indirection Register 1 Definitions */
1036:src/core_armv8mbl.h **** #define MPU_MAIR1_Attr7_Pos                24U                                            /*!< MPU 
1037:src/core_armv8mbl.h **** #define MPU_MAIR1_Attr7_Msk                (0xFFUL << MPU_MAIR1_Attr7_Pos)                /*!< MPU 
1038:src/core_armv8mbl.h **** 
1039:src/core_armv8mbl.h **** #define MPU_MAIR1_Attr6_Pos                16U                                            /*!< MPU 
1040:src/core_armv8mbl.h **** #define MPU_MAIR1_Attr6_Msk                (0xFFUL << MPU_MAIR1_Attr6_Pos)                /*!< MPU 
1041:src/core_armv8mbl.h **** 
1042:src/core_armv8mbl.h **** #define MPU_MAIR1_Attr5_Pos                 8U                                            /*!< MPU 
1043:src/core_armv8mbl.h **** #define MPU_MAIR1_Attr5_Msk                (0xFFUL << MPU_MAIR1_Attr5_Pos)                /*!< MPU 
1044:src/core_armv8mbl.h **** 
1045:src/core_armv8mbl.h **** #define MPU_MAIR1_Attr4_Pos                 0U                                            /*!< MPU 
1046:src/core_armv8mbl.h **** #define MPU_MAIR1_Attr4_Msk                (0xFFUL /*<< MPU_MAIR1_Attr4_Pos*/)            /*!< MPU 
1047:src/core_armv8mbl.h **** 
1048:src/core_armv8mbl.h **** /*@} end of group CMSIS_MPU */
1049:src/core_armv8mbl.h **** #endif
1050:src/core_armv8mbl.h **** 
1051:src/core_armv8mbl.h **** 
1052:src/core_armv8mbl.h **** #if defined (__SAU_PRESENT) && (__SAU_PRESENT == 1U)
1053:src/core_armv8mbl.h **** /**
1054:src/core_armv8mbl.h ****   \ingroup  CMSIS_core_register
1055:src/core_armv8mbl.h ****   \defgroup CMSIS_SAU     Security Attribution Unit (SAU)
1056:src/core_armv8mbl.h ****   \brief    Type definitions for the Security Attribution Unit (SAU)
1057:src/core_armv8mbl.h ****   @{
1058:src/core_armv8mbl.h ****  */
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 20


1059:src/core_armv8mbl.h **** 
1060:src/core_armv8mbl.h **** /**
1061:src/core_armv8mbl.h ****   \brief  Structure type to access the Security Attribution Unit (SAU).
1062:src/core_armv8mbl.h ****  */
1063:src/core_armv8mbl.h **** typedef struct
1064:src/core_armv8mbl.h **** {
1065:src/core_armv8mbl.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SAU Control Register */
1066:src/core_armv8mbl.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x004 (R/ )  SAU Type Register */
1067:src/core_armv8mbl.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  SAU Region Number Register */
1068:src/core_armv8mbl.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  SAU Region Base Address Register
1069:src/core_armv8mbl.h ****   __IOM uint32_t RLAR;                   /*!< Offset: 0x010 (R/W)  SAU Region Limit Address Registe
1070:src/core_armv8mbl.h **** } SAU_Type;
1071:src/core_armv8mbl.h **** 
1072:src/core_armv8mbl.h **** /* SAU Control Register Definitions */
1073:src/core_armv8mbl.h **** #define SAU_CTRL_ALLNS_Pos                  1U                                            /*!< SAU 
1074:src/core_armv8mbl.h **** #define SAU_CTRL_ALLNS_Msk                 (1UL << SAU_CTRL_ALLNS_Pos)                    /*!< SAU 
1075:src/core_armv8mbl.h **** 
1076:src/core_armv8mbl.h **** #define SAU_CTRL_ENABLE_Pos                 0U                                            /*!< SAU 
1077:src/core_armv8mbl.h **** #define SAU_CTRL_ENABLE_Msk                (1UL /*<< SAU_CTRL_ENABLE_Pos*/)               /*!< SAU 
1078:src/core_armv8mbl.h **** 
1079:src/core_armv8mbl.h **** /* SAU Type Register Definitions */
1080:src/core_armv8mbl.h **** #define SAU_TYPE_SREGION_Pos                0U                                            /*!< SAU 
1081:src/core_armv8mbl.h **** #define SAU_TYPE_SREGION_Msk               (0xFFUL /*<< SAU_TYPE_SREGION_Pos*/)           /*!< SAU 
1082:src/core_armv8mbl.h **** 
1083:src/core_armv8mbl.h **** /* SAU Region Number Register Definitions */
1084:src/core_armv8mbl.h **** #define SAU_RNR_REGION_Pos                  0U                                            /*!< SAU 
1085:src/core_armv8mbl.h **** #define SAU_RNR_REGION_Msk                 (0xFFUL /*<< SAU_RNR_REGION_Pos*/)             /*!< SAU 
1086:src/core_armv8mbl.h **** 
1087:src/core_armv8mbl.h **** /* SAU Region Base Address Register Definitions */
1088:src/core_armv8mbl.h **** #define SAU_RBAR_BADDR_Pos                  5U                                            /*!< SAU 
1089:src/core_armv8mbl.h **** #define SAU_RBAR_BADDR_Msk                 (0x7FFFFFFUL << SAU_RBAR_BADDR_Pos)            /*!< SAU 
1090:src/core_armv8mbl.h **** 
1091:src/core_armv8mbl.h **** /* SAU Region Limit Address Register Definitions */
1092:src/core_armv8mbl.h **** #define SAU_RLAR_LADDR_Pos                  5U                                            /*!< SAU 
1093:src/core_armv8mbl.h **** #define SAU_RLAR_LADDR_Msk                 (0x7FFFFFFUL << SAU_RLAR_LADDR_Pos)            /*!< SAU 
1094:src/core_armv8mbl.h **** 
1095:src/core_armv8mbl.h **** #define SAU_RLAR_NSC_Pos                    1U                                            /*!< SAU 
1096:src/core_armv8mbl.h **** #define SAU_RLAR_NSC_Msk                   (1UL << SAU_RLAR_NSC_Pos)                      /*!< SAU 
1097:src/core_armv8mbl.h **** 
1098:src/core_armv8mbl.h **** #define SAU_RLAR_ENABLE_Pos                 0U                                            /*!< SAU 
1099:src/core_armv8mbl.h **** #define SAU_RLAR_ENABLE_Msk                (1UL /*<< SAU_RLAR_ENABLE_Pos*/)               /*!< SAU 
1100:src/core_armv8mbl.h **** 
1101:src/core_armv8mbl.h **** /*@} end of group CMSIS_SAU */
1102:src/core_armv8mbl.h **** #endif
1103:src/core_armv8mbl.h **** 
1104:src/core_armv8mbl.h **** 
1105:src/core_armv8mbl.h **** /**
1106:src/core_armv8mbl.h ****   \ingroup  CMSIS_core_register
1107:src/core_armv8mbl.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1108:src/core_armv8mbl.h ****   \brief    Type definitions for the Core Debug Registers
1109:src/core_armv8mbl.h ****   @{
1110:src/core_armv8mbl.h ****  */
1111:src/core_armv8mbl.h **** 
1112:src/core_armv8mbl.h **** /**
1113:src/core_armv8mbl.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1114:src/core_armv8mbl.h ****  */
1115:src/core_armv8mbl.h **** typedef struct
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 21


1116:src/core_armv8mbl.h **** {
1117:src/core_armv8mbl.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1118:src/core_armv8mbl.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1119:src/core_armv8mbl.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1120:src/core_armv8mbl.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1121:src/core_armv8mbl.h ****         uint32_t RESERVED4[1U];
1122:src/core_armv8mbl.h ****   __IOM uint32_t DAUTHCTRL;              /*!< Offset: 0x014 (R/W)  Debug Authentication Control Reg
1123:src/core_armv8mbl.h ****   __IOM uint32_t DSCSR;                  /*!< Offset: 0x018 (R/W)  Debug Security Control and Statu
1124:src/core_armv8mbl.h **** } CoreDebug_Type;
1125:src/core_armv8mbl.h **** 
1126:src/core_armv8mbl.h **** /* Debug Halting Control and Status Register Definitions */
1127:src/core_armv8mbl.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1128:src/core_armv8mbl.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1129:src/core_armv8mbl.h **** 
1130:src/core_armv8mbl.h **** #define CoreDebug_DHCSR_S_RESTART_ST_Pos   26U                                            /*!< Core
1131:src/core_armv8mbl.h **** #define CoreDebug_DHCSR_S_RESTART_ST_Msk   (1UL << CoreDebug_DHCSR_S_RESTART_ST_Pos)      /*!< Core
1132:src/core_armv8mbl.h **** 
1133:src/core_armv8mbl.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1134:src/core_armv8mbl.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1135:src/core_armv8mbl.h **** 
1136:src/core_armv8mbl.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1137:src/core_armv8mbl.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1138:src/core_armv8mbl.h **** 
1139:src/core_armv8mbl.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1140:src/core_armv8mbl.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1141:src/core_armv8mbl.h **** 
1142:src/core_armv8mbl.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1143:src/core_armv8mbl.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1144:src/core_armv8mbl.h **** 
1145:src/core_armv8mbl.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1146:src/core_armv8mbl.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1147:src/core_armv8mbl.h **** 
1148:src/core_armv8mbl.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1149:src/core_armv8mbl.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1150:src/core_armv8mbl.h **** 
1151:src/core_armv8mbl.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1152:src/core_armv8mbl.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1153:src/core_armv8mbl.h **** 
1154:src/core_armv8mbl.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1155:src/core_armv8mbl.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1156:src/core_armv8mbl.h **** 
1157:src/core_armv8mbl.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1158:src/core_armv8mbl.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1159:src/core_armv8mbl.h **** 
1160:src/core_armv8mbl.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1161:src/core_armv8mbl.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1162:src/core_armv8mbl.h **** 
1163:src/core_armv8mbl.h **** /* Debug Core Register Selector Register Definitions */
1164:src/core_armv8mbl.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1165:src/core_armv8mbl.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1166:src/core_armv8mbl.h **** 
1167:src/core_armv8mbl.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1168:src/core_armv8mbl.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1169:src/core_armv8mbl.h **** 
1170:src/core_armv8mbl.h **** /* Debug Exception and Monitor Control Register */
1171:src/core_armv8mbl.h **** #define CoreDebug_DEMCR_DWTENA_Pos         24U                                            /*!< Core
1172:src/core_armv8mbl.h **** #define CoreDebug_DEMCR_DWTENA_Msk         (1UL << CoreDebug_DEMCR_DWTENA_Pos)            /*!< Core
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 22


1173:src/core_armv8mbl.h **** 
1174:src/core_armv8mbl.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1175:src/core_armv8mbl.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1176:src/core_armv8mbl.h **** 
1177:src/core_armv8mbl.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1178:src/core_armv8mbl.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1179:src/core_armv8mbl.h **** 
1180:src/core_armv8mbl.h **** /* Debug Authentication Control Register Definitions */
1181:src/core_armv8mbl.h **** #define CoreDebug_DAUTHCTRL_INTSPNIDEN_Pos  3U                                            /*!< Core
1182:src/core_armv8mbl.h **** #define CoreDebug_DAUTHCTRL_INTSPNIDEN_Msk (1UL << CoreDebug_DAUTHCTRL_INTSPNIDEN_Pos)    /*!< Core
1183:src/core_armv8mbl.h **** 
1184:src/core_armv8mbl.h **** #define CoreDebug_DAUTHCTRL_SPNIDENSEL_Pos  2U                                            /*!< Core
1185:src/core_armv8mbl.h **** #define CoreDebug_DAUTHCTRL_SPNIDENSEL_Msk (1UL << CoreDebug_DAUTHCTRL_SPNIDENSEL_Pos)    /*!< Core
1186:src/core_armv8mbl.h **** 
1187:src/core_armv8mbl.h **** #define CoreDebug_DAUTHCTRL_INTSPIDEN_Pos   1U                                            /*!< Core
1188:src/core_armv8mbl.h **** #define CoreDebug_DAUTHCTRL_INTSPIDEN_Msk  (1UL << CoreDebug_DAUTHCTRL_INTSPIDEN_Pos)     /*!< Core
1189:src/core_armv8mbl.h **** 
1190:src/core_armv8mbl.h **** #define CoreDebug_DAUTHCTRL_SPIDENSEL_Pos   0U                                            /*!< Core
1191:src/core_armv8mbl.h **** #define CoreDebug_DAUTHCTRL_SPIDENSEL_Msk  (1UL /*<< CoreDebug_DAUTHCTRL_SPIDENSEL_Pos*/) /*!< Core
1192:src/core_armv8mbl.h **** 
1193:src/core_armv8mbl.h **** /* Debug Security Control and Status Register Definitions */
1194:src/core_armv8mbl.h **** #define CoreDebug_DSCSR_CDS_Pos            16U                                            /*!< Core
1195:src/core_armv8mbl.h **** #define CoreDebug_DSCSR_CDS_Msk            (1UL << CoreDebug_DSCSR_CDS_Pos)               /*!< Core
1196:src/core_armv8mbl.h **** 
1197:src/core_armv8mbl.h **** #define CoreDebug_DSCSR_SBRSEL_Pos          1U                                            /*!< Core
1198:src/core_armv8mbl.h **** #define CoreDebug_DSCSR_SBRSEL_Msk         (1UL << CoreDebug_DSCSR_SBRSEL_Pos)            /*!< Core
1199:src/core_armv8mbl.h **** 
1200:src/core_armv8mbl.h **** #define CoreDebug_DSCSR_SBRSELEN_Pos        0U                                            /*!< Core
1201:src/core_armv8mbl.h **** #define CoreDebug_DSCSR_SBRSELEN_Msk       (1UL /*<< CoreDebug_DSCSR_SBRSELEN_Pos*/)      /*!< Core
1202:src/core_armv8mbl.h **** 
1203:src/core_armv8mbl.h **** /*@} end of group CMSIS_CoreDebug */
1204:src/core_armv8mbl.h **** 
1205:src/core_armv8mbl.h **** 
1206:src/core_armv8mbl.h **** /**
1207:src/core_armv8mbl.h ****   \ingroup    CMSIS_core_register
1208:src/core_armv8mbl.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1209:src/core_armv8mbl.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1210:src/core_armv8mbl.h ****   @{
1211:src/core_armv8mbl.h ****  */
1212:src/core_armv8mbl.h **** 
1213:src/core_armv8mbl.h **** /**
1214:src/core_armv8mbl.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1215:src/core_armv8mbl.h ****   \param[in] field  Name of the register bit field.
1216:src/core_armv8mbl.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1217:src/core_armv8mbl.h ****   \return           Masked and shifted value.
1218:src/core_armv8mbl.h **** */
1219:src/core_armv8mbl.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1220:src/core_armv8mbl.h **** 
1221:src/core_armv8mbl.h **** /**
1222:src/core_armv8mbl.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1223:src/core_armv8mbl.h ****   \param[in] field  Name of the register bit field.
1224:src/core_armv8mbl.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1225:src/core_armv8mbl.h ****   \return           Masked and shifted bit field value.
1226:src/core_armv8mbl.h **** */
1227:src/core_armv8mbl.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1228:src/core_armv8mbl.h **** 
1229:src/core_armv8mbl.h **** /*@} end of group CMSIS_core_bitfield */
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 23


1230:src/core_armv8mbl.h **** 
1231:src/core_armv8mbl.h **** 
1232:src/core_armv8mbl.h **** /**
1233:src/core_armv8mbl.h ****   \ingroup    CMSIS_core_register
1234:src/core_armv8mbl.h ****   \defgroup   CMSIS_core_base     Core Definitions
1235:src/core_armv8mbl.h ****   \brief      Definitions for base addresses, unions, and structures.
1236:src/core_armv8mbl.h ****   @{
1237:src/core_armv8mbl.h ****  */
1238:src/core_armv8mbl.h **** 
1239:src/core_armv8mbl.h **** /* Memory mapping of ARMv8MBL Hardware */
1240:src/core_armv8mbl.h ****   #define SCS_BASE            (0xE000E000UL)                             /*!< System Control Space 
1241:src/core_armv8mbl.h ****   #define DWT_BASE            (0xE0001000UL)                             /*!< DWT Base Address */
1242:src/core_armv8mbl.h ****   #define TPI_BASE            (0xE0040000UL)                             /*!< TPI Base Address */
1243:src/core_armv8mbl.h ****   #define CoreDebug_BASE      (0xE000EDF0UL)                             /*!< Core Debug Base Addre
1244:src/core_armv8mbl.h ****   #define SysTick_BASE        (SCS_BASE +  0x0010UL)                     /*!< SysTick Base Address 
1245:src/core_armv8mbl.h ****   #define NVIC_BASE           (SCS_BASE +  0x0100UL)                     /*!< NVIC Base Address */
1246:src/core_armv8mbl.h ****   #define SCB_BASE            (SCS_BASE +  0x0D00UL)                     /*!< System Control Block 
1247:src/core_armv8mbl.h **** 
1248:src/core_armv8mbl.h **** 
1249:src/core_armv8mbl.h ****   #define SCB                 ((SCB_Type       *)     SCB_BASE         ) /*!< SCB configuration str
1250:src/core_armv8mbl.h ****   #define SysTick             ((SysTick_Type   *)     SysTick_BASE     ) /*!< SysTick configuration
1251:src/core_armv8mbl.h ****   #define NVIC                ((NVIC_Type      *)     NVIC_BASE        ) /*!< NVIC configuration st
1252:src/core_armv8mbl.h ****   #define DWT                 ((DWT_Type       *)     DWT_BASE         ) /*!< DWT configuration str
1253:src/core_armv8mbl.h ****   #define TPI                 ((TPI_Type       *)     TPI_BASE         ) /*!< TPI configuration str
1254:src/core_armv8mbl.h ****   #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE   ) /*!< Core Debug configurat
1255:src/core_armv8mbl.h **** 
1256:src/core_armv8mbl.h ****   #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1257:src/core_armv8mbl.h ****     #define MPU_BASE          (SCS_BASE +  0x0D90UL)                     /*!< Memory Protection Uni
1258:src/core_armv8mbl.h ****     #define MPU               ((MPU_Type       *)     MPU_BASE         ) /*!< Memory Protection Uni
1259:src/core_armv8mbl.h ****   #endif
1260:src/core_armv8mbl.h **** 
1261:src/core_armv8mbl.h ****   #if defined (__SAU_PRESENT) && (__SAU_PRESENT == 1U)
1262:src/core_armv8mbl.h ****     #define SAU_BASE          (SCS_BASE +  0x0DD0UL)                     /*!< Security Attribution 
1263:src/core_armv8mbl.h ****     #define SAU               ((SAU_Type       *)     SAU_BASE         ) /*!< Security Attribution 
1264:src/core_armv8mbl.h ****   #endif
1265:src/core_armv8mbl.h **** 
1266:src/core_armv8mbl.h **** 
1267:src/core_armv8mbl.h **** 
1268:src/core_armv8mbl.h **** 
1269:src/core_armv8mbl.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
1270:src/core_armv8mbl.h **** 
1271:src/core_armv8mbl.h **** 
1272:src/core_armv8mbl.h **** 
1273:src/core_armv8mbl.h ****   #define SCS_BASE_NS         (0xE002E000UL)                             /*!< System Control Space 
1274:src/core_armv8mbl.h ****   #define CoreDebug_BASE_NS   (0xE002EDF0UL)                             /*!< Core Debug Base Addre
1275:src/core_armv8mbl.h ****   #define SysTick_BASE_NS     (SCS_BASE_NS +  0x0010UL)                  /*!< SysTick Base Address 
1276:src/core_armv8mbl.h ****   #define NVIC_BASE_NS        (SCS_BASE_NS +  0x0100UL)                  /*!< NVIC Base Address    
1277:src/core_armv8mbl.h ****   #define SCB_BASE_NS         (SCS_BASE_NS +  0x0D00UL)                  /*!< System Control Block 
1278:src/core_armv8mbl.h ****   #define SCB_NS              ((SCB_Type       *)     SCB_BASE_NS      ) /*!< SCB configuration str
1279:src/core_armv8mbl.h ****   #define SysTick_NS          ((SysTick_Type   *)     SysTick_BASE_NS  ) /*!< SysTick configuration
1280:src/core_armv8mbl.h ****   #define NVIC_NS             ((NVIC_Type      *)     NVIC_BASE_NS     ) /*!< NVIC configuration st
1281:src/core_armv8mbl.h ****   #define CoreDebug_NS        ((CoreDebug_Type *)     CoreDebug_BASE_NS) /*!< Core Debug configurat
1282:src/core_armv8mbl.h **** 
1283:src/core_armv8mbl.h ****   #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1284:src/core_armv8mbl.h ****     #define MPU_BASE_NS       (SCS_BASE_NS +  0x0D90UL)                  /*!< Memory Protection Uni
1285:src/core_armv8mbl.h ****     #define MPU_NS            ((MPU_Type       *)     MPU_BASE_NS      ) /*!< Memory Protection Uni
1286:src/core_armv8mbl.h ****   #endif
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 24


1287:src/core_armv8mbl.h **** 
1288:src/core_armv8mbl.h **** #endif /* defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U) */
1289:src/core_armv8mbl.h **** /*@} */
1290:src/core_armv8mbl.h **** 
1291:src/core_armv8mbl.h **** 
1292:src/core_armv8mbl.h **** 
1293:src/core_armv8mbl.h **** /*******************************************************************************
1294:src/core_armv8mbl.h ****  *                Hardware Abstraction Layer
1295:src/core_armv8mbl.h ****   Core Function Interface contains:
1296:src/core_armv8mbl.h ****   - Core NVIC Functions
1297:src/core_armv8mbl.h ****   - Core SysTick Functions
1298:src/core_armv8mbl.h ****   - Core Register Access Functions
1299:src/core_armv8mbl.h ****  ******************************************************************************/
1300:src/core_armv8mbl.h **** /**
1301:src/core_armv8mbl.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1302:src/core_armv8mbl.h **** */
1303:src/core_armv8mbl.h **** 
1304:src/core_armv8mbl.h **** 
1305:src/core_armv8mbl.h **** 
1306:src/core_armv8mbl.h **** /* ##########################   NVIC functions  #################################### */
1307:src/core_armv8mbl.h **** /**
1308:src/core_armv8mbl.h ****   \ingroup  CMSIS_Core_FunctionInterface
1309:src/core_armv8mbl.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1310:src/core_armv8mbl.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1311:src/core_armv8mbl.h ****   @{
1312:src/core_armv8mbl.h ****  */
1313:src/core_armv8mbl.h **** 
1314:src/core_armv8mbl.h **** /* Interrupt Priorities are WORD accessible only under ARMv6M                   */
1315:src/core_armv8mbl.h **** /* The following MACROS handle generation of the register offset and byte masks */
1316:src/core_armv8mbl.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
1317:src/core_armv8mbl.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
1318:src/core_armv8mbl.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
1319:src/core_armv8mbl.h **** 
1320:src/core_armv8mbl.h **** 
1321:src/core_armv8mbl.h **** /**
1322:src/core_armv8mbl.h ****   \brief   Enable Interrupt
1323:src/core_armv8mbl.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1324:src/core_armv8mbl.h ****   \param [in]      IRQn  Device specific interrupt number.
1325:src/core_armv8mbl.h ****   \note    IRQn must not be nagative.
1326:src/core_armv8mbl.h ****  */
1327:src/core_armv8mbl.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1328:src/core_armv8mbl.h **** {
1329:src/core_armv8mbl.h ****   if ((int32_t)(IRQn) >= 0)
1330:src/core_armv8mbl.h ****   {
1331:src/core_armv8mbl.h ****     NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) &
1332:src/core_armv8mbl.h ****   }
1333:src/core_armv8mbl.h **** }
1334:src/core_armv8mbl.h **** 
1335:src/core_armv8mbl.h **** 
1336:src/core_armv8mbl.h **** /**
1337:src/core_armv8mbl.h ****   \brief   Disable Interrupt
1338:src/core_armv8mbl.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1339:src/core_armv8mbl.h ****   \param [in]      IRQn  Device specific interrupt number.
1340:src/core_armv8mbl.h ****   \note    IRQn must not be nagative.
1341:src/core_armv8mbl.h ****  */
1342:src/core_armv8mbl.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1343:src/core_armv8mbl.h **** {
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 25


1344:src/core_armv8mbl.h ****   if ((int32_t)(IRQn) >= 0)
1345:src/core_armv8mbl.h ****   {
1346:src/core_armv8mbl.h ****     NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) &
1347:src/core_armv8mbl.h ****   }
1348:src/core_armv8mbl.h **** }
1349:src/core_armv8mbl.h **** 
1350:src/core_armv8mbl.h **** 
1351:src/core_armv8mbl.h **** /**
1352:src/core_armv8mbl.h ****   \brief   Get Pending Interrupt
1353:src/core_armv8mbl.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1354:src/core_armv8mbl.h ****   \param [in]      IRQn  Device specific interrupt number.
1355:src/core_armv8mbl.h ****   \return             0  Interrupt status is not pending.
1356:src/core_armv8mbl.h ****   \return             1  Interrupt status is pending.
1357:src/core_armv8mbl.h ****   \note    IRQn must not be nagative.
1358:src/core_armv8mbl.h ****  */
1359:src/core_armv8mbl.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1360:src/core_armv8mbl.h **** {
1361:src/core_armv8mbl.h ****   if ((int32_t)(IRQn) >= 0)
1362:src/core_armv8mbl.h ****   {
1363:src/core_armv8mbl.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32
1364:src/core_armv8mbl.h ****   }
1365:src/core_armv8mbl.h ****   else
1366:src/core_armv8mbl.h ****   {
1367:src/core_armv8mbl.h ****     return(0U);
1368:src/core_armv8mbl.h ****   }
1369:src/core_armv8mbl.h **** }
1370:src/core_armv8mbl.h **** 
1371:src/core_armv8mbl.h **** 
1372:src/core_armv8mbl.h **** /**
1373:src/core_armv8mbl.h ****   \brief   Set Pending Interrupt
1374:src/core_armv8mbl.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1375:src/core_armv8mbl.h ****   \param [in]      IRQn  Device specific interrupt number.
1376:src/core_armv8mbl.h ****   \note    IRQn must not be nagative.
1377:src/core_armv8mbl.h ****  */
1378:src/core_armv8mbl.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1379:src/core_armv8mbl.h **** {
1380:src/core_armv8mbl.h ****   if ((int32_t)(IRQn) >= 0)
1381:src/core_armv8mbl.h ****   {
1382:src/core_armv8mbl.h ****     NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) &
1383:src/core_armv8mbl.h ****   }
1384:src/core_armv8mbl.h **** }
1385:src/core_armv8mbl.h **** 
1386:src/core_armv8mbl.h **** 
1387:src/core_armv8mbl.h **** /**
1388:src/core_armv8mbl.h ****   \brief   Clear Pending Interrupt
1389:src/core_armv8mbl.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1390:src/core_armv8mbl.h ****   \param [in]      IRQn  Device specific interrupt number.
1391:src/core_armv8mbl.h ****   \note    IRQn must not be nagative.
1392:src/core_armv8mbl.h ****  */
1393:src/core_armv8mbl.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1394:src/core_armv8mbl.h **** {
1395:src/core_armv8mbl.h ****   if ((int32_t)(IRQn) >= 0)
1396:src/core_armv8mbl.h ****   {
1397:src/core_armv8mbl.h ****     NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) &
1398:src/core_armv8mbl.h ****   }
1399:src/core_armv8mbl.h **** }
1400:src/core_armv8mbl.h **** 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 26


1401:src/core_armv8mbl.h **** 
1402:src/core_armv8mbl.h **** /**
1403:src/core_armv8mbl.h ****   \brief   Get Active Interrupt
1404:src/core_armv8mbl.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1405:src/core_armv8mbl.h ****   \param [in]      IRQn  Device specific interrupt number.
1406:src/core_armv8mbl.h ****   \return             0  Interrupt status is not active.
1407:src/core_armv8mbl.h ****   \return             1  Interrupt status is active.
1408:src/core_armv8mbl.h ****   \note    IRQn must not be nagative.
1409:src/core_armv8mbl.h ****  */
1410:src/core_armv8mbl.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1411:src/core_armv8mbl.h **** {
1412:src/core_armv8mbl.h ****   if ((int32_t)(IRQn) >= 0)
1413:src/core_armv8mbl.h ****   {
1414:src/core_armv8mbl.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32
1415:src/core_armv8mbl.h ****   }
1416:src/core_armv8mbl.h ****   else
1417:src/core_armv8mbl.h ****   {
1418:src/core_armv8mbl.h ****     return(0U);
1419:src/core_armv8mbl.h ****   }
1420:src/core_armv8mbl.h **** }
1421:src/core_armv8mbl.h **** 
1422:src/core_armv8mbl.h **** 
1423:src/core_armv8mbl.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
1424:src/core_armv8mbl.h **** /**
1425:src/core_armv8mbl.h ****   \brief   Get Interrupt Target State
1426:src/core_armv8mbl.h ****   \details Reads the interrupt target field in the NVIC and returns the interrupt target bit for th
1427:src/core_armv8mbl.h ****   \param [in]      IRQn  Device specific interrupt number.
1428:src/core_armv8mbl.h ****   \return             0  if interrupt is assigned to Secure
1429:src/core_armv8mbl.h ****   \return             1  if interrupt is assigned to Non Secure
1430:src/core_armv8mbl.h ****   \note    IRQn must not be nagative.
1431:src/core_armv8mbl.h ****  */
1432:src/core_armv8mbl.h **** __STATIC_INLINE uint32_t NVIC_GetTargetState(IRQn_Type IRQn)
1433:src/core_armv8mbl.h **** {
1434:src/core_armv8mbl.h ****   if ((int32_t)(IRQn) >= 0)
1435:src/core_armv8mbl.h ****   {
1436:src/core_armv8mbl.h ****     return((uint32_t)(((NVIC->ITNS[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32
1437:src/core_armv8mbl.h ****   }
1438:src/core_armv8mbl.h ****   else
1439:src/core_armv8mbl.h ****   {
1440:src/core_armv8mbl.h ****     return(0U);
1441:src/core_armv8mbl.h ****   }
1442:src/core_armv8mbl.h **** }
1443:src/core_armv8mbl.h **** 
1444:src/core_armv8mbl.h **** 
1445:src/core_armv8mbl.h **** /**
1446:src/core_armv8mbl.h ****   \brief   Set Interrupt Target State
1447:src/core_armv8mbl.h ****   \details Sets the interrupt target field in the NVIC and returns the interrupt target bit for the
1448:src/core_armv8mbl.h ****   \param [in]      IRQn  Device specific interrupt number.
1449:src/core_armv8mbl.h ****   \return             0  if interrupt is assigned to Secure
1450:src/core_armv8mbl.h ****                       1  if interrupt is assigned to Non Secure
1451:src/core_armv8mbl.h ****   \note    IRQn must not be nagative.
1452:src/core_armv8mbl.h ****  */
1453:src/core_armv8mbl.h **** __STATIC_INLINE uint32_t NVIC_SetTargetState(IRQn_Type IRQn)
1454:src/core_armv8mbl.h **** {
1455:src/core_armv8mbl.h ****   if ((int32_t)(IRQn) >= 0)
1456:src/core_armv8mbl.h ****   {
1457:src/core_armv8mbl.h ****     NVIC->ITNS[(((uint32_t)(int32_t)IRQn) >> 5UL)] |=  ((uint32_t)(1UL << (((uint32_t)(int32_t)IRQn
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 27


1458:src/core_armv8mbl.h ****     return((uint32_t)(((NVIC->ITNS[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32
1459:src/core_armv8mbl.h ****   }
1460:src/core_armv8mbl.h ****   else
1461:src/core_armv8mbl.h ****   {
1462:src/core_armv8mbl.h ****     return(0U);
1463:src/core_armv8mbl.h ****   }
1464:src/core_armv8mbl.h **** }
1465:src/core_armv8mbl.h **** 
1466:src/core_armv8mbl.h **** 
1467:src/core_armv8mbl.h **** /**
1468:src/core_armv8mbl.h ****   \brief   Clear Interrupt Target State
1469:src/core_armv8mbl.h ****   \details Clears the interrupt target field in the NVIC and returns the interrupt target bit for t
1470:src/core_armv8mbl.h ****   \param [in]      IRQn  Device specific interrupt number.
1471:src/core_armv8mbl.h ****   \return             0  if interrupt is assigned to Secure
1472:src/core_armv8mbl.h ****                       1  if interrupt is assigned to Non Secure
1473:src/core_armv8mbl.h ****   \note    IRQn must not be nagative.
1474:src/core_armv8mbl.h ****  */
1475:src/core_armv8mbl.h **** __STATIC_INLINE uint32_t NVIC_ClearTargetState(IRQn_Type IRQn)
1476:src/core_armv8mbl.h **** {
1477:src/core_armv8mbl.h ****   if ((int32_t)(IRQn) >= 0)
1478:src/core_armv8mbl.h ****   {
1479:src/core_armv8mbl.h ****     NVIC->ITNS[(((uint32_t)(int32_t)IRQn) >> 5UL)] &= ~((uint32_t)(1UL << (((uint32_t)(int32_t)IRQn
1480:src/core_armv8mbl.h ****     return((uint32_t)(((NVIC->ITNS[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32
1481:src/core_armv8mbl.h ****   }
1482:src/core_armv8mbl.h ****   else
1483:src/core_armv8mbl.h ****   {
1484:src/core_armv8mbl.h ****     return(0U);
1485:src/core_armv8mbl.h ****   }
1486:src/core_armv8mbl.h **** }
1487:src/core_armv8mbl.h **** #endif /* defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U) */
1488:src/core_armv8mbl.h **** 
1489:src/core_armv8mbl.h **** 
1490:src/core_armv8mbl.h **** /**
1491:src/core_armv8mbl.h ****   \brief   Set Interrupt Priority
1492:src/core_armv8mbl.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1493:src/core_armv8mbl.h ****            The interrupt number can be positive to specify a device specific interrupt,
1494:src/core_armv8mbl.h ****            or negative to specify a processor exception.
1495:src/core_armv8mbl.h ****   \param [in]      IRQn  Interrupt number.
1496:src/core_armv8mbl.h ****   \param [in]  priority  Priority to set.
1497:src/core_armv8mbl.h ****   \note    The priority cannot be set for every processor exception.
1498:src/core_armv8mbl.h ****  */
1499:src/core_armv8mbl.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1500:src/core_armv8mbl.h **** {
  26              		.loc 1 1500 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 B0B5     		push	{r4, r5, r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 16
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 28


  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 0200     		movs	r2, r0
  44 0008 3960     		str	r1, [r7]
  45 000a FB1D     		adds	r3, r7, #7
  46 000c 1A70     		strb	r2, [r3]
1501:src/core_armv8mbl.h ****   if ((int32_t)(IRQn) >= 0)
  47              		.loc 1 1501 0
  48 000e FB1D     		adds	r3, r7, #7
  49 0010 1B78     		ldrb	r3, [r3]
  50 0012 7F2B     		cmp	r3, #127
  51 0014 28D8     		bhi	.L2
1502:src/core_armv8mbl.h ****   {
1503:src/core_armv8mbl.h ****     NVIC->IPR[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IPR[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn
  52              		.loc 1 1503 0
  53 0016 2F4C     		ldr	r4, .L5
  54 0018 FB1D     		adds	r3, r7, #7
  55 001a 1B78     		ldrb	r3, [r3]
  56 001c 5BB2     		sxtb	r3, r3
  57 001e 9B08     		lsrs	r3, r3, #2
  58 0020 2C49     		ldr	r1, .L5
  59 0022 FA1D     		adds	r2, r7, #7
  60 0024 1278     		ldrb	r2, [r2]
  61 0026 52B2     		sxtb	r2, r2
  62 0028 9208     		lsrs	r2, r2, #2
  63 002a C032     		adds	r2, r2, #192
  64 002c 9200     		lsls	r2, r2, #2
  65 002e 5258     		ldr	r2, [r2, r1]
  66 0030 F91D     		adds	r1, r7, #7
  67 0032 0978     		ldrb	r1, [r1]
  68 0034 0800     		movs	r0, r1
  69 0036 0321     		movs	r1, #3
  70 0038 0140     		ands	r1, r0
  71 003a C900     		lsls	r1, r1, #3
  72 003c FF20     		movs	r0, #255
  73 003e 8840     		lsls	r0, r0, r1
  74 0040 0100     		movs	r1, r0
  75 0042 C943     		mvns	r1, r1
  76 0044 1140     		ands	r1, r2
1504:src/core_armv8mbl.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  77              		.loc 1 1504 0
  78 0046 3A68     		ldr	r2, [r7]
  79 0048 9201     		lsls	r2, r2, #6
  80 004a FF20     		movs	r0, #255
  81 004c 1040     		ands	r0, r2
  82 004e FA1D     		adds	r2, r7, #7
  83 0050 1278     		ldrb	r2, [r2]
  84 0052 1500     		movs	r5, r2
  85 0054 0322     		movs	r2, #3
  86 0056 2A40     		ands	r2, r5
  87 0058 D200     		lsls	r2, r2, #3
  88 005a 9040     		lsls	r0, r0, r2
  89 005c 0200     		movs	r2, r0
1503:src/core_armv8mbl.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  90              		.loc 1 1503 0
  91 005e 0A43     		orrs	r2, r1
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 29


  92 0060 C033     		adds	r3, r3, #192
  93 0062 9B00     		lsls	r3, r3, #2
  94 0064 1A51     		str	r2, [r3, r4]
1505:src/core_armv8mbl.h ****   }
1506:src/core_armv8mbl.h ****   else
1507:src/core_armv8mbl.h ****   {
1508:src/core_armv8mbl.h ****     SCB->SHPR[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHPR[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn
1509:src/core_armv8mbl.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
1510:src/core_armv8mbl.h ****   }
1511:src/core_armv8mbl.h **** }
  95              		.loc 1 1511 0
  96 0066 31E0     		b	.L4
  97              	.L2:
1508:src/core_armv8mbl.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  98              		.loc 1 1508 0
  99 0068 1B4C     		ldr	r4, .L5+4
 100 006a FB1D     		adds	r3, r7, #7
 101 006c 1B78     		ldrb	r3, [r3]
 102 006e 1A00     		movs	r2, r3
 103 0070 0F23     		movs	r3, #15
 104 0072 1340     		ands	r3, r2
 105 0074 083B     		subs	r3, r3, #8
 106 0076 9908     		lsrs	r1, r3, #2
 107 0078 174A     		ldr	r2, .L5+4
 108 007a FB1D     		adds	r3, r7, #7
 109 007c 1B78     		ldrb	r3, [r3]
 110 007e 1800     		movs	r0, r3
 111 0080 0F23     		movs	r3, #15
 112 0082 0340     		ands	r3, r0
 113 0084 083B     		subs	r3, r3, #8
 114 0086 9B08     		lsrs	r3, r3, #2
 115 0088 0633     		adds	r3, r3, #6
 116 008a 9B00     		lsls	r3, r3, #2
 117 008c D318     		adds	r3, r2, r3
 118 008e 0433     		adds	r3, r3, #4
 119 0090 1B68     		ldr	r3, [r3]
 120 0092 FA1D     		adds	r2, r7, #7
 121 0094 1278     		ldrb	r2, [r2]
 122 0096 1000     		movs	r0, r2
 123 0098 0322     		movs	r2, #3
 124 009a 0240     		ands	r2, r0
 125 009c D200     		lsls	r2, r2, #3
 126 009e FF20     		movs	r0, #255
 127 00a0 9040     		lsls	r0, r0, r2
 128 00a2 0200     		movs	r2, r0
 129 00a4 D243     		mvns	r2, r2
 130 00a6 1A40     		ands	r2, r3
1509:src/core_armv8mbl.h ****   }
 131              		.loc 1 1509 0
 132 00a8 3B68     		ldr	r3, [r7]
 133 00aa 9B01     		lsls	r3, r3, #6
 134 00ac FF20     		movs	r0, #255
 135 00ae 1840     		ands	r0, r3
 136 00b0 FB1D     		adds	r3, r7, #7
 137 00b2 1B78     		ldrb	r3, [r3]
 138 00b4 1D00     		movs	r5, r3
 139 00b6 0323     		movs	r3, #3
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 30


 140 00b8 2B40     		ands	r3, r5
 141 00ba DB00     		lsls	r3, r3, #3
 142 00bc 9840     		lsls	r0, r0, r3
 143 00be 0300     		movs	r3, r0
1508:src/core_armv8mbl.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 144              		.loc 1 1508 0
 145 00c0 1A43     		orrs	r2, r3
 146 00c2 8B1D     		adds	r3, r1, #6
 147 00c4 9B00     		lsls	r3, r3, #2
 148 00c6 E318     		adds	r3, r4, r3
 149 00c8 0433     		adds	r3, r3, #4
 150 00ca 1A60     		str	r2, [r3]
 151              	.L4:
 152              		.loc 1 1511 0
 153 00cc C046     		nop
 154 00ce BD46     		mov	sp, r7
 155 00d0 02B0     		add	sp, sp, #8
 156              		@ sp needed
 157 00d2 B0BD     		pop	{r4, r5, r7, pc}
 158              	.L6:
 159              		.align	2
 160              	.L5:
 161 00d4 00E100E0 		.word	-536813312
 162 00d8 00ED00E0 		.word	-536810240
 163              		.cfi_endproc
 164              	.LFE48:
 165              		.size	NVIC_SetPriority, .-NVIC_SetPriority
 166              		.align	2
 167              		.code	16
 168              		.thumb_func
 169              		.type	SysTick_Config, %function
 170              	SysTick_Config:
 171              	.LFB62:
1512:src/core_armv8mbl.h **** 
1513:src/core_armv8mbl.h **** 
1514:src/core_armv8mbl.h **** /**
1515:src/core_armv8mbl.h ****   \brief   Get Interrupt Priority
1516:src/core_armv8mbl.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1517:src/core_armv8mbl.h ****            The interrupt number can be positive to specify a device specific interrupt,
1518:src/core_armv8mbl.h ****            or negative to specify a processor exception.
1519:src/core_armv8mbl.h ****   \param [in]   IRQn  Interrupt number.
1520:src/core_armv8mbl.h ****   \return             Interrupt Priority.
1521:src/core_armv8mbl.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1522:src/core_armv8mbl.h ****  */
1523:src/core_armv8mbl.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1524:src/core_armv8mbl.h **** {
1525:src/core_armv8mbl.h **** 
1526:src/core_armv8mbl.h ****   if ((int32_t)(IRQn) >= 0)
1527:src/core_armv8mbl.h ****   {
1528:src/core_armv8mbl.h ****     return((uint32_t)(((NVIC->IPR[ _IP_IDX(IRQn)] >> _BIT_SHIFT(IRQn) ) & (uint32_t)0xFFUL) >> (8U 
1529:src/core_armv8mbl.h ****   }
1530:src/core_armv8mbl.h ****   else
1531:src/core_armv8mbl.h ****   {
1532:src/core_armv8mbl.h ****     return((uint32_t)(((SCB->SHPR[_SHP_IDX(IRQn)] >> _BIT_SHIFT(IRQn) ) & (uint32_t)0xFFUL) >> (8U 
1533:src/core_armv8mbl.h ****   }
1534:src/core_armv8mbl.h **** }
1535:src/core_armv8mbl.h **** 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 31


1536:src/core_armv8mbl.h **** 
1537:src/core_armv8mbl.h **** /**
1538:src/core_armv8mbl.h ****   \brief   System Reset
1539:src/core_armv8mbl.h ****   \details Initiates a system reset request to reset the MCU.
1540:src/core_armv8mbl.h ****  */
1541:src/core_armv8mbl.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1542:src/core_armv8mbl.h **** {
1543:src/core_armv8mbl.h ****   __DSB();                                                          /* Ensure all outstanding memor
1544:src/core_armv8mbl.h ****                                                                        buffered write are completed
1545:src/core_armv8mbl.h ****   SCB->AIRCR  = ((0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1546:src/core_armv8mbl.h ****                  SCB_AIRCR_SYSRESETREQ_Msk);
1547:src/core_armv8mbl.h ****   __DSB();                                                          /* Ensure completion of memory 
1548:src/core_armv8mbl.h **** 
1549:src/core_armv8mbl.h ****   for(;;)                                                           /* wait until reset */
1550:src/core_armv8mbl.h ****   {
1551:src/core_armv8mbl.h ****     __NOP();
1552:src/core_armv8mbl.h ****   }
1553:src/core_armv8mbl.h **** }
1554:src/core_armv8mbl.h **** 
1555:src/core_armv8mbl.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
1556:src/core_armv8mbl.h **** /**
1557:src/core_armv8mbl.h ****   \brief   Enable Interrupt (non-secure)
1558:src/core_armv8mbl.h ****   \details Enables a device specific interrupt in the non-secure NVIC interrupt controller when in 
1559:src/core_armv8mbl.h ****   \param [in]      IRQn  Device specific interrupt number.
1560:src/core_armv8mbl.h ****   \note    IRQn must not be nagative.
1561:src/core_armv8mbl.h ****  */
1562:src/core_armv8mbl.h **** __STATIC_INLINE void TZ_NVIC_EnableIRQ_NS(IRQn_Type IRQn)
1563:src/core_armv8mbl.h **** {
1564:src/core_armv8mbl.h ****   if ((int32_t)(IRQn) >= 0)
1565:src/core_armv8mbl.h ****   {
1566:src/core_armv8mbl.h ****     NVIC_NS->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn
1567:src/core_armv8mbl.h ****   }
1568:src/core_armv8mbl.h **** }
1569:src/core_armv8mbl.h **** 
1570:src/core_armv8mbl.h **** 
1571:src/core_armv8mbl.h **** /**
1572:src/core_armv8mbl.h ****   \brief   Disable Interrupt (non-secure)
1573:src/core_armv8mbl.h ****   \details Disables a device specific interrupt in the non-secure NVIC interrupt controller when in
1574:src/core_armv8mbl.h ****   \param [in]      IRQn  Device specific interrupt number.
1575:src/core_armv8mbl.h ****   \note    IRQn must not be nagative.
1576:src/core_armv8mbl.h ****  */
1577:src/core_armv8mbl.h **** __STATIC_INLINE void TZ_NVIC_DisableIRQ_NS(IRQn_Type IRQn)
1578:src/core_armv8mbl.h **** {
1579:src/core_armv8mbl.h ****   if ((int32_t)(IRQn) >= 0)
1580:src/core_armv8mbl.h ****   {
1581:src/core_armv8mbl.h ****     NVIC_NS->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn
1582:src/core_armv8mbl.h ****   }
1583:src/core_armv8mbl.h **** }
1584:src/core_armv8mbl.h **** 
1585:src/core_armv8mbl.h **** 
1586:src/core_armv8mbl.h **** /**
1587:src/core_armv8mbl.h ****   \brief   Get Pending Interrupt (non-secure)
1588:src/core_armv8mbl.h ****   \details Reads the NVIC pending register in the non-secure NVIC when in secure state and returns 
1589:src/core_armv8mbl.h ****   \param [in]      IRQn  Device specific interrupt number.
1590:src/core_armv8mbl.h ****   \return             0  Interrupt status is not pending.
1591:src/core_armv8mbl.h ****   \return             1  Interrupt status is pending.
1592:src/core_armv8mbl.h ****   \note    IRQn must not be nagative.
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 32


1593:src/core_armv8mbl.h ****  */
1594:src/core_armv8mbl.h **** __STATIC_INLINE uint32_t TZ_NVIC_GetPendingIRQ_NS(IRQn_Type IRQn)
1595:src/core_armv8mbl.h **** {
1596:src/core_armv8mbl.h ****   if ((int32_t)(IRQn) >= 0)
1597:src/core_armv8mbl.h ****   {
1598:src/core_armv8mbl.h ****     return((uint32_t)(((NVIC_NS->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(in
1599:src/core_armv8mbl.h ****   }
1600:src/core_armv8mbl.h **** }
1601:src/core_armv8mbl.h **** 
1602:src/core_armv8mbl.h **** 
1603:src/core_armv8mbl.h **** /**
1604:src/core_armv8mbl.h ****   \brief   Set Pending Interrupt (non-secure)
1605:src/core_armv8mbl.h ****   \details Sets the pending bit of a device specific interrupt in the non-secure NVIC pending regis
1606:src/core_armv8mbl.h ****   \param [in]      IRQn  Device specific interrupt number.
1607:src/core_armv8mbl.h ****   \note    IRQn must not be nagative.
1608:src/core_armv8mbl.h ****  */
1609:src/core_armv8mbl.h **** __STATIC_INLINE void TZ_NVIC_SetPendingIRQ_NS(IRQn_Type IRQn)
1610:src/core_armv8mbl.h **** {
1611:src/core_armv8mbl.h ****   if ((int32_t)(IRQn) >= 0)
1612:src/core_armv8mbl.h ****   {
1613:src/core_armv8mbl.h ****     NVIC_NS->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn
1614:src/core_armv8mbl.h ****   }
1615:src/core_armv8mbl.h **** }
1616:src/core_armv8mbl.h **** 
1617:src/core_armv8mbl.h **** 
1618:src/core_armv8mbl.h **** /**
1619:src/core_armv8mbl.h ****   \brief   Clear Pending Interrupt (non-secure)
1620:src/core_armv8mbl.h ****   \details Clears the pending bit of a device specific interrupt in the non-secure NVIC pending reg
1621:src/core_armv8mbl.h ****   \param [in]      IRQn  Device specific interrupt number.
1622:src/core_armv8mbl.h ****   \note    IRQn must not be nagative.
1623:src/core_armv8mbl.h ****  */
1624:src/core_armv8mbl.h **** __STATIC_INLINE void TZ_NVIC_ClearPendingIRQ_NS(IRQn_Type IRQn)
1625:src/core_armv8mbl.h **** {
1626:src/core_armv8mbl.h ****   if ((int32_t)(IRQn) >= 0)
1627:src/core_armv8mbl.h ****   {
1628:src/core_armv8mbl.h ****     NVIC_NS->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn
1629:src/core_armv8mbl.h ****   }
1630:src/core_armv8mbl.h **** }
1631:src/core_armv8mbl.h **** 
1632:src/core_armv8mbl.h **** 
1633:src/core_armv8mbl.h **** /**
1634:src/core_armv8mbl.h ****   \brief   Get Active Interrupt (non-secure)
1635:src/core_armv8mbl.h ****   \details Reads the active register in non-secure NVIC when in secure state and returns the active
1636:src/core_armv8mbl.h ****   \param [in]      IRQn  Device specific interrupt number.
1637:src/core_armv8mbl.h ****   \return             0  Interrupt status is not active.
1638:src/core_armv8mbl.h ****   \return             1  Interrupt status is active.
1639:src/core_armv8mbl.h ****   \note    IRQn must not be nagative.
1640:src/core_armv8mbl.h ****  */
1641:src/core_armv8mbl.h **** __STATIC_INLINE uint32_t TZ_NVIC_GetActive_NS(IRQn_Type IRQn)
1642:src/core_armv8mbl.h **** {
1643:src/core_armv8mbl.h ****   if ((int32_t)(IRQn) >= 0)
1644:src/core_armv8mbl.h ****   {
1645:src/core_armv8mbl.h ****     return((uint32_t)(((NVIC_NS->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(in
1646:src/core_armv8mbl.h ****   }
1647:src/core_armv8mbl.h ****   else
1648:src/core_armv8mbl.h ****   {
1649:src/core_armv8mbl.h ****     return(0U);
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 33


1650:src/core_armv8mbl.h ****   }
1651:src/core_armv8mbl.h **** }
1652:src/core_armv8mbl.h **** 
1653:src/core_armv8mbl.h **** 
1654:src/core_armv8mbl.h **** /**
1655:src/core_armv8mbl.h ****   \brief   Set Interrupt Priority (non-secure)
1656:src/core_armv8mbl.h ****   \details Sets the priority of a non-secure device specific interrupt or a non-secure processor ex
1657:src/core_armv8mbl.h ****            The interrupt number can be positive to specify a device specific interrupt,
1658:src/core_armv8mbl.h ****            or negative to specify a processor exception.
1659:src/core_armv8mbl.h ****   \param [in]      IRQn  Interrupt number.
1660:src/core_armv8mbl.h ****   \param [in]  priority  Priority to set.
1661:src/core_armv8mbl.h ****   \note    The priority cannot be set for every non-secure processor exception.
1662:src/core_armv8mbl.h ****  */
1663:src/core_armv8mbl.h **** __STATIC_INLINE void TZ_NVIC_SetPriority_NS(IRQn_Type IRQn, uint32_t priority)
1664:src/core_armv8mbl.h **** {
1665:src/core_armv8mbl.h ****   if ((int32_t)(IRQn) >= 0)
1666:src/core_armv8mbl.h ****   {
1667:src/core_armv8mbl.h ****     NVIC_NS->IPR[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC_NS->IPR[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIF
1668:src/core_armv8mbl.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
1669:src/core_armv8mbl.h ****   }
1670:src/core_armv8mbl.h ****   else
1671:src/core_armv8mbl.h ****   {
1672:src/core_armv8mbl.h ****     SCB_NS->SHPR[_SHP_IDX(IRQn)] = ((uint32_t)(SCB_NS->SHPR[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIF
1673:src/core_armv8mbl.h ****        (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
1674:src/core_armv8mbl.h ****   }
1675:src/core_armv8mbl.h **** }
1676:src/core_armv8mbl.h **** 
1677:src/core_armv8mbl.h **** 
1678:src/core_armv8mbl.h **** /**
1679:src/core_armv8mbl.h ****   \brief   Get Interrupt Priority (non-secure)
1680:src/core_armv8mbl.h ****   \details Reads the priority of a non-secure device specific interrupt or a non-secure processor e
1681:src/core_armv8mbl.h ****            The interrupt number can be positive to specify a device specific interrupt,
1682:src/core_armv8mbl.h ****            or negative to specify a processor exception.
1683:src/core_armv8mbl.h ****   \param [in]   IRQn  Interrupt number.
1684:src/core_armv8mbl.h ****   \return             Interrupt Priority. Value is aligned automatically to the implemented priorit
1685:src/core_armv8mbl.h ****  */
1686:src/core_armv8mbl.h **** __STATIC_INLINE uint32_t TZ_NVIC_GetPriority_NS(IRQn_Type IRQn)
1687:src/core_armv8mbl.h **** {
1688:src/core_armv8mbl.h **** 
1689:src/core_armv8mbl.h ****   if ((int32_t)(IRQn) >= 0)
1690:src/core_armv8mbl.h ****   {
1691:src/core_armv8mbl.h ****     return((uint32_t)(((NVIC_NS->IPR[ _IP_IDX(IRQn)] >> _BIT_SHIFT(IRQn) ) & (uint32_t)0xFFUL) >> (
1692:src/core_armv8mbl.h ****   }
1693:src/core_armv8mbl.h ****   else
1694:src/core_armv8mbl.h ****   {
1695:src/core_armv8mbl.h ****     return((uint32_t)(((SCB_NS->SHPR[_SHP_IDX(IRQn)] >> _BIT_SHIFT(IRQn) ) & (uint32_t)0xFFUL) >> (
1696:src/core_armv8mbl.h ****   }
1697:src/core_armv8mbl.h **** }
1698:src/core_armv8mbl.h **** #endif /*  defined (__ARM_FEATURE_CMSE) &&(__ARM_FEATURE_CMSE == 3U) */
1699:src/core_armv8mbl.h **** 
1700:src/core_armv8mbl.h **** /*@} end of CMSIS_Core_NVICFunctions */
1701:src/core_armv8mbl.h **** 
1702:src/core_armv8mbl.h **** 
1703:src/core_armv8mbl.h **** /* ##########################  FPU functions  #################################### */
1704:src/core_armv8mbl.h **** /**
1705:src/core_armv8mbl.h ****   \ingroup  CMSIS_Core_FunctionInterface
1706:src/core_armv8mbl.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 34


1707:src/core_armv8mbl.h ****   \brief    Function that provides FPU type.
1708:src/core_armv8mbl.h ****   @{
1709:src/core_armv8mbl.h ****  */
1710:src/core_armv8mbl.h **** 
1711:src/core_armv8mbl.h **** /**
1712:src/core_armv8mbl.h ****   \brief   get FPU type
1713:src/core_armv8mbl.h ****   \details returns the FPU type
1714:src/core_armv8mbl.h ****   \returns
1715:src/core_armv8mbl.h ****    - \b  0: No FPU
1716:src/core_armv8mbl.h ****    - \b  1: Single precision FPU
1717:src/core_armv8mbl.h ****    - \b  2: Double + Single precision FPU
1718:src/core_armv8mbl.h ****  */
1719:src/core_armv8mbl.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
1720:src/core_armv8mbl.h **** {
1721:src/core_armv8mbl.h ****     return 0U;           /* No FPU */
1722:src/core_armv8mbl.h **** }
1723:src/core_armv8mbl.h **** 
1724:src/core_armv8mbl.h **** 
1725:src/core_armv8mbl.h **** /*@} end of CMSIS_Core_FpuFunctions */
1726:src/core_armv8mbl.h **** 
1727:src/core_armv8mbl.h **** 
1728:src/core_armv8mbl.h **** 
1729:src/core_armv8mbl.h **** /* ##########################   SAU functions  #################################### */
1730:src/core_armv8mbl.h **** /**
1731:src/core_armv8mbl.h ****   \ingroup  CMSIS_Core_FunctionInterface
1732:src/core_armv8mbl.h ****   \defgroup CMSIS_Core_SAUFunctions SAU Functions
1733:src/core_armv8mbl.h ****   \brief    Functions that configure the SAU.
1734:src/core_armv8mbl.h ****   @{
1735:src/core_armv8mbl.h ****  */
1736:src/core_armv8mbl.h **** 
1737:src/core_armv8mbl.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
1738:src/core_armv8mbl.h **** 
1739:src/core_armv8mbl.h **** /**
1740:src/core_armv8mbl.h ****   \brief   Enable SAU
1741:src/core_armv8mbl.h ****   \details Enables the Security Attribution Unit (SAU).
1742:src/core_armv8mbl.h ****  */
1743:src/core_armv8mbl.h **** __STATIC_INLINE void TZ_SAU_Enable(void)
1744:src/core_armv8mbl.h **** {
1745:src/core_armv8mbl.h **** #if defined (__SAU_PRESENT) && (__SAU_PRESENT == 1U)
1746:src/core_armv8mbl.h ****     SAU->CTRL |=  (SAU_CTRL_ENABLE_Msk);
1747:src/core_armv8mbl.h **** #endif
1748:src/core_armv8mbl.h **** }
1749:src/core_armv8mbl.h **** 
1750:src/core_armv8mbl.h **** 
1751:src/core_armv8mbl.h **** 
1752:src/core_armv8mbl.h **** /**
1753:src/core_armv8mbl.h ****   \brief   Disable SAU
1754:src/core_armv8mbl.h ****   \details Disables the Security Attribution Unit (SAU).
1755:src/core_armv8mbl.h ****  */
1756:src/core_armv8mbl.h **** __STATIC_INLINE void TZ_SAU_Disable(void)
1757:src/core_armv8mbl.h **** {
1758:src/core_armv8mbl.h **** #if defined (__SAU_PRESENT) && (__SAU_PRESENT == 1U)
1759:src/core_armv8mbl.h ****     SAU->CTRL &= ~(SAU_CTRL_ENABLE_Msk);
1760:src/core_armv8mbl.h **** #endif
1761:src/core_armv8mbl.h **** }
1762:src/core_armv8mbl.h **** 
1763:src/core_armv8mbl.h **** #endif /* defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U) */
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 35


1764:src/core_armv8mbl.h **** 
1765:src/core_armv8mbl.h **** /*@} end of CMSIS_Core_SAUFunctions */
1766:src/core_armv8mbl.h **** 
1767:src/core_armv8mbl.h **** 
1768:src/core_armv8mbl.h **** 
1769:src/core_armv8mbl.h **** 
1770:src/core_armv8mbl.h **** /* ##################################    SysTick function  ########################################
1771:src/core_armv8mbl.h **** /**
1772:src/core_armv8mbl.h ****   \ingroup  CMSIS_Core_FunctionInterface
1773:src/core_armv8mbl.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1774:src/core_armv8mbl.h ****   \brief    Functions that configure the System.
1775:src/core_armv8mbl.h ****   @{
1776:src/core_armv8mbl.h ****  */
1777:src/core_armv8mbl.h **** 
1778:src/core_armv8mbl.h **** #if defined (__Vendor_SysTickConfig) && (__Vendor_SysTickConfig == 0U)
1779:src/core_armv8mbl.h **** 
1780:src/core_armv8mbl.h **** /**
1781:src/core_armv8mbl.h ****   \brief   System Tick Configuration
1782:src/core_armv8mbl.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
1783:src/core_armv8mbl.h ****            Counter is in free running mode to generate periodic interrupts.
1784:src/core_armv8mbl.h ****   \param [in]  ticks  Number of ticks between two interrupts.
1785:src/core_armv8mbl.h ****   \return          0  Function succeeded.
1786:src/core_armv8mbl.h ****   \return          1  Function failed.
1787:src/core_armv8mbl.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
1788:src/core_armv8mbl.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
1789:src/core_armv8mbl.h ****            must contain a vendor-specific implementation of this function.
1790:src/core_armv8mbl.h ****  */
1791:src/core_armv8mbl.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
1792:src/core_armv8mbl.h **** {
 172              		.loc 1 1792 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 8
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176 00dc 80B5     		push	{r7, lr}
 177              	.LCFI3:
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 7, -8
 180              		.cfi_offset 14, -4
 181 00de 82B0     		sub	sp, sp, #8
 182              	.LCFI4:
 183              		.cfi_def_cfa_offset 16
 184 00e0 00AF     		add	r7, sp, #0
 185              	.LCFI5:
 186              		.cfi_def_cfa_register 7
 187 00e2 7860     		str	r0, [r7, #4]
1793:src/core_armv8mbl.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 188              		.loc 1 1793 0
 189 00e4 7B68     		ldr	r3, [r7, #4]
 190 00e6 013B     		subs	r3, r3, #1
 191 00e8 0C4A     		ldr	r2, .L10
 192 00ea 9342     		cmp	r3, r2
 193 00ec 01D9     		bls	.L8
1794:src/core_armv8mbl.h ****   {
1795:src/core_armv8mbl.h ****     return (1UL);                                                   /* Reload value impossible */
 194              		.loc 1 1795 0
 195 00ee 0123     		movs	r3, #1
 196 00f0 10E0     		b	.L9
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 36


 197              	.L8:
1796:src/core_armv8mbl.h ****   }
1797:src/core_armv8mbl.h **** 
1798:src/core_armv8mbl.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 198              		.loc 1 1798 0
 199 00f2 0B4B     		ldr	r3, .L10+4
 200 00f4 7A68     		ldr	r2, [r7, #4]
 201 00f6 013A     		subs	r2, r2, #1
 202 00f8 5A60     		str	r2, [r3, #4]
1799:src/core_armv8mbl.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 203              		.loc 1 1799 0
 204 00fa 0123     		movs	r3, #1
 205 00fc 5B42     		rsbs	r3, r3, #0
 206 00fe 0321     		movs	r1, #3
 207 0100 1800     		movs	r0, r3
 208 0102 FFF77DFF 		bl	NVIC_SetPriority
1800:src/core_armv8mbl.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 209              		.loc 1 1800 0
 210 0106 064B     		ldr	r3, .L10+4
 211 0108 0022     		movs	r2, #0
 212 010a 9A60     		str	r2, [r3, #8]
1801:src/core_armv8mbl.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 213              		.loc 1 1801 0
 214 010c 044B     		ldr	r3, .L10+4
 215 010e 0722     		movs	r2, #7
 216 0110 1A60     		str	r2, [r3]
1802:src/core_armv8mbl.h ****                    SysTick_CTRL_TICKINT_Msk   |
1803:src/core_armv8mbl.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
1804:src/core_armv8mbl.h ****   return (0UL);                                                     /* Function successful */
 217              		.loc 1 1804 0
 218 0112 0023     		movs	r3, #0
 219              	.L9:
1805:src/core_armv8mbl.h **** }
 220              		.loc 1 1805 0
 221 0114 1800     		movs	r0, r3
 222 0116 BD46     		mov	sp, r7
 223 0118 02B0     		add	sp, sp, #8
 224              		@ sp needed
 225 011a 80BD     		pop	{r7, pc}
 226              	.L11:
 227              		.align	2
 228              	.L10:
 229 011c FFFFFF00 		.word	16777215
 230 0120 10E000E0 		.word	-536813552
 231              		.cfi_endproc
 232              	.LFE62:
 233              		.size	SysTick_Config, .-SysTick_Config
 234              		.align	2
 235              		.code	16
 236              		.thumb_func
 237              		.type	SYS_UnlockReg, %function
 238              	SYS_UnlockReg:
 239              	.LFB64:
 240              		.file 2 "src/sys.h"
   1:src/sys.h     **** /**************************************************************************//**
   2:src/sys.h     ****  * @file     SYS.h
   3:src/sys.h     ****  * @version  V3
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 37


   4:src/sys.h     ****  * $Revision: 4 $
   5:src/sys.h     ****  * $Date: 16/08/09 7:54p $
   6:src/sys.h     ****  * @brief    M0564 series System Manager (SYS) driver header file
   7:src/sys.h     ****  *
   8:src/sys.h     ****  * @note
   9:src/sys.h     ****  * Copyright (C) 2016 Nuvoton Technology Corp. All rights reserved.
  10:src/sys.h     ****  *
  11:src/sys.h     ****  ******************************************************************************/
  12:src/sys.h     **** #ifndef __SYS_H__
  13:src/sys.h     **** #define __SYS_H__
  14:src/sys.h     **** 
  15:src/sys.h     **** 
  16:src/sys.h     **** #ifdef __cplusplus
  17:src/sys.h     **** extern "C"
  18:src/sys.h     **** {
  19:src/sys.h     **** #endif
  20:src/sys.h     **** 
  21:src/sys.h     **** /** @addtogroup Standard_Driver Standard Driver
  22:src/sys.h     ****   @{
  23:src/sys.h     **** */
  24:src/sys.h     **** 
  25:src/sys.h     **** /** @addtogroup SYS_Driver SYS Driver
  26:src/sys.h     ****   @{
  27:src/sys.h     **** */
  28:src/sys.h     **** 
  29:src/sys.h     **** /** @addtogroup SYS_EXPORTED_CONSTANTS SYS Exported Constants
  30:src/sys.h     ****   @{
  31:src/sys.h     **** */
  32:src/sys.h     **** 
  33:src/sys.h     **** /*-------------------------------------------------------------------------------------------------
  34:src/sys.h     **** /*  Module Reset Control Resister constant definitions.                                            
  35:src/sys.h     **** /*-------------------------------------------------------------------------------------------------
  36:src/sys.h     **** #define PDMA0_RST   ((0x0<<24)|SYS_IPRST0_PDMA0RST_Pos)     /*!< PDMA0 reset is one of the SYS_Rese
  37:src/sys.h     **** #define EBI_RST     ((0x0<<24)|SYS_IPRST0_EBIRST_Pos)       /*!< EBI reset is one of the SYS_ResetM
  38:src/sys.h     **** #define SDH0_RST    ((0x0<<24)|SYS_IPRST0_SDH0RST_Pos)      /*!< SDH0 reset is one of the SYS_Reset
  39:src/sys.h     **** #define CRC_RST     ((0x0<<24)|SYS_IPRST0_CRCRST_Pos)       /*!< CRC reset is one of the SYS_ResetM
  40:src/sys.h     **** #define CRYPTO_RST  ((0x0<<24)|SYS_IPRST0_CRYPTORST_Pos)    /*!< CRYPTO reset is one of the SYS_Res
  41:src/sys.h     **** #define SDH1_RST    ((0x0<<24)|SYS_IPRST0_SDH1RST_Pos)      /*!< SDH1 reset is one of the SYS_Reset
  42:src/sys.h     **** #define PDMA1_RST   ((0x0<<24)|SYS_IPRST0_PDMA1RST_Pos)     /*!< PDMA1 reset is one of the SYS_Rese
  43:src/sys.h     **** 
  44:src/sys.h     **** #define GPIO_RST    ((0x4<<24)|SYS_IPRST1_GPIORST_Pos)      /*!< GPIO reset is one of the SYS_Reset
  45:src/sys.h     **** #define TMR0_RST    ((0x4<<24)|SYS_IPRST1_TMR0RST_Pos)      /*!< TMR0 reset is one of the SYS_Reset
  46:src/sys.h     **** #define TMR1_RST    ((0x4<<24)|SYS_IPRST1_TMR1RST_Pos)      /*!< TMR1 reset is one of the SYS_Reset
  47:src/sys.h     **** #define TMR2_RST    ((0x4<<24)|SYS_IPRST1_TMR2RST_Pos)      /*!< TMR2 reset is one of the SYS_Reset
  48:src/sys.h     **** #define TMR3_RST    ((0x4<<24)|SYS_IPRST1_TMR3RST_Pos)      /*!< TMR3 reset is one of the SYS_Reset
  49:src/sys.h     **** #define SPI4_RST    ((0x4<<24)|SYS_IPRST1_SPI4RST_Pos)      /*!< SPI4 reset is one of the SYS_Reset
  50:src/sys.h     **** #define ACMP01_RST  ((0x4<<24)|SYS_IPRST1_ACMP01RST_Pos)    /*!< ACMP01 reset is one of the SYS_Res
  51:src/sys.h     **** #define I2C0_RST    ((0x4<<24)|SYS_IPRST1_I2C0RST_Pos)      /*!< I2C0 reset is one of the SYS_Reset
  52:src/sys.h     **** #define I2C1_RST    ((0x4<<24)|SYS_IPRST1_I2C1RST_Pos)      /*!< I2C1 reset is one of the SYS_Reset
  53:src/sys.h     **** #define I2C2_RST    ((0x4<<24)|SYS_IPRST1_I2C2RST_Pos)      /*!< I2C2 reset is one of the SYS_Reset
  54:src/sys.h     **** #define SPI0_RST    ((0x4<<24)|SYS_IPRST1_SPI0RST_Pos)      /*!< SPI0 reset is one of the SYS_Reset
  55:src/sys.h     **** #define SPI1_RST    ((0x4<<24)|SYS_IPRST1_SPI1RST_Pos)      /*!< SPI1 reset is one of the SYS_Reset
  56:src/sys.h     **** #define SPI2_RST    ((0x4<<24)|SYS_IPRST1_SPI2RST_Pos)      /*!< SPI2 reset is one of the SYS_Reset
  57:src/sys.h     **** #define SPI3_RST    ((0x4<<24)|SYS_IPRST1_SPI3RST_Pos)      /*!< SPI3 reset is one of the SYS_Reset
  58:src/sys.h     **** #define UART0_RST   ((0x4<<24)|SYS_IPRST1_UART0RST_Pos)     /*!< UART0 reset is one of the SYS_Rese
  59:src/sys.h     **** #define UART1_RST   ((0x4<<24)|SYS_IPRST1_UART1RST_Pos)     /*!< UART1 reset is one of the SYS_Rese
  60:src/sys.h     **** #define UART2_RST   ((0x4<<24)|SYS_IPRST1_UART2RST_Pos)     /*!< UART2 reset is one of the SYS_Rese
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 38


  61:src/sys.h     **** #define UART3_RST   ((0x4<<24)|SYS_IPRST1_UART3RST_Pos)     /*!< UART3 reset is one of the SYS_Rese
  62:src/sys.h     **** #define UART4_RST   ((0x4<<24)|SYS_IPRST1_UART4RST_Pos)     /*!< UART4 reset is one of the SYS_Rese
  63:src/sys.h     **** #define UART5_RST   ((0x4<<24)|SYS_IPRST1_UART5RST_Pos)     /*!< UART5 reset is one of the SYS_Rese
  64:src/sys.h     **** #define SPI5_RST    ((0x4<<24)|SYS_IPRST1_SPI5RST_Pos)      /*!< SPI5 reset is one of the SYS_Reset
  65:src/sys.h     **** #define CAN0_RST    ((0x4<<24)|SYS_IPRST1_CAN0RST_Pos)      /*!< SCAN0 reset is one of the SYS_Rese
  66:src/sys.h     **** #define USBD_RST    ((0x4<<24)|SYS_IPRST1_USBDRST_Pos)      /*!< USBD reset is one of the SYS_Reset
  67:src/sys.h     **** #define EADC_RST    ((0x4<<24)|SYS_IPRST1_EADCRST_Pos)      /*!< EADC reset is one of the SYS_Reset
  68:src/sys.h     **** #define I2S0_RST    ((0x4<<24)|SYS_IPRST1_I2S0RST_Pos)      /*!< I2S0 reset is one of the SYS_Reset
  69:src/sys.h     **** 
  70:src/sys.h     **** #define SC0_RST     ((0x8<<24)|SYS_IPRST2_SC0RST_Pos)       /*!< SC0 reset is one of the SYS_ResetM
  71:src/sys.h     **** #define SC1_RST     ((0x8<<24)|SYS_IPRST2_SC1RST_Pos)       /*!< SC1 reset is one of the SYS_ResetM
  72:src/sys.h     **** #define SC2_RST     ((0x8<<24)|SYS_IPRST2_SC1RST_Pos)       /*!< SC2 reset is one of the SYS_ResetM
  73:src/sys.h     **** //#define SPI4_RST    ((0x8<<24)|SYS_IPRST2_SPI4RST_Pos)      /*!< SPI4 reset is one of the SYS_Res
  74:src/sys.h     **** #define USCI0_RST   ((0x8<<24)|SYS_IPRST2_USCI0RST_Pos)     /*!< USCI0 reset is one of the SYS_Rese
  75:src/sys.h     **** #define USCI1_RST   ((0x8<<24)|SYS_IPRST2_USCI1RST_Pos)     /*!< USCI1 reset is one of the SYS_Rese
  76:src/sys.h     **** #define PWM0_RST    ((0x8<<24)|SYS_IPRST2_PWM0RST_Pos)      /*!< PWM0 reset is one of the SYS_Reset
  77:src/sys.h     **** #define PWM1_RST    ((0x8<<24)|SYS_IPRST2_PWM1RST_Pos)      /*!< PWM1 reset is one of the SYS_Reset
  78:src/sys.h     **** #define BPWM0_RST   ((0x8<<24)|SYS_IPRST2_BPWM0RST_Pos)     /*!< BPWM0 reset is one of the SYS_Rese
  79:src/sys.h     **** #define BPWM1_RST   ((0x8<<24)|SYS_IPRST2_BPWM1RST_Pos)     /*!< BPWM1 reset is one of the SYS_Rese
  80:src/sys.h     **** #define QEI0_RST    ((0x8<<24)|SYS_IPRST2_QEI0RST_Pos)      /*!< QEI0 reset is one of the SYS_Reset
  81:src/sys.h     **** #define QEI1_RST    ((0x8<<24)|SYS_IPRST2_QEI1RST_Pos)      /*!< QEI1 reset is one of the SYS_Reset
  82:src/sys.h     **** #define ECAP0_RST   ((0x8<<24)|SYS_IPRST2_ECAP0RST_Pos)     /*!< ECAP0 reset is one of the SYS_Rese
  83:src/sys.h     **** #define ECAP1_RST   ((0x8<<24)|SYS_IPRST2_ECAP1RST_Pos)     /*!< ECAP1 reset is one of the SYS_Rese
  84:src/sys.h     **** #define OPA_RST     ((0x8<<24)|SYS_IPRST2_OPA1RST_Pos)      /*!< OPA reset is one of the SYS_ResetM
  85:src/sys.h     **** 
  86:src/sys.h     **** 
  87:src/sys.h     **** /*-------------------------------------------------------------------------------------------------
  88:src/sys.h     **** /*  Brown Out Detector Threshold Voltage Selection constant definitions.                           
  89:src/sys.h     **** /*-------------------------------------------------------------------------------------------------
  90:src/sys.h     **** #define SYS_BODCTL_BOD_RST_EN           (1UL<<SYS_BODCTL_BODRSTEN_Pos)    /*!< Brown-out Reset Enab
  91:src/sys.h     **** #define SYS_BODCTL_BOD_INTERRUPT_EN     (0UL<<SYS_BODCTL_BODRSTEN_Pos)    /*!< Brown-out Interrupt 
  92:src/sys.h     **** #define SYS_BODCTL_BODVL_3_0V           (7UL<<SYS_BODCTL_BODVL_Pos)       /*!< Setting Brown Out De
  93:src/sys.h     **** #define SYS_BODCTL_BODVL_2_8V           (6UL<<SYS_BODCTL_BODVL_Pos)       /*!< Setting Brown Out De
  94:src/sys.h     **** #define SYS_BODCTL_BODVL_2_6V           (5UL<<SYS_BODCTL_BODVL_Pos)       /*!< Setting Brown Out De
  95:src/sys.h     **** #define SYS_BODCTL_BODVL_2_4V           (4UL<<SYS_BODCTL_BODVL_Pos)       /*!< Setting Brown Out De
  96:src/sys.h     **** #define SYS_BODCTL_BODVL_2_2V           (3UL<<SYS_BODCTL_BODVL_Pos)       /*!< Setting Brown Out De
  97:src/sys.h     **** #define SYS_BODCTL_BODVL_2_0V           (2UL<<SYS_BODCTL_BODVL_Pos)       /*!< Setting Brown Out De
  98:src/sys.h     **** #define SYS_BODCTL_BODVL_1_8V           (1UL<<SYS_BODCTL_BODVL_Pos)       /*!< Setting Brown Out De
  99:src/sys.h     **** #define SYS_BODCTL_BODVL_1_6V           (0UL<<SYS_BODCTL_BODVL_Pos)       /*!< Setting Brown Out De
 100:src/sys.h     **** 
 101:src/sys.h     **** 
 102:src/sys.h     **** /*-------------------------------------------------------------------------------------------------
 103:src/sys.h     **** /*  VREFCTL constant definitions. (Write-Protection Register)                                      
 104:src/sys.h     **** /*-------------------------------------------------------------------------------------------------
 105:src/sys.h     **** #define SYS_VREFCTL_VREF_PIN        (0x0UL<<SYS_VREFCTL_VREFCTL_Pos)    /*!< Vref = Vref pin */
 106:src/sys.h     **** #define SYS_VREFCTL_VREF_1_6V       (0x3UL<<SYS_VREFCTL_VREFCTL_Pos)    /*!< Vref = 1.6V */
 107:src/sys.h     **** #define SYS_VREFCTL_VREF_2_0V       (0x7UL<<SYS_VREFCTL_VREFCTL_Pos)    /*!< Vref = 2.0V */
 108:src/sys.h     **** #define SYS_VREFCTL_VREF_2_5V       (0xBUL<<SYS_VREFCTL_VREFCTL_Pos)    /*!< Vref = 2.5V */
 109:src/sys.h     **** #define SYS_VREFCTL_VREF_3_0V       (0xFUL<<SYS_VREFCTL_VREFCTL_Pos)    /*!< Vref = 3.0V */
 110:src/sys.h     **** #define SYS_VREFCTL_VREF_AVDD       (0x10UL<<SYS_VREFCTL_VREFCTL_Pos)   /*!< Vref = AVDD */
 111:src/sys.h     **** 
 112:src/sys.h     **** 
 113:src/sys.h     **** /*-------------------------------------------------------------------------------------------------
 114:src/sys.h     **** /*  USBPHY constant definitions. (Write-Protection Register)                                       
 115:src/sys.h     **** /*-------------------------------------------------------------------------------------------------
 116:src/sys.h     **** #define SYS_USBPHY_USBROLE_STD_USBD   (0x0UL<<SYS_USBPHY_USBROLE_Pos)   /*!< Standard USB device */
 117:src/sys.h     **** #define SYS_USBPHY_USBROLE_STD_USBH   (0x1UL<<SYS_USBPHY_USBROLE_Pos)   /*!< Standard USB host */
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 39


 118:src/sys.h     **** #define SYS_USBPHY_USBROLE_ID_DEPH    (0x2UL<<SYS_USBPHY_USBROLE_Pos)   /*!< ID dependent device */
 119:src/sys.h     **** 
 120:src/sys.h     **** 
 121:src/sys.h     **** /*-------------------------------------------------------------------------------------------------
 122:src/sys.h     **** /*  Multi-Function constant definitions.                                                           
 123:src/sys.h     **** /*-------------------------------------------------------------------------------------------------
 124:src/sys.h     **** 
 125:src/sys.h     **** /* How to use below #define?
 126:src/sys.h     **** 
 127:src/sys.h     **** Example: If user want to set PA.2 as UART0_TXD and PA.3 as UART0_RXD in initial function,
 128:src/sys.h     ****          user can issue following command to achieve it.
 129:src/sys.h     **** 
 130:src/sys.h     ****          SYS->GPA_MFPL = (SYS->GPA_MFPL & (~SYS_GPA_MFPL_PA2MFP_Msk)) | SYS_GPA_MFPL_PA2MFP_UART0_T
 131:src/sys.h     ****          SYS->GPA_MFPL = (SYS->GPA_MFPL & (~SYS_GPA_MFPL_PA3MFP_Msk)) | SYS_GPA_MFPL_PA3MFP_UART0_R
 132:src/sys.h     **** */
 133:src/sys.h     **** 
 134:src/sys.h     **** //PA.0 MFP
 135:src/sys.h     **** #define SYS_GPA_MFPL_PA0MFP_GPIO            (0x0UL<<SYS_GPA_MFPL_PA0MFP_Pos)    /*!< GPA_MFPL PA0 s
 136:src/sys.h     **** #define SYS_GPA_MFPL_PA0MFP_UART1_nCTS      (0x1UL<<SYS_GPA_MFPL_PA0MFP_Pos)    /*!< GPA_MFPL PA0 s
 137:src/sys.h     **** #define SYS_GPA_MFPL_PA0MFP_I2C2_SCL        (0x2UL<<SYS_GPA_MFPL_PA0MFP_Pos)    /*!< GPA_MFPL PA0 s
 138:src/sys.h     **** #define SYS_GPA_MFPL_PA0MFP_UART1_TXD       (0x3UL<<SYS_GPA_MFPL_PA0MFP_Pos)    /*!< GPA_MFPL PA0 s
 139:src/sys.h     **** #define SYS_GPA_MFPL_PA0MFP_CAN0_RXD        (0x4UL<<SYS_GPA_MFPL_PA0MFP_Pos)    /*!< GPA_MFPL PA0 s
 140:src/sys.h     **** #define SYS_GPA_MFPL_PA0MFP_SC0_CLK         (0x5UL<<SYS_GPA_MFPL_PA0MFP_Pos)    /*!< GPA_MFPL PA0 s
 141:src/sys.h     **** #define SYS_GPA_MFPL_PA0MFP_PWM1_CH5        (0x6UL<<SYS_GPA_MFPL_PA0MFP_Pos)    /*!< GPA_MFPL PA0 s
 142:src/sys.h     **** #define SYS_GPA_MFPL_PA0MFP_EBI_AD0         (0x7UL<<SYS_GPA_MFPL_PA0MFP_Pos)    /*!< GPA_MFPL PA0 s
 143:src/sys.h     **** #define SYS_GPA_MFPL_PA0MFP_INT0            (0x8UL<<SYS_GPA_MFPL_PA0MFP_Pos)    /*!< GPA_MFPL PA0 s
 144:src/sys.h     **** #define SYS_GPA_MFPL_PA0MFP_SPI3_MISO       (0x9UL<<SYS_GPA_MFPL_PA0MFP_Pos)    /*!< GPA_MFPL PA0 s
 145:src/sys.h     **** #define SYS_GPA_MFPL_PA0MFP_SPI1_I2SMCLK    (0xAUL<<SYS_GPA_MFPL_PA0MFP_Pos)    /*!< GPA_MFPL PA0 s
 146:src/sys.h     **** #define SYS_GPA_MFPL_PA0MFP_USCI1_CTL0      (0xCUL<<SYS_GPA_MFPL_PA0MFP_Pos)    /*!< GPA_MFPL PA0 s
 147:src/sys.h     **** #define SYS_GPA_MFPL_PA0MFP_USB_VBUS_EN     (0xDUL<<SYS_GPA_MFPL_PA0MFP_Pos)    /*!< GPA_MFPL PA0 s
 148:src/sys.h     **** #define SYS_GPA_MFPL_PA0MFP_SPI5_MISO       (0xFUL<<SYS_GPA_MFPL_PA0MFP_Pos)    /*!< GPA_MFPL PA0 s
 149:src/sys.h     **** #define SYS_GPA_MFPL_PA0MFP_ECAP0_IC0       (0xEUL<<SYS_GPA_MFPL_PA0MFP_Pos)    /*!< GPA_MFPL PA0 s
 150:src/sys.h     **** 
 151:src/sys.h     **** //PA.1 MFP
 152:src/sys.h     **** #define SYS_GPA_MFPL_PA1MFP_GPIO            (0x0UL<<SYS_GPA_MFPL_PA1MFP_Pos)    /*!< GPA_MFPL PA1 s
 153:src/sys.h     **** #define SYS_GPA_MFPL_PA1MFP_UART1_nRTS      (0x1UL<<SYS_GPA_MFPL_PA1MFP_Pos)    /*!< GPA_MFPL PA1 s
 154:src/sys.h     **** #define SYS_GPA_MFPL_PA1MFP_I2C2_SDA        (0x2UL<<SYS_GPA_MFPL_PA1MFP_Pos)    /*!< GPA_MFPL PA1 s
 155:src/sys.h     **** #define SYS_GPA_MFPL_PA1MFP_UART1_RXD       (0x3UL<<SYS_GPA_MFPL_PA1MFP_Pos)    /*!< GPA_MFPL PA1 s
 156:src/sys.h     **** #define SYS_GPA_MFPL_PA1MFP_CAN0_TXD        (0x4UL<<SYS_GPA_MFPL_PA1MFP_Pos)    /*!< GPA_MFPL PA1 s
 157:src/sys.h     **** #define SYS_GPA_MFPL_PA1MFP_SC0_DAT         (0x5UL<<SYS_GPA_MFPL_PA1MFP_Pos)    /*!< GPA_MFPL PA1 s
 158:src/sys.h     **** #define SYS_GPA_MFPL_PA1MFP_PWM1_CH4        (0x6UL<<SYS_GPA_MFPL_PA1MFP_Pos)    /*!< GPA_MFPL PA1 s
 159:src/sys.h     **** #define SYS_GPA_MFPL_PA1MFP_EBI_AD1         (0x7UL<<SYS_GPA_MFPL_PA1MFP_Pos)    /*!< GPA_MFPL PA1 s
 160:src/sys.h     **** #define SYS_GPA_MFPL_PA1MFP_SPI3_CLK        (0x9UL<<SYS_GPA_MFPL_PA1MFP_Pos)    /*!< GPA_MFPL PA1 s
 161:src/sys.h     **** #define SYS_GPA_MFPL_PA1MFP_EADC0_ST        (0xAUL<<SYS_GPA_MFPL_PA1MFP_Pos)    /*!< GPA_MFPL PA1 s
 162:src/sys.h     **** #define SYS_GPA_MFPL_PA1MFP_LCD_DH2         (0xBUL<<SYS_GPA_MFPL_PA1MFP_Pos)    /*!< GPA_MFPL PA1 s
 163:src/sys.h     **** #define SYS_GPA_MFPL_PA1MFP_USCI1_DAT1      (0xCUL<<SYS_GPA_MFPL_PA1MFP_Pos)    /*!< GPA_MFPL PA1 s
 164:src/sys.h     **** #define SYS_GPA_MFPL_PA1MFP_ECAP0_IC1       (0xEUL<<SYS_GPA_MFPL_PA1MFP_Pos)    /*!< GPA_MFPL PA1 s
 165:src/sys.h     **** #define SYS_GPA_MFPL_PA1MFP_SPI5_MOSI       (0xFUL<<SYS_GPA_MFPL_PA1MFP_Pos)    /*!< GPA_MFPL PA1 s
 166:src/sys.h     **** 
 167:src/sys.h     **** //PA.2 MFP
 168:src/sys.h     **** #define SYS_GPA_MFPL_PA2MFP_GPIO            (0x0UL<<SYS_GPA_MFPL_PA2MFP_Pos)    /*!< GPA_MFPL PA2 s
 169:src/sys.h     **** #define SYS_GPA_MFPL_PA2MFP_UART0_TXD       (0x2UL<<SYS_GPA_MFPL_PA2MFP_Pos)    /*!< GPA_MFPL PA2 s
 170:src/sys.h     **** #define SYS_GPA_MFPL_PA2MFP_UART0_nCTS      (0x3UL<<SYS_GPA_MFPL_PA2MFP_Pos)    /*!< GPA_MFPL PA2 s
 171:src/sys.h     **** #define SYS_GPA_MFPL_PA2MFP_I2C0_SDA        (0x4UL<<SYS_GPA_MFPL_PA2MFP_Pos)    /*!< GPA_MFPL PA2 s
 172:src/sys.h     **** #define SYS_GPA_MFPL_PA2MFP_SC0_RST         (0x5UL<<SYS_GPA_MFPL_PA2MFP_Pos)    /*!< GPA_MFPL PA2 s
 173:src/sys.h     **** #define SYS_GPA_MFPL_PA2MFP_PWM1_CH3        (0x6UL<<SYS_GPA_MFPL_PA2MFP_Pos)    /*!< GPA_MFPL PA2 s
 174:src/sys.h     **** #define SYS_GPA_MFPL_PA2MFP_EBI_AD2         (0x7UL<<SYS_GPA_MFPL_PA2MFP_Pos)    /*!< GPA_MFPL PA2 s
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 40


 175:src/sys.h     **** #define SYS_GPA_MFPL_PA2MFP_I2S0_MCLK       (0x8UL<<SYS_GPA_MFPL_PA2MFP_Pos)    /*!< GPA_MFPL PA2 s
 176:src/sys.h     **** #define SYS_GPA_MFPL_PA2MFP_SPI3_SS         (0x9UL<<SYS_GPA_MFPL_PA2MFP_Pos)    /*!< GPA_MFPL PA2 s
 177:src/sys.h     **** #define SYS_GPA_MFPL_PA2MFP_LCD_DH1         (0xBUL<<SYS_GPA_MFPL_PA2MFP_Pos)    /*!< GPA_MFPL PA2 s
 178:src/sys.h     **** #define SYS_GPA_MFPL_PA2MFP_USCI1_DAT0      (0xCUL<<SYS_GPA_MFPL_PA2MFP_Pos)    /*!< GPA_MFPL PA2 s
 179:src/sys.h     **** #define SYS_GPA_MFPL_PA2MFP_BPWM1_CH3       (0xDUL<<SYS_GPA_MFPL_PA2MFP_Pos)    /*!< GPA_MFPL PA2 s
 180:src/sys.h     **** #define SYS_GPA_MFPL_PA2MFP_ECAP0_IC2       (0xEUL<<SYS_GPA_MFPL_PA2MFP_Pos)    /*!< GPA_MFPL PA2 s
 181:src/sys.h     **** #define SYS_GPA_MFPL_PA2MFP_SPI5_SS         (0xFUL<<SYS_GPA_MFPL_PA2MFP_Pos)    /*!< GPA_MFPL PA2 s
 182:src/sys.h     **** 
 183:src/sys.h     **** //PA.3 MFP
 184:src/sys.h     **** #define SYS_GPA_MFPL_PA3MFP_GPIO            (0x0UL<<SYS_GPA_MFPL_PA3MFP_Pos)    /*!< GPA_MFPL PA3 s
 185:src/sys.h     **** #define SYS_GPA_MFPL_PA3MFP_UART0_RXD       (0x2UL<<SYS_GPA_MFPL_PA3MFP_Pos)    /*!< GPA_MFPL PA3 s
 186:src/sys.h     **** #define SYS_GPA_MFPL_PA3MFP_UART0_nRTS      (0x3UL<<SYS_GPA_MFPL_PA3MFP_Pos)    /*!< GPA_MFPL PA3 s
 187:src/sys.h     **** #define SYS_GPA_MFPL_PA3MFP_I2C0_SCL        (0x4UL<<SYS_GPA_MFPL_PA3MFP_Pos)    /*!< GPA_MFPL PA3 s
 188:src/sys.h     **** #define SYS_GPA_MFPL_PA3MFP_SC0_PWR         (0x5UL<<SYS_GPA_MFPL_PA3MFP_Pos)    /*!< GPA_MFPL PA3 s
 189:src/sys.h     **** #define SYS_GPA_MFPL_PA3MFP_PWM1_CH2        (0x6UL<<SYS_GPA_MFPL_PA3MFP_Pos)    /*!< GPA_MFPL PA3 s
 190:src/sys.h     **** #define SYS_GPA_MFPL_PA3MFP_EBI_AD3         (0x7UL<<SYS_GPA_MFPL_PA3MFP_Pos)    /*!< GPA_MFPL PA3 s
 191:src/sys.h     **** #define SYS_GPA_MFPL_PA3MFP_SPI3_MOSI       (0x9UL<<SYS_GPA_MFPL_PA3MFP_Pos)    /*!< GPA_MFPL PA3 s
 192:src/sys.h     **** #define SYS_GPA_MFPL_PA3MFP_USCI1_CLK       (0xCUL<<SYS_GPA_MFPL_PA3MFP_Pos)    /*!< GPA_MFPL PA3 s
 193:src/sys.h     **** #define SYS_GPA_MFPL_PA3MFP_BPWM1_CH2       (0xDUL<<SYS_GPA_MFPL_PA3MFP_Pos)    /*!< GPA_MFPL PA3 s
 194:src/sys.h     **** #define SYS_GPA_MFPL_PA3MFP_SPI5_CLK        (0xFUL<<SYS_GPA_MFPL_PA3MFP_Pos)    /*!< GPA_MFPL PA3 s
 195:src/sys.h     **** 
 196:src/sys.h     **** //PA.4 MFP
 197:src/sys.h     **** #define SYS_GPA_MFPL_PA4MFP_GPIO            (0x0UL<<SYS_GPA_MFPL_PA4MFP_Pos)    /*!< GPA_MFPL PA4 s
 198:src/sys.h     **** #define SYS_GPA_MFPL_PA4MFP_SPI1_SS         (0x2UL<<SYS_GPA_MFPL_PA4MFP_Pos)    /*!< GPA_MFPL PA4 s
 199:src/sys.h     **** #define SYS_GPA_MFPL_PA4MFP_EBI_AD4         (0x7UL<<SYS_GPA_MFPL_PA4MFP_Pos)    /*!< GPA_MFPL PA4 s
 200:src/sys.h     **** #define SYS_GPA_MFPL_PA4MFP_ECAP1_IC0       (0xEUL<<SYS_GPA_MFPL_PA4MFP_Pos)    /*!< GPA_MFPL PA4 s
 201:src/sys.h     **** #define SYS_GPA_MFPL_PA4MFP_LCD_SEG29       (0xFUL<<SYS_GPA_MFPL_PA4MFP_Pos)    /*!< GPA_MFPL PA4 s
 202:src/sys.h     **** 
 203:src/sys.h     **** //PA.5 MFP
 204:src/sys.h     **** #define SYS_GPA_MFPL_PA5MFP_GPIO            (0x0UL<<SYS_GPA_MFPL_PA5MFP_Pos)    /*!< GPA_MFPL PA5 s
 205:src/sys.h     **** #define SYS_GPA_MFPL_PA5MFP_SPI1_MOSI       (0x2UL<<SYS_GPA_MFPL_PA5MFP_Pos)    /*!< GPA_MFPL PA5 s
 206:src/sys.h     **** #define SYS_GPA_MFPL_PA5MFP_TM2_EXT         (0x3UL<<SYS_GPA_MFPL_PA5MFP_Pos)    /*!< GPA_MFPL PA5 s
 207:src/sys.h     **** #define SYS_GPA_MFPL_PA5MFP_EBI_AD5         (0x7UL<<SYS_GPA_MFPL_PA5MFP_Pos)    /*!< GPA_MFPL PA5 s
 208:src/sys.h     **** #define SYS_GPA_MFPL_PA5MFP_ECAP1_IC1       (0xEUL<<SYS_GPA_MFPL_PA5MFP_Pos)    /*!< GPA_MFPL PA5 s
 209:src/sys.h     **** #define SYS_GPA_MFPL_PA5MFP_LCD_COM7_SEG43  (0xFUL<<SYS_GPA_MFPL_PA5MFP_Pos)    /*!< GPA_MFPL PA5 s
 210:src/sys.h     **** 
 211:src/sys.h     **** //PA.6 MFP
 212:src/sys.h     **** #define SYS_GPA_MFPL_PA6MFP_GPIO            (0x0UL<<SYS_GPA_MFPL_PA6MFP_Pos)    /*!< GPA_MFPL PA6 s
 213:src/sys.h     **** #define SYS_GPA_MFPL_PA6MFP_SPI1_MISO       (0x2UL<<SYS_GPA_MFPL_PA6MFP_Pos)    /*!< GPA_MFPL PA6 s
 214:src/sys.h     **** #define SYS_GPA_MFPL_PA6MFP_TM1_EXT         (0x3UL<<SYS_GPA_MFPL_PA6MFP_Pos)    /*!< GPA_MFPL PA6 s
 215:src/sys.h     **** #define SYS_GPA_MFPL_PA6MFP_EBI_AD6         (0x7UL<<SYS_GPA_MFPL_PA6MFP_Pos)    /*!< GPA_MFPL PA6 s
 216:src/sys.h     **** #define SYS_GPA_MFPL_PA6MFP_ECAP1_IC2       (0xEUL<<SYS_GPA_MFPL_PA6MFP_Pos)    /*!< GPA_MFPL PA6 s
 217:src/sys.h     **** #define SYS_GPA_MFPL_PA6MFP_LCD_COM6_SEG42  (0xFUL<<SYS_GPA_MFPL_PA6MFP_Pos)    /*!< GPA_MFPL PA6 s
 218:src/sys.h     **** 
 219:src/sys.h     **** //PA.7 MFP
 220:src/sys.h     **** #define SYS_GPA_MFPL_PA7MFP_GPIO            (0x0UL<<SYS_GPA_MFPL_PA7MFP_Pos)    /*!< GPA_MFPL PA7 s
 221:src/sys.h     **** #define SYS_GPA_MFPL_PA7MFP_SPI1_CLK        (0x2UL<<SYS_GPA_MFPL_PA7MFP_Pos)    /*!< GPA_MFPL PA7 s
 222:src/sys.h     **** #define SYS_GPA_MFPL_PA7MFP_TM0_EXT         (0x3UL<<SYS_GPA_MFPL_PA7MFP_Pos)    /*!< GPA_MFPL PA7 s
 223:src/sys.h     **** #define SYS_GPA_MFPL_PA7MFP_EBI_AD7         (0x7UL<<SYS_GPA_MFPL_PA7MFP_Pos)    /*!< GPA_MFPL PA7 s
 224:src/sys.h     **** #define SYS_GPA_MFPL_PA7MFP_DSRC_WAKEUP     (0xCUL<<SYS_GPA_MFPL_PA7MFP_Pos)    /*!< GPA_MFPL PA7 s
 225:src/sys.h     **** #define SYS_GPA_MFPL_PA7MFP_LCD_COM5_SEG41  (0xFUL<<SYS_GPA_MFPL_PA7MFP_Pos)    /*!< GPA_MFPL PA7 s
 226:src/sys.h     **** 
 227:src/sys.h     **** //PA.8 MFP
 228:src/sys.h     **** #define SYS_GPA_MFPH_PA8MFP_GPIO            (0x0UL<<SYS_GPA_MFPH_PA8MFP_Pos)    /*!< GPA_MFPH PA8 s
 229:src/sys.h     **** #define SYS_GPA_MFPH_PA8MFP_UART3_TXD       (0x3UL<<SYS_GPA_MFPH_PA8MFP_Pos)    /*!< GPA_MFPH PA8 s
 230:src/sys.h     **** #define SYS_GPA_MFPH_PA8MFP_SD1_CLK         (0xBUL<<SYS_GPA_MFPH_PA8MFP_Pos)    /*!< GPA_MFPH PA8 s
 231:src/sys.h     **** #define SYS_GPA_MFPH_PA8MFP_DSRC_TXON       (0xCUL<<SYS_GPA_MFPH_PA8MFP_Pos)    /*!< GPA_MFPH PA8 s
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 41


 232:src/sys.h     **** #define SYS_GPA_MFPH_PA8MFP_LCD_COM0        (0xFUL<<SYS_GPA_MFPH_PA8MFP_Pos)    /*!< GPA_MFPH PA8 s
 233:src/sys.h     **** 
 234:src/sys.h     **** //PA.9 MFP
 235:src/sys.h     **** #define SYS_GPA_MFPH_PA9MFP_GPIO            (0x0UL<<SYS_GPA_MFPH_PA9MFP_Pos)    /*!< GPA_MFPH PA9 s
 236:src/sys.h     **** #define SYS_GPA_MFPH_PA9MFP_UART3_RXD       (0x3UL<<SYS_GPA_MFPH_PA9MFP_Pos)    /*!< GPA_MFPH PA9 s
 237:src/sys.h     **** #define SYS_GPA_MFPH_PA9MFP_SD1_DAT3        (0xBUL<<SYS_GPA_MFPH_PA9MFP_Pos)    /*!< GPA_MFPH PA9 s
 238:src/sys.h     **** #define SYS_GPA_MFPH_PA9MFP_DSRC_RXON       (0xCUL<<SYS_GPA_MFPH_PA9MFP_Pos)    /*!< GPA_MFPH PA9 s
 239:src/sys.h     **** #define SYS_GPA_MFPH_PA9MFP_LCD_COM1        (0xFUL<<SYS_GPA_MFPH_PA9MFP_Pos)    /*!< GPA_MFPH PA9 s
 240:src/sys.h     **** 
 241:src/sys.h     **** //PA.10 MFP
 242:src/sys.h     **** #define SYS_GPA_MFPH_PA10MFP_GPIO           (0x0UL<<SYS_GPA_MFPH_PA10MFP_Pos)   /*!< GPA_MFPH PA10 
 243:src/sys.h     **** #define SYS_GPA_MFPH_PA10MFP_UART3_nCTS     (0x3UL<<SYS_GPA_MFPH_PA10MFP_Pos)   /*!< GPA_MFPH PA10 
 244:src/sys.h     **** #define SYS_GPA_MFPH_PA10MFP_SD1_DAT2       (0xBUL<<SYS_GPA_MFPH_PA10MFP_Pos)   /*!< GPA_MFPH PA10 
 245:src/sys.h     **** #define SYS_GPA_MFPH_PA10MFP_LCD_COM2       (0xFUL<<SYS_GPA_MFPH_PA10MFP_Pos)   /*!< GPA_MFPH PA10 
 246:src/sys.h     **** 
 247:src/sys.h     **** //PA.11 MFP
 248:src/sys.h     **** #define SYS_GPA_MFPH_PA11MFP_GPIO           (0x0UL<<SYS_GPA_MFPH_PA11MFP_Pos)   /*!< GPA_MFPH PA11 
 249:src/sys.h     **** #define SYS_GPA_MFPH_PA11MFP_UART3_nRTS     (0x3UL<<SYS_GPA_MFPH_PA11MFP_Pos)   /*!< GPA_MFPH PA11 
 250:src/sys.h     **** #define SYS_GPA_MFPH_PA11MFP_SD1_DAT1       (0xBUL<<SYS_GPA_MFPH_PA11MFP_Pos)   /*!< GPA_MFPH PA11 
 251:src/sys.h     **** #define SYS_GPA_MFPH_PA11MFP_LCD_COM3       (0xFUL<<SYS_GPA_MFPH_PA11MFP_Pos)   /*!< GPA_MFPH PA11 
 252:src/sys.h     **** 
 253:src/sys.h     **** //PA.12 MFP
 254:src/sys.h     **** #define SYS_GPA_MFPH_PA12MFP_GPIO           (0x0UL<<SYS_GPA_MFPH_PA12MFP_Pos)   /*!< GPA_MFPH PA12 
 255:src/sys.h     **** #define SYS_GPA_MFPH_PA12MFP_SPI1_I2SMCLK   (0x2UL<<SYS_GPA_MFPH_PA12MFP_Pos)   /*!< GPA_MFPH PA12 
 256:src/sys.h     **** #define SYS_GPA_MFPH_PA12MFP_UART2_RXD      (0x3UL<<SYS_GPA_MFPH_PA12MFP_Pos)   /*!< GPA_MFPH PA12 
 257:src/sys.h     **** #define SYS_GPA_MFPH_PA12MFP_CAN0_TXD       (0x4UL<<SYS_GPA_MFPH_PA12MFP_Pos)   /*!< GPA_MFPH PA12 
 258:src/sys.h     **** #define SYS_GPA_MFPH_PA12MFP_EBI_ADR8       (0x7UL<<SYS_GPA_MFPH_PA12MFP_Pos)   /*!< GPA_MFPH PA12 
 259:src/sys.h     **** #define SYS_GPA_MFPH_PA12MFP_I2S0_DO        (0x8UL<<SYS_GPA_MFPH_PA12MFP_Pos)   /*!< GPA_MFPH PA12 
 260:src/sys.h     **** #define SYS_GPA_MFPH_PA12MFP_SC2_PWR        (0x9UL<<SYS_GPA_MFPH_PA12MFP_Pos)   /*!< GPA_MFPH PA12 
 261:src/sys.h     **** #define SYS_GPA_MFPH_PA12MFP_SPI3_I2SMCLK   (0xAUL<<SYS_GPA_MFPH_PA12MFP_Pos)   /*!< GPA_MFPH PA12 
 262:src/sys.h     **** #define SYS_GPA_MFPH_PA12MFP_DSRC_WAKEUP    (0xCUL<<SYS_GPA_MFPH_PA12MFP_Pos)   /*!< GPA_MFPH PA12 
 263:src/sys.h     **** #define SYS_GPA_MFPH_PA12MFP_BPWM0_CH5      (0xDUL<<SYS_GPA_MFPH_PA12MFP_Pos)   /*!< GPA_MFPH PA12 
 264:src/sys.h     **** #define SYS_GPA_MFPH_PA12MFP_QEI1_INDEX     (0xEUL<<SYS_GPA_MFPH_PA12MFP_Pos)   /*!< GPA_MFPH PA12 
 265:src/sys.h     **** #define SYS_GPA_MFPH_PA12MFP_SPI2_I2SMCLK   (0xFUL<<SYS_GPA_MFPH_PA12MFP_Pos)   /*!< GPA_MFPH PA12 
 266:src/sys.h     **** 
 267:src/sys.h     **** //PA.13 MFP
 268:src/sys.h     **** #define SYS_GPA_MFPH_PA13MFP_GPIO           (0x0UL<<SYS_GPA_MFPH_PA13MFP_Pos)   /*!< GPA_MFPH PA13 
 269:src/sys.h     **** #define SYS_GPA_MFPH_PA13MFP_UART2_TXD      (0x3UL<<SYS_GPA_MFPH_PA13MFP_Pos)   /*!< GPA_MFPH PA13 
 270:src/sys.h     **** #define SYS_GPA_MFPH_PA13MFP_CAN0_RXD       (0x4UL<<SYS_GPA_MFPH_PA13MFP_Pos)   /*!< GPA_MFPH PA13 
 271:src/sys.h     **** #define SYS_GPA_MFPH_PA13MFP_EBI_ADR7       (0x7UL<<SYS_GPA_MFPH_PA13MFP_Pos)   /*!< GPA_MFPH PA13 
 272:src/sys.h     **** #define SYS_GPA_MFPH_PA13MFP_I2S0_DI        (0x8UL<<SYS_GPA_MFPH_PA13MFP_Pos)   /*!< GPA_MFPH PA13 
 273:src/sys.h     **** #define SYS_GPA_MFPH_PA13MFP_SC2_RST        (0x9UL<<SYS_GPA_MFPH_PA13MFP_Pos)   /*!< GPA_MFPH PA13 
 274:src/sys.h     **** #define SYS_GPA_MFPH_PA13MFP_SPI1_CLK       (0xAUL<<SYS_GPA_MFPH_PA13MFP_Pos)   /*!< GPA_MFPH PA13 
 275:src/sys.h     **** #define SYS_GPA_MFPH_PA13MFP_USB_VBUS_EN    (0xBUL<<SYS_GPA_MFPH_PA13MFP_Pos)   /*!< GPA_MFPH PA13 
 276:src/sys.h     **** #define SYS_GPA_MFPH_PA13MFP_QEI1_A         (0xEUL<<SYS_GPA_MFPH_PA13MFP_Pos)   /*!< GPA_MFPH PA13 
 277:src/sys.h     **** #define SYS_GPA_MFPH_PA13MFP_DSRC_TXON      (0xCUL<<SYS_GPA_MFPH_PA13MFP_Pos)   /*!< GPA_MFPH PA13 
 278:src/sys.h     **** #define SYS_GPA_MFPH_PA13MFP_LCD_V3         (0xFUL<<SYS_GPA_MFPH_PA13MFP_Pos)   /*!< GPA_MFPH PA13 
 279:src/sys.h     **** 
 280:src/sys.h     **** //PA.14 MFP
 281:src/sys.h     **** #define SYS_GPA_MFPH_PA14MFP_GPIO           (0x0UL<<SYS_GPA_MFPH_PA14MFP_Pos)   /*!< GPA_MFPH PA14 
 282:src/sys.h     **** #define SYS_GPA_MFPH_PA14MFP_UART2_nCTS     (0x3UL<<SYS_GPA_MFPH_PA14MFP_Pos)   /*!< GPA_MFPH PA14 
 283:src/sys.h     **** #define SYS_GPA_MFPH_PA14MFP_I2C0_SMBAL     (0x4UL<<SYS_GPA_MFPH_PA14MFP_Pos)   /*!< GPA_MFPH PA14 
 284:src/sys.h     **** #define SYS_GPA_MFPH_PA14MFP_EBI_ADR6       (0x7UL<<SYS_GPA_MFPH_PA14MFP_Pos)   /*!< GPA_MFPH PA14 
 285:src/sys.h     **** #define SYS_GPA_MFPH_PA14MFP_I2S0_BCLK      (0x8UL<<SYS_GPA_MFPH_PA14MFP_Pos)   /*!< GPA_MFPH PA14 
 286:src/sys.h     **** #define SYS_GPA_MFPH_PA14MFP_SC2_CLK        (0x9UL<<SYS_GPA_MFPH_PA14MFP_Pos)   /*!< GPA_MFPH PA14 
 287:src/sys.h     **** #define SYS_GPA_MFPH_PA14MFP_SPI1_MISO      (0xAUL<<SYS_GPA_MFPH_PA14MFP_Pos)   /*!< GPA_MFPH PA14 
 288:src/sys.h     **** #define SYS_GPA_MFPH_PA14MFP_DSRC_RXON      (0xCUL<<SYS_GPA_MFPH_PA14MFP_Pos)   /*!< GPA_MFPH PA14 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 42


 289:src/sys.h     **** #define SYS_GPA_MFPH_PA14MFP_QEI1_B         (0xEUL<<SYS_GPA_MFPH_PA14MFP_Pos)   /*!< GPA_MFPH PA14 
 290:src/sys.h     **** #define SYS_GPA_MFPH_PA14MFP_BPWM1_CH0      (0xDUL<<SYS_GPA_MFPH_PA14MFP_Pos)   /*!< GPA_MFPH PA14 
 291:src/sys.h     **** #define SYS_GPA_MFPH_PA14MFP_LCD_V2         (0xFUL<<SYS_GPA_MFPH_PA14MFP_Pos)   /*!< GPA_MFPH PA14 
 292:src/sys.h     **** 
 293:src/sys.h     **** //PA.15 MFP
 294:src/sys.h     **** #define SYS_GPA_MFPH_PA15MFP_GPIO           (0x0UL<<SYS_GPA_MFPH_PA15MFP_Pos)   /*!< GPA_MFPH PA15 
 295:src/sys.h     **** #define SYS_GPA_MFPH_PA15MFP_UART2_nRTS     (0x3UL<<SYS_GPA_MFPH_PA15MFP_Pos)   /*!< GPA_MFPH PA15 
 296:src/sys.h     **** #define SYS_GPA_MFPH_PA15MFP_I2C0_SMBSUS    (0x4UL<<SYS_GPA_MFPH_PA15MFP_Pos)   /*!< GPA_MFPH PA15 
 297:src/sys.h     **** #define SYS_GPA_MFPH_PA15MFP_PWM1_CH0       (0x6UL<<SYS_GPA_MFPH_PA15MFP_Pos)   /*!< GPA_MFPH PA15 
 298:src/sys.h     **** #define SYS_GPA_MFPH_PA15MFP_EBI_ADR5       (0x7UL<<SYS_GPA_MFPH_PA15MFP_Pos)   /*!< GPA_MFPH PA15 
 299:src/sys.h     **** #define SYS_GPA_MFPH_PA15MFP_I2S0_LRCK      (0x8UL<<SYS_GPA_MFPH_PA15MFP_Pos)   /*!< GPA_MFPH PA15 
 300:src/sys.h     **** #define SYS_GPA_MFPH_PA15MFP_SC2_DAT        (0x9UL<<SYS_GPA_MFPH_PA15MFP_Pos)   /*!< GPA_MFPH PA15 
 301:src/sys.h     **** #define SYS_GPA_MFPH_PA15MFP_SPI1_MOSI      (0xAUL<<SYS_GPA_MFPH_PA15MFP_Pos)   /*!< GPA_MFPH PA15 
 302:src/sys.h     **** #define SYS_GPA_MFPH_PA15MFP_BPWM1_CH1      (0xDUL<<SYS_GPA_MFPH_PA15MFP_Pos)   /*!< GPA_MFPH PA15 
 303:src/sys.h     **** #define SYS_GPA_MFPH_PA15MFP_LCD_V1         (0xFUL<<SYS_GPA_MFPH_PA15MFP_Pos)   /*!< GPA_MFPH PA15 
 304:src/sys.h     **** 
 305:src/sys.h     **** //PB.0 MFP
 306:src/sys.h     **** #define SYS_GPB_MFPL_PB0MFP_GPIO            (0x0UL<<SYS_GPB_MFPL_PB0MFP_Pos)    /*!< GPB_MFPL PB0 s
 307:src/sys.h     **** #define SYS_GPB_MFPL_PB0MFP_EADC0_CH0       (0x1UL<<SYS_GPB_MFPL_PB0MFP_Pos)    /*!< GPB_MFPL PB0 s
 308:src/sys.h     **** #define SYS_GPB_MFPL_PB0MFP_SPI0_MOSI1      (0x2UL<<SYS_GPB_MFPL_PB0MFP_Pos)    /*!< GPB_MFPL PB0 s
 309:src/sys.h     **** #define SYS_GPB_MFPL_PB0MFP_UART2_RXD       (0x3UL<<SYS_GPB_MFPL_PB0MFP_Pos)    /*!< GPB_MFPL PB0 s
 310:src/sys.h     **** #define SYS_GPB_MFPL_PB0MFP_TM2             (0x4UL<<SYS_GPB_MFPL_PB0MFP_Pos)    /*!< GPB_MFPL PB0 s
 311:src/sys.h     **** #define SYS_GPB_MFPL_PB0MFP_DAC0_OUT        (0x5UL<<SYS_GPB_MFPL_PB0MFP_Pos)    /*!< GPB_MFPL PB0 s
 312:src/sys.h     **** #define SYS_GPB_MFPL_PB0MFP_PWM1_CH5        (0x6UL<<SYS_GPB_MFPL_PB0MFP_Pos)    /*!< GPB_MFPL PB0 s
 313:src/sys.h     **** #define SYS_GPB_MFPL_PB0MFP_EBI_nWRL        (0x7UL<<SYS_GPB_MFPL_PB0MFP_Pos)    /*!< GPB_MFPL PB0 s
 314:src/sys.h     **** #define SYS_GPB_MFPL_PB0MFP_INT1            (0x8UL<<SYS_GPB_MFPL_PB0MFP_Pos)    /*!< GPB_MFPL PB0 s
 315:src/sys.h     **** #define SYS_GPB_MFPL_PB0MFP_I2C2_SDA        (0x9UL<<SYS_GPB_MFPL_PB0MFP_Pos)    /*!< GPB_MFPL PB0 s
 316:src/sys.h     **** #define SYS_GPB_MFPL_PB0MFP_SC1_RST         (0xAUL<<SYS_GPB_MFPL_PB0MFP_Pos)    /*!< GPB_MFPL PB0 s
 317:src/sys.h     **** #define SYS_GPB_MFPL_PB0MFP_SC0_DAT         (0xBUL<<SYS_GPB_MFPL_PB0MFP_Pos)    /*!< GPB_MFPL PB0 s
 318:src/sys.h     **** #define SYS_GPB_MFPL_PB0MFP_USCI1_CTL1      (0xCUL<<SYS_GPB_MFPL_PB0MFP_Pos)    /*!< GPB_MFPL PB0 s
 319:src/sys.h     **** #define SYS_GPB_MFPL_PB0MFP_DSRC_WAKEUP     (0xDUL<<SYS_GPB_MFPL_PB0MFP_Pos)    /*!< GPB_MFPL PB0 s
 320:src/sys.h     **** #define SYS_GPB_MFPL_PB0MFP_SPI1_SS         (0xEUL<<SYS_GPB_MFPL_PB0MFP_Pos)    /*!< GPB_MFPL PB0 s
 321:src/sys.h     **** 
 322:src/sys.h     **** //PB.1 MFP
 323:src/sys.h     **** #define SYS_GPB_MFPL_PB1MFP_GPIO            (0x0UL<<SYS_GPB_MFPL_PB1MFP_Pos)    /*!< GPB_MFPL PB1 s
 324:src/sys.h     **** #define SYS_GPB_MFPL_PB1MFP_EADC0_CH1       (0x1UL<<SYS_GPB_MFPL_PB1MFP_Pos)    /*!< GPB_MFPL PB1 s
 325:src/sys.h     **** #define SYS_GPB_MFPL_PB1MFP_SPI0_MISO1      (0x2UL<<SYS_GPB_MFPL_PB1MFP_Pos)    /*!< GPB_MFPL PB1 s
 326:src/sys.h     **** #define SYS_GPB_MFPL_PB1MFP_UART2_TXD       (0x3UL<<SYS_GPB_MFPL_PB1MFP_Pos)    /*!< GPB_MFPL PB1 s
 327:src/sys.h     **** #define SYS_GPB_MFPL_PB1MFP_TM3             (0x4UL<<SYS_GPB_MFPL_PB1MFP_Pos)    /*!< GPB_MFPL PB1 s
 328:src/sys.h     **** #define SYS_GPB_MFPL_PB1MFP_SC0_RST         (0x5UL<<SYS_GPB_MFPL_PB1MFP_Pos)    /*!< GPB_MFPL PB1 s
 329:src/sys.h     **** #define SYS_GPB_MFPL_PB1MFP_PWM0_SYNC_OUT   (0x6UL<<SYS_GPB_MFPL_PB1MFP_Pos)    /*!< GPB_MFPL PB1 s
 330:src/sys.h     **** #define SYS_GPB_MFPL_PB1MFP_EBI_nWRH        (0x7UL<<SYS_GPB_MFPL_PB1MFP_Pos)    /*!< GPB_MFPL PB1 s
 331:src/sys.h     **** #define SYS_GPB_MFPL_PB1MFP_DAC1_OUT        (0x8UL<<SYS_GPB_MFPL_PB1MFP_Pos)    /*!< GPB_MFPL PB1 s
 332:src/sys.h     **** #define SYS_GPB_MFPL_PB1MFP_I2C2_SCL        (0x9UL<<SYS_GPB_MFPL_PB1MFP_Pos)    /*!< GPB_MFPL PB1 s
 333:src/sys.h     **** #define SYS_GPB_MFPL_PB1MFP_SC1_PWR         (0xAUL<<SYS_GPB_MFPL_PB1MFP_Pos)    /*!< GPB_MFPL PB1 s
 334:src/sys.h     **** #define SYS_GPB_MFPL_PB1MFP_SC2_nCD         (0xBUL<<SYS_GPB_MFPL_PB1MFP_Pos)    /*!< GPB_MFPL PB1 s
 335:src/sys.h     **** #define SYS_GPB_MFPL_PB1MFP_USCI1_DAT1      (0xCUL<<SYS_GPB_MFPL_PB1MFP_Pos)    /*!< GPB_MFPL PB1 s
 336:src/sys.h     **** #define SYS_GPB_MFPL_PB1MFP_DSRC_TXON       (0xDUL<<SYS_GPB_MFPL_PB1MFP_Pos)    /*!< GPB_MFPL PB1 s
 337:src/sys.h     **** #define SYS_GPB_MFPL_PB1MFP_SPI1_MOSI       (0xEUL<<SYS_GPB_MFPL_PB1MFP_Pos)    /*!< GPB_MFPL PB1 s
 338:src/sys.h     **** 
 339:src/sys.h     **** //PB.2 MFP
 340:src/sys.h     **** #define SYS_GPB_MFPL_PB2MFP_GPIO            (0x0UL<<SYS_GPB_MFPL_PB2MFP_Pos)    /*!< GPB_MFPL PB2 s
 341:src/sys.h     **** #define SYS_GPB_MFPL_PB2MFP_EADC0_CH2       (0x1UL<<SYS_GPB_MFPL_PB2MFP_Pos)    /*!< GPB_MFPL PB2 s
 342:src/sys.h     **** #define SYS_GPB_MFPL_PB2MFP_SPI0_CLK        (0x2UL<<SYS_GPB_MFPL_PB2MFP_Pos)    /*!< GPB_MFPL PB2 s
 343:src/sys.h     **** #define SYS_GPB_MFPL_PB2MFP_SPI1_CLK        (0x3UL<<SYS_GPB_MFPL_PB2MFP_Pos)    /*!< GPB_MFPL PB2 s
 344:src/sys.h     **** #define SYS_GPB_MFPL_PB2MFP_UART1_RXD       (0x4UL<<SYS_GPB_MFPL_PB2MFP_Pos)    /*!< GPB_MFPL PB2 s
 345:src/sys.h     **** #define SYS_GPB_MFPL_PB2MFP_SC0_nCD         (0x5UL<<SYS_GPB_MFPL_PB2MFP_Pos)    /*!< GPB_MFPL PB2 s
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 43


 346:src/sys.h     **** #define SYS_GPB_MFPL_PB2MFP_PWM1_CH4        (0x6UL<<SYS_GPB_MFPL_PB2MFP_Pos)    /*!< GPB_MFPL PB2 s
 347:src/sys.h     **** #define SYS_GPB_MFPL_PB2MFP_EBI_ADR16       (0x7UL<<SYS_GPB_MFPL_PB2MFP_Pos)    /*!< GPB_MFPL PB2 s
 348:src/sys.h     **** #define SYS_GPB_MFPL_PB2MFP_I2C2_SMBAL      (0x8UL<<SYS_GPB_MFPL_PB2MFP_Pos)    /*!< GPB_MFPL PB2 s
 349:src/sys.h     **** #define SYS_GPB_MFPL_PB2MFP_UART3_RXD       (0x9UL<<SYS_GPB_MFPL_PB2MFP_Pos)    /*!< GPB_MFPL PB2 s
 350:src/sys.h     **** #define SYS_GPB_MFPL_PB2MFP_SC1_CLK         (0xAUL<<SYS_GPB_MFPL_PB2MFP_Pos)    /*!< GPB_MFPL PB2 s
 351:src/sys.h     **** #define SYS_GPB_MFPL_PB2MFP_TM2_EXT         (0xBUL<<SYS_GPB_MFPL_PB2MFP_Pos)    /*!< GPB_MFPL PB2 s
 352:src/sys.h     **** #define SYS_GPB_MFPL_PB2MFP_USCI1_DAT0      (0xCUL<<SYS_GPB_MFPL_PB2MFP_Pos)    /*!< GPB_MFPL PB2 s
 353:src/sys.h     **** #define SYS_GPB_MFPL_PB2MFP_USB_VBUS_ST     (0xDUL<<SYS_GPB_MFPL_PB2MFP_Pos)    /*!< GPB_MFPL PB2 s
 354:src/sys.h     **** #define SYS_GPB_MFPL_PB2MFP_DSRC_RXON       (0xEUL<<SYS_GPB_MFPL_PB2MFP_Pos)    /*!< GPB_MFPL PB2 s
 355:src/sys.h     **** 
 356:src/sys.h     **** //PB.3 MFP
 357:src/sys.h     **** #define SYS_GPB_MFPL_PB3MFP_GPIO            (0x0UL<<SYS_GPB_MFPL_PB3MFP_Pos)    /*!< GPB_MFPL PB3 s
 358:src/sys.h     **** #define SYS_GPB_MFPL_PB3MFP_EADC0_CH3       (0x1UL<<SYS_GPB_MFPL_PB3MFP_Pos)    /*!< GPB_MFPL PB3 s
 359:src/sys.h     **** #define SYS_GPB_MFPL_PB3MFP_SPI0_MISO0      (0x2UL<<SYS_GPB_MFPL_PB3MFP_Pos)    /*!< GPB_MFPL PB3 s
 360:src/sys.h     **** #define SYS_GPB_MFPL_PB3MFP_SPI1_MISO       (0x3UL<<SYS_GPB_MFPL_PB3MFP_Pos)    /*!< GPB_MFPL PB3 s
 361:src/sys.h     **** #define SYS_GPB_MFPL_PB3MFP_UART1_TXD       (0x4UL<<SYS_GPB_MFPL_PB3MFP_Pos)    /*!< GPB_MFPL PB3 s
 362:src/sys.h     **** #define SYS_GPB_MFPL_PB3MFP_PWM0_BRAKE0     (0x5UL<<SYS_GPB_MFPL_PB3MFP_Pos)    /*!< GPB_MFPL PB3 s
 363:src/sys.h     **** #define SYS_GPB_MFPL_PB3MFP_PWM1_CH3        (0x6UL<<SYS_GPB_MFPL_PB3MFP_Pos)    /*!< GPB_MFPL PB3 s
 364:src/sys.h     **** #define SYS_GPB_MFPL_PB3MFP_EBI_ADR17       (0x7UL<<SYS_GPB_MFPL_PB3MFP_Pos)    /*!< GPB_MFPL PB3 s
 365:src/sys.h     **** #define SYS_GPB_MFPL_PB3MFP_I2C2_SMBSUS     (0x8UL<<SYS_GPB_MFPL_PB3MFP_Pos)    /*!< GPB_MFPL PB3 s
 366:src/sys.h     **** #define SYS_GPB_MFPL_PB3MFP_UART3_TXD       (0x9UL<<SYS_GPB_MFPL_PB3MFP_Pos)    /*!< GPB_MFPL PB3 s
 367:src/sys.h     **** #define SYS_GPB_MFPL_PB3MFP_SC1_nCD         (0xAUL<<SYS_GPB_MFPL_PB3MFP_Pos)    /*!< GPB_MFPL PB3 s
 368:src/sys.h     **** #define SYS_GPB_MFPL_PB3MFP_TM0_EXT         (0xBUL<<SYS_GPB_MFPL_PB3MFP_Pos)    /*!< GPB_MFPL PB3 s
 369:src/sys.h     **** #define SYS_GPB_MFPL_PB3MFP_USCI1_DAT1      (0xCUL<<SYS_GPB_MFPL_PB3MFP_Pos)    /*!< GPB_MFPL PB3 s
 370:src/sys.h     **** #define SYS_GPB_MFPL_PB3MFP_USB_VBUS_EN     (0xDUL<<SYS_GPB_MFPL_PB3MFP_Pos)    /*!< GPB_MFPL PB3 s
 371:src/sys.h     **** #define SYS_GPB_MFPL_PB3MFP_ACMP0_WLAT      (0xEUL<<SYS_GPB_MFPL_PB3MFP_Pos)    /*!< GPB_MFPL PB3 s
 372:src/sys.h     **** 
 373:src/sys.h     **** //PB.4 MFP
 374:src/sys.h     **** #define SYS_GPB_MFPL_PB4MFP_GPIO            (0x0UL<<SYS_GPB_MFPL_PB4MFP_Pos)    /*!< GPB_MFPL PB4 s
 375:src/sys.h     **** #define SYS_GPB_MFPL_PB4MFP_EADC0_CH4       (0x1UL<<SYS_GPB_MFPL_PB4MFP_Pos)    /*!< GPB_MFPL PB4 s
 376:src/sys.h     **** #define SYS_GPB_MFPL_PB4MFP_SPI0_SS         (0x2UL<<SYS_GPB_MFPL_PB4MFP_Pos)    /*!< GPB_MFPL PB4 s
 377:src/sys.h     **** #define SYS_GPB_MFPL_PB4MFP_SPI1_SS         (0x3UL<<SYS_GPB_MFPL_PB4MFP_Pos)    /*!< GPB_MFPL PB4 s
 378:src/sys.h     **** #define SYS_GPB_MFPL_PB4MFP_UART1_nCTS      (0x4UL<<SYS_GPB_MFPL_PB4MFP_Pos)    /*!< GPB_MFPL PB4 s
 379:src/sys.h     **** #define SYS_GPB_MFPL_PB4MFP_ACMP0_N         (0x5UL<<SYS_GPB_MFPL_PB4MFP_Pos)    /*!< GPB_MFPL PB4 s
 380:src/sys.h     **** #define SYS_GPB_MFPL_PB4MFP_PWM1_CH2        (0x6UL<<SYS_GPB_MFPL_PB4MFP_Pos)    /*!< GPB_MFPL PB4 s
 381:src/sys.h     **** #define SYS_GPB_MFPL_PB4MFP_EBI_AD7         (0x7UL<<SYS_GPB_MFPL_PB4MFP_Pos)    /*!< GPB_MFPL PB4 s
 382:src/sys.h     **** #define SYS_GPB_MFPL_PB4MFP_UART4_TXD       (0x8UL<<SYS_GPB_MFPL_PB4MFP_Pos)    /*!< GPB_MFPL PB4 s
 383:src/sys.h     **** #define SYS_GPB_MFPL_PB4MFP_UART2_TXD       (0x9UL<<SYS_GPB_MFPL_PB4MFP_Pos)    /*!< GPB_MFPL PB4 s
 384:src/sys.h     **** #define SYS_GPB_MFPL_PB4MFP_SC1_DAT         (0xAUL<<SYS_GPB_MFPL_PB4MFP_Pos)    /*!< GPB_MFPL PB4 s
 385:src/sys.h     **** #define SYS_GPB_MFPL_PB4MFP_TM1_EXT         (0xBUL<<SYS_GPB_MFPL_PB4MFP_Pos)    /*!< GPB_MFPL PB4 s
 386:src/sys.h     **** #define SYS_GPB_MFPL_PB4MFP_USCI1_CLK       (0xCUL<<SYS_GPB_MFPL_PB4MFP_Pos)    /*!< GPB_MFPL PB4 s
 387:src/sys.h     **** #define SYS_GPB_MFPL_PB4MFP_SPI4_CLK        (0xDUL<<SYS_GPB_MFPL_PB4MFP_Pos)    /*!< GPB_MFPL PB4 s
 388:src/sys.h     **** #define SYS_GPB_MFPL_PB4MFP_ECAP1_IC0       (0xEUL<<SYS_GPB_MFPL_PB4MFP_Pos)    /*!< GPB_MFPL PB4 s
 389:src/sys.h     **** 
 390:src/sys.h     **** //PB.5 MFP
 391:src/sys.h     **** #define SYS_GPB_MFPL_PB5MFP_GPIO            (0x0UL<<SYS_GPB_MFPL_PB5MFP_Pos)    /*!< GPB_MFPL PB5 s
 392:src/sys.h     **** #define SYS_GPB_MFPL_PB5MFP_EADC0_CH13      (0x1UL<<SYS_GPB_MFPL_PB5MFP_Pos)    /*!< GPB_MFPL PB5 s
 393:src/sys.h     **** #define SYS_GPB_MFPL_PB5MFP_SPI0_MOSI0      (0x2UL<<SYS_GPB_MFPL_PB5MFP_Pos)    /*!< GPB_MFPL PB5 s
 394:src/sys.h     **** #define SYS_GPB_MFPL_PB5MFP_SPI1_MOSI       (0x3UL<<SYS_GPB_MFPL_PB5MFP_Pos)    /*!< GPB_MFPL PB5 s
 395:src/sys.h     **** #define SYS_GPB_MFPL_PB5MFP_UART5_TXD       (0x4UL<<SYS_GPB_MFPL_PB5MFP_Pos)    /*!< GPB_MFPL PB5 s
 396:src/sys.h     **** #define SYS_GPB_MFPL_PB5MFP_ACMP0_P2        (0x5UL<<SYS_GPB_MFPL_PB5MFP_Pos)    /*!< GPB_MFPL PB5 s
 397:src/sys.h     **** #define SYS_GPB_MFPL_PB5MFP_PWM0_BRAKE1     (0x6UL<<SYS_GPB_MFPL_PB5MFP_Pos)    /*!< GPB_MFPL PB5 s
 398:src/sys.h     **** #define SYS_GPB_MFPL_PB5MFP_EBI_AD6         (0x7UL<<SYS_GPB_MFPL_PB5MFP_Pos)    /*!< GPB_MFPL PB5 s
 399:src/sys.h     **** #define SYS_GPB_MFPL_PB5MFP_OPA0_O          (0x8UL<<SYS_GPB_MFPL_PB5MFP_Pos)    /*!< GPB_MFPL PB5 s
 400:src/sys.h     **** #define SYS_GPB_MFPL_PB5MFP_UART2_RXD       (0x9UL<<SYS_GPB_MFPL_PB5MFP_Pos)    /*!< GPB_MFPL PB5 s
 401:src/sys.h     **** #define SYS_GPB_MFPL_PB5MFP_SC1_RST         (0xBUL<<SYS_GPB_MFPL_PB5MFP_Pos)    /*!< GPB_MFPL PB5 s
 402:src/sys.h     **** #define SYS_GPB_MFPL_PB5MFP_SD1_DAT3        (0xEUL<<SYS_GPB_MFPL_PB5MFP_Pos)    /*!< GPB_MFPL PB5 s
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 44


 403:src/sys.h     **** 
 404:src/sys.h     **** //PB.6 MFP
 405:src/sys.h     **** #define SYS_GPB_MFPL_PB6MFP_GPIO            (0x0UL<<SYS_GPB_MFPL_PB6MFP_Pos)    /*!< GPB_MFPL PB6 s
 406:src/sys.h     **** #define SYS_GPB_MFPL_PB6MFP_EADC0_CH14      (0x1UL<<SYS_GPB_MFPL_PB6MFP_Pos)    /*!< GPB_MFPL PB6 s
 407:src/sys.h     **** #define SYS_GPB_MFPL_PB6MFP_SPI0_MISO0      (0x2UL<<SYS_GPB_MFPL_PB6MFP_Pos)    /*!< GPB_MFPL PB6 s
 408:src/sys.h     **** #define SYS_GPB_MFPL_PB6MFP_SPI1_MISO       (0x3UL<<SYS_GPB_MFPL_PB6MFP_Pos)    /*!< GPB_MFPL PB6 s
 409:src/sys.h     **** #define SYS_GPB_MFPL_PB6MFP_UART4_TXD       (0x4UL<<SYS_GPB_MFPL_PB6MFP_Pos)    /*!< GPB_MFPL PB6 s
 410:src/sys.h     **** #define SYS_GPB_MFPL_PB6MFP_ACMP0_P1        (0x5UL<<SYS_GPB_MFPL_PB6MFP_Pos)    /*!< GPB_MFPL PB6 s
 411:src/sys.h     **** #define SYS_GPB_MFPL_PB6MFP_PWM1_CH0        (0x6UL<<SYS_GPB_MFPL_PB6MFP_Pos)    /*!< GPB_MFPL PB6 s
 412:src/sys.h     **** #define SYS_GPB_MFPL_PB6MFP_EBI_AD5         (0x7UL<<SYS_GPB_MFPL_PB6MFP_Pos)    /*!< GPB_MFPL PB6 s
 413:src/sys.h     **** #define SYS_GPB_MFPL_PB6MFP_OPA0_N          (0x8UL<<SYS_GPB_MFPL_PB6MFP_Pos)    /*!< GPB_MFPL PB6 s
 414:src/sys.h     **** #define SYS_GPB_MFPL_PB6MFP_SC1_CLK         (0xBUL<<SYS_GPB_MFPL_PB6MFP_Pos)    /*!< GPB_MFPL PB6 s
 415:src/sys.h     **** #define SYS_GPB_MFPL_PB6MFP_USCI0_DAT0      (0xCUL<<SYS_GPB_MFPL_PB6MFP_Pos)    /*!< GPB_MFPL PB6 s
 416:src/sys.h     **** #define SYS_GPB_MFPL_PB6MFP_BPWM0_CH0       (0xDUL<<SYS_GPB_MFPL_PB6MFP_Pos)    /*!< GPB_MFPL PB6 s
 417:src/sys.h     **** #define SYS_GPB_MFPL_PB6MFP_SD1_DAT2        (0xEUL<<SYS_GPB_MFPL_PB6MFP_Pos)    /*!< GPB_MFPL PB6 s
 418:src/sys.h     **** 
 419:src/sys.h     **** //PB.7 MFP
 420:src/sys.h     **** #define SYS_GPB_MFPL_PB7MFP_GPIO            (0x0UL<<SYS_GPB_MFPL_PB7MFP_Pos)    /*!< GPB_MFPL PB7 s
 421:src/sys.h     **** #define SYS_GPB_MFPL_PB7MFP_EADC0_CH15      (0x1UL<<SYS_GPB_MFPL_PB7MFP_Pos)    /*!< GPB_MFPL PB7 s
 422:src/sys.h     **** #define SYS_GPB_MFPL_PB7MFP_SPI0_CLK        (0x2UL<<SYS_GPB_MFPL_PB7MFP_Pos)    /*!< GPB_MFPL PB7 s
 423:src/sys.h     **** #define SYS_GPB_MFPL_PB7MFP_SPI1_CLK        (0x3UL<<SYS_GPB_MFPL_PB7MFP_Pos)    /*!< GPB_MFPL PB7 s
 424:src/sys.h     **** #define SYS_GPB_MFPL_PB7MFP_UART4_RXD       (0x4UL<<SYS_GPB_MFPL_PB7MFP_Pos)    /*!< GPB_MFPL PB7 s
 425:src/sys.h     **** #define SYS_GPB_MFPL_PB7MFP_ACMP0_P0        (0x5UL<<SYS_GPB_MFPL_PB7MFP_Pos)    /*!< GPB_MFPL PB7 s
 426:src/sys.h     **** #define SYS_GPB_MFPL_PB7MFP_PWM1_CH1        (0x6UL<<SYS_GPB_MFPL_PB7MFP_Pos)    /*!< GPB_MFPL PB7 s
 427:src/sys.h     **** #define SYS_GPB_MFPL_PB7MFP_EBI_AD4         (0x7UL<<SYS_GPB_MFPL_PB7MFP_Pos)    /*!< GPB_MFPL PB7 s
 428:src/sys.h     **** #define SYS_GPB_MFPL_PB7MFP_OPA0_P          (0x8UL<<SYS_GPB_MFPL_PB7MFP_Pos)    /*!< GPB_MFPL PB7 s
 429:src/sys.h     **** #define SYS_GPB_MFPL_PB7MFP_SC0_PWR         (0x9UL<<SYS_GPB_MFPL_PB7MFP_Pos)    /*!< GPB_MFPL PB7 s
 430:src/sys.h     **** #define SYS_GPB_MFPL_PB7MFP_EADC0_ST        (0xAUL<<SYS_GPB_MFPL_PB7MFP_Pos)    /*!< GPB_MFPL PB7 s
 431:src/sys.h     **** #define SYS_GPB_MFPL_PB7MFP_SC1_DAT         (0xBUL<<SYS_GPB_MFPL_PB7MFP_Pos)    /*!< GPB_MFPL PB7 s
 432:src/sys.h     **** #define SYS_GPB_MFPL_PB7MFP_BPWM0_CH1       (0xDUL<<SYS_GPB_MFPL_PB7MFP_Pos)    /*!< GPB_MFPL PB7 s
 433:src/sys.h     **** #define SYS_GPB_MFPL_PB7MFP_USCI0_DAT1      (0xCUL<<SYS_GPB_MFPL_PB7MFP_Pos)    /*!< GPB_MFPL PB7 s
 434:src/sys.h     **** #define SYS_GPB_MFPL_PB7MFP_SD1_DAT1        (0xEUL<<SYS_GPB_MFPL_PB7MFP_Pos)    /*!< GPB_MFPL PB7 s
 435:src/sys.h     **** 
 436:src/sys.h     **** //PB.8 MFP
 437:src/sys.h     **** #define SYS_GPB_MFPH_PB8MFP_GPIO            (0x0UL<<SYS_GPB_MFPH_PB8MFP_Pos)    /*!< GPB_MFPH PB8 s
 438:src/sys.h     **** #define SYS_GPB_MFPH_PB8MFP_EADC0_CH5       (0x1UL<<SYS_GPB_MFPH_PB8MFP_Pos)    /*!< GPB_MFPH PB8 s
 439:src/sys.h     **** #define SYS_GPB_MFPH_PB8MFP_SPI4_SS         (0x2UL<<SYS_GPB_MFPH_PB8MFP_Pos)    /*!< GPB_MFPH PB8 s
 440:src/sys.h     **** #define SYS_GPB_MFPH_PB8MFP_UART1_nRTS      (0x4UL<<SYS_GPB_MFPH_PB8MFP_Pos)    /*!< GPB_MFPH PB8 s
 441:src/sys.h     **** #define SYS_GPB_MFPH_PB8MFP_PWM0_CH2        (0x6UL<<SYS_GPB_MFPH_PB8MFP_Pos)    /*!< GPB_MFPH PB8 s
 442:src/sys.h     **** #define SYS_GPB_MFPH_PB8MFP_EBI_AD8         (0x7UL<<SYS_GPB_MFPH_PB8MFP_Pos)    /*!< GPB_MFPH PB8 s
 443:src/sys.h     **** #define SYS_GPB_MFPH_PB8MFP_UART4_RXD       (0x8UL<<SYS_GPB_MFPH_PB8MFP_Pos)    /*!< GPB_MFPH PB8 s
 444:src/sys.h     **** #define SYS_GPB_MFPH_PB8MFP_ECAP1_IC1       (0xEUL<<SYS_GPB_MFPH_PB8MFP_Pos)    /*!< GPB_MFPH PB8 s
 445:src/sys.h     **** 
 446:src/sys.h     **** //PB.9 MFP
 447:src/sys.h     **** #define SYS_GPB_MFPH_PB9MFP_GPIO            (0x0UL<<SYS_GPB_MFPH_PB9MFP_Pos)    /*!< GPB_MFPH PB9 s
 448:src/sys.h     **** #define SYS_GPB_MFPH_PB9MFP_EADC0_CH6       (0x1UL<<SYS_GPB_MFPH_PB9MFP_Pos)    /*!< GPB_MFPH PB9 s
 449:src/sys.h     **** #define SYS_GPB_MFPH_PB9MFP_SPI4_I2SMCLK    (0x2UL<<SYS_GPB_MFPH_PB9MFP_Pos)    /*!< GPB_MFPH PB9 s
 450:src/sys.h     **** #define SYS_GPB_MFPH_PB9MFP_UART5_nRTS      (0x4UL<<SYS_GPB_MFPH_PB9MFP_Pos)    /*!< GPB_MFPH PB9 s
 451:src/sys.h     **** #define SYS_GPB_MFPH_PB9MFP_EBI_AD9         (0x7UL<<SYS_GPB_MFPH_PB9MFP_Pos)    /*!< GPB_MFPH PB9 s
 452:src/sys.h     **** 
 453:src/sys.h     **** //PB.10 MFP
 454:src/sys.h     **** #define SYS_GPB_MFPH_PB10MFP_GPIO           (0x0UL<<SYS_GPB_MFPH_PB10MFP_Pos)   /*!< GPB_MFPH PB10 
 455:src/sys.h     **** #define SYS_GPB_MFPH_PB10MFP_EADC0_CH7      (0x1UL<<SYS_GPB_MFPH_PB10MFP_Pos)   /*!< GPB_MFPH PB10 
 456:src/sys.h     **** #define SYS_GPB_MFPH_PB10MFP_SPI4_CLK       (0x2UL<<SYS_GPB_MFPH_PB10MFP_Pos)   /*!< GPB_MFPH PB10 
 457:src/sys.h     **** #define SYS_GPB_MFPH_PB10MFP_UART5_nCTS     (0x4UL<<SYS_GPB_MFPH_PB10MFP_Pos)   /*!< GPB_MFPH PB10 
 458:src/sys.h     **** #define SYS_GPB_MFPH_PB10MFP_EBI_AD10       (0x7UL<<SYS_GPB_MFPH_PB10MFP_Pos)   /*!< GPB_MFPH PB10 
 459:src/sys.h     **** 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 45


 460:src/sys.h     **** //PB.11 MFP
 461:src/sys.h     **** #define SYS_GPB_MFPH_PB11MFP_GPIO           (0x0UL<<SYS_GPB_MFPH_PB11MFP_Pos)   /*!< GPB_MFPH PB11 
 462:src/sys.h     **** #define SYS_GPB_MFPH_PB11MFP_EADC0_CH8      (0x1UL<<SYS_GPB_MFPH_PB11MFP_Pos)   /*!< GPB_MFPH PB11 
 463:src/sys.h     **** #define SYS_GPB_MFPH_PB11MFP_SPI4_MISO      (0x2UL<<SYS_GPB_MFPH_PB11MFP_Pos)   /*!< GPB_MFPH PB11 
 464:src/sys.h     **** #define SYS_GPB_MFPH_PB11MFP_UART5_TXD      (0x4UL<<SYS_GPB_MFPH_PB11MFP_Pos)   /*!< GPB_MFPH PB11 
 465:src/sys.h     **** #define SYS_GPB_MFPH_PB11MFP_EBI_ADR18      (0x7UL<<SYS_GPB_MFPH_PB11MFP_Pos)   /*!< GPB_MFPH PB11 
 466:src/sys.h     **** #define SYS_GPB_MFPH_PB11MFP_UART4_nCTS     (0x8UL<<SYS_GPB_MFPH_PB11MFP_Pos)   /*!< GPB_MFPH PB11 
 467:src/sys.h     **** #define SYS_GPB_MFPH_PB11MFP_ECAP1_IC2      (0xEUL<<SYS_GPB_MFPH_PB11MFP_Pos)   /*!< GPB_MFPH PB11 
 468:src/sys.h     **** 
 469:src/sys.h     **** //PB.12 MFP
 470:src/sys.h     **** #define SYS_GPB_MFPH_PB12MFP_GPIO           (0x0UL<<SYS_GPB_MFPH_PB12MFP_Pos)   /*!< GPB_MFPH PB12 
 471:src/sys.h     **** #define SYS_GPB_MFPH_PB12MFP_EADC0_CH9      (0x1UL<<SYS_GPB_MFPH_PB12MFP_Pos)   /*!< GPB_MFPH PB12 
 472:src/sys.h     **** #define SYS_GPB_MFPH_PB12MFP_SPI4_MOSI      (0x2UL<<SYS_GPB_MFPH_PB12MFP_Pos)   /*!< GPB_MFPH PB12 
 473:src/sys.h     **** #define SYS_GPB_MFPH_PB12MFP_UART5_RXD      (0x4UL<<SYS_GPB_MFPH_PB12MFP_Pos)   /*!< GPB_MFPH PB12 
 474:src/sys.h     **** #define SYS_GPB_MFPH_PB12MFP_EBI_ADR19      (0x7UL<<SYS_GPB_MFPH_PB12MFP_Pos)   /*!< GPB_MFPH PB12 
 475:src/sys.h     **** #define SYS_GPB_MFPH_PB12MFP_UART4_nRTS     (0x8UL<<SYS_GPB_MFPH_PB12MFP_Pos)   /*!< GPB_MFPH PB12 
 476:src/sys.h     **** 
 477:src/sys.h     **** //PB.13 MFP
 478:src/sys.h     **** #define SYS_GPB_MFPH_PB13MFP_GPIO           (0x0UL<<SYS_GPB_MFPH_PB13MFP_Pos)   /*!< GPB_MFPH PB13 
 479:src/sys.h     **** #define SYS_GPB_MFPH_PB13MFP_EADC0_CH10     (0x1UL<<SYS_GPB_MFPH_PB13MFP_Pos)   /*!< GPB_MFPH PB13 
 480:src/sys.h     **** #define SYS_GPB_MFPH_PB13MFP_EBI_ADR9       (0x7UL<<SYS_GPB_MFPH_PB13MFP_Pos)   /*!< GPB_MFPH PB13 
 481:src/sys.h     **** 
 482:src/sys.h     **** //PB.14 MFP
 483:src/sys.h     **** #define SYS_GPB_MFPH_PB14MFP_GPIO           (0x0UL<<SYS_GPB_MFPH_PB14MFP_Pos)   /*!< GPB_MFPH PB14 
 484:src/sys.h     **** #define SYS_GPB_MFPH_PB14MFP_EADC0_CH11     (0x1UL<<SYS_GPB_MFPH_PB14MFP_Pos)   /*!< GPB_MFPH PB14 
 485:src/sys.h     **** #define SYS_GPB_MFPH_PB14MFP_EBI_ADR8       (0x7UL<<SYS_GPB_MFPH_PB14MFP_Pos)   /*!< GPB_MFPH PB14 
 486:src/sys.h     **** 
 487:src/sys.h     **** //PB.15 MFP
 488:src/sys.h     **** #define SYS_GPB_MFPH_PB15MFP_GPIO           (0x0UL<<SYS_GPB_MFPH_PB15MFP_Pos)   /*!< GPB_MFPH PB15 
 489:src/sys.h     **** #define SYS_GPB_MFPH_PB15MFP_EADC0_CH12     (0x1UL<<SYS_GPB_MFPH_PB15MFP_Pos)   /*!< GPB_MFPH PB15 
 490:src/sys.h     **** #define SYS_GPB_MFPH_PB15MFP_SPI1_SS        (0x3UL<<SYS_GPB_MFPH_PB15MFP_Pos)   /*!< GPB_MFPH PB15 
 491:src/sys.h     **** #define SYS_GPB_MFPH_PB15MFP_UART5_RXD      (0x4UL<<SYS_GPB_MFPH_PB15MFP_Pos)   /*!< GPB_MFPH PB15 
 492:src/sys.h     **** #define SYS_GPB_MFPH_PB15MFP_ACMP0_P3       (0x5UL<<SYS_GPB_MFPH_PB15MFP_Pos)   /*!< GPB_MFPH PB15 
 493:src/sys.h     **** #define SYS_GPB_MFPH_PB15MFP_EBI_nCS1       (0x7UL<<SYS_GPB_MFPH_PB15MFP_Pos)   /*!< GPB_MFPH PB15 
 494:src/sys.h     **** #define SYS_GPB_MFPH_PB15MFP_SC1_PWR        (0xBUL<<SYS_GPB_MFPH_PB15MFP_Pos)   /*!< GPB_MFPH PB15 
 495:src/sys.h     **** 
 496:src/sys.h     **** //PC.0 MFP
 497:src/sys.h     **** #define SYS_GPC_MFPL_PC0MFP_GPIO            (0x0UL<<SYS_GPC_MFPL_PC0MFP_Pos)    /*!< GPC_MFPL PC0 s
 498:src/sys.h     **** #define SYS_GPC_MFPL_PC0MFP_SPI0_MISO1      (0x1UL<<SYS_GPC_MFPL_PC0MFP_Pos)    /*!< GPC_MFPL PC0 s
 499:src/sys.h     **** #define SYS_GPC_MFPL_PC0MFP_SPI2_CLK        (0x2UL<<SYS_GPC_MFPL_PC0MFP_Pos)    /*!< GPC_MFPL PC0 s
 500:src/sys.h     **** #define SYS_GPC_MFPL_PC0MFP_UART2_nCTS      (0x3UL<<SYS_GPC_MFPL_PC0MFP_Pos)    /*!< GPC_MFPL PC0 s
 501:src/sys.h     **** #define SYS_GPC_MFPL_PC0MFP_CAN0_TXD        (0x4UL<<SYS_GPC_MFPL_PC0MFP_Pos)    /*!< GPC_MFPL PC0 s
 502:src/sys.h     **** #define SYS_GPC_MFPL_PC0MFP_TM3_EXT         (0x5UL<<SYS_GPC_MFPL_PC0MFP_Pos)    /*!< GPC_MFPL PC0 s
 503:src/sys.h     **** #define SYS_GPC_MFPL_PC0MFP_PWM0_CH0        (0x6UL<<SYS_GPC_MFPL_PC0MFP_Pos)    /*!< GPC_MFPL PC0 s
 504:src/sys.h     **** #define SYS_GPC_MFPL_PC0MFP_EBI_AD8         (0x7UL<<SYS_GPC_MFPL_PC0MFP_Pos)    /*!< GPC_MFPL PC0 s
 505:src/sys.h     **** #define SYS_GPC_MFPL_PC0MFP_INT2            (0x8UL<<SYS_GPC_MFPL_PC0MFP_Pos)    /*!< GPC_MFPL PC0 s
 506:src/sys.h     **** #define SYS_GPC_MFPL_PC0MFP_UART3_TXD       (0x9UL<<SYS_GPC_MFPL_PC0MFP_Pos)    /*!< GPC_MFPL PC0 s
 507:src/sys.h     **** #define SYS_GPC_MFPL_PC0MFP_I2S0_LRCK       (0xAUL<<SYS_GPC_MFPL_PC0MFP_Pos)    /*!< GPC_MFPL PC0 s
 508:src/sys.h     **** #define SYS_GPC_MFPL_PC0MFP_SD0_CLK         (0xBUL<<SYS_GPC_MFPL_PC0MFP_Pos)    /*!< GPC_MFPL PC0 s
 509:src/sys.h     **** #define SYS_GPC_MFPL_PC0MFP_USCI0_CLK       (0xCUL<<SYS_GPC_MFPL_PC0MFP_Pos)    /*!< GPC_MFPL PC0 s
 510:src/sys.h     **** #define SYS_GPC_MFPL_PC0MFP_TRACE_CLK       (0xDUL<<SYS_GPC_MFPL_PC0MFP_Pos)    /*!< GPC_MFPL PC0 s
 511:src/sys.h     **** #define SYS_GPC_MFPL_PC0MFP_LCD_SEG16       (0xEUL<<SYS_GPC_MFPL_PC0MFP_Pos)    /*!< GPC_MFPL PC0 s
 512:src/sys.h     **** #define SYS_GPC_MFPL_PC0MFP_DSRC_TXON       (0xFUL<<SYS_GPC_MFPL_PC0MFP_Pos)    /*!< GPC_MFPL PC0 s
 513:src/sys.h     **** 
 514:src/sys.h     **** //PC.1 MFP
 515:src/sys.h     **** #define SYS_GPC_MFPL_PC1MFP_GPIO            (0x0UL<<SYS_GPC_MFPL_PC1MFP_Pos)    /*!< GPC_MFPL PC1 s
 516:src/sys.h     **** #define SYS_GPC_MFPL_PC1MFP_CLKO            (0x1UL<<SYS_GPC_MFPL_PC1MFP_Pos)    /*!< GPC_MFPL PC1 s
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 46


 517:src/sys.h     **** #define SYS_GPC_MFPL_PC1MFP_DAC0_ST         (0x2UL<<SYS_GPC_MFPL_PC1MFP_Pos)    /*!< GPC_MFPL PC1 s
 518:src/sys.h     **** #define SYS_GPC_MFPL_PC1MFP_UART2_nRTS      (0x3UL<<SYS_GPC_MFPL_PC1MFP_Pos)    /*!< GPC_MFPL PC1 s
 519:src/sys.h     **** #define SYS_GPC_MFPL_PC1MFP_CAN0_RXD        (0x4UL<<SYS_GPC_MFPL_PC1MFP_Pos)    /*!< GPC_MFPL PC1 s
 520:src/sys.h     **** #define SYS_GPC_MFPL_PC1MFP_SPI2_I2SMCLK    (0x5UL<<SYS_GPC_MFPL_PC1MFP_Pos)    /*!< GPC_MFPL PC1 s
 521:src/sys.h     **** #define SYS_GPC_MFPL_PC1MFP_PWM0_CH1        (0x6UL<<SYS_GPC_MFPL_PC1MFP_Pos)    /*!< GPC_MFPL PC1 s
 522:src/sys.h     **** #define SYS_GPC_MFPL_PC1MFP_EBI_AD9         (0x7UL<<SYS_GPC_MFPL_PC1MFP_Pos)    /*!< GPC_MFPL PC1 s
 523:src/sys.h     **** #define SYS_GPC_MFPL_PC1MFP_SPI0_MOSI1      (0x8UL<<SYS_GPC_MFPL_PC1MFP_Pos)    /*!< GPC_MFPL PC1 s
 524:src/sys.h     **** #define SYS_GPC_MFPL_PC1MFP_UART3_RXD       (0x9UL<<SYS_GPC_MFPL_PC1MFP_Pos)    /*!< GPC_MFPL PC1 s
 525:src/sys.h     **** #define SYS_GPC_MFPL_PC1MFP_I2S0_DO         (0xAUL<<SYS_GPC_MFPL_PC1MFP_Pos)    /*!< GPC_MFPL PC1 s
 526:src/sys.h     **** #define SYS_GPC_MFPL_PC1MFP_SD0_DAT3        (0xBUL<<SYS_GPC_MFPL_PC1MFP_Pos)    /*!< GPC_MFPL PC1 s
 527:src/sys.h     **** #define SYS_GPC_MFPL_PC1MFP_USCI0_DAT0      (0xCUL<<SYS_GPC_MFPL_PC1MFP_Pos)    /*!< GPC_MFPL PC1 s
 528:src/sys.h     **** #define SYS_GPC_MFPL_PC1MFP_TRACE_DATA0     (0xDUL<<SYS_GPC_MFPL_PC1MFP_Pos)    /*!< GPC_MFPL PC1 s
 529:src/sys.h     **** #define SYS_GPC_MFPL_PC1MFP_LCD_SEG17       (0xEUL<<SYS_GPC_MFPL_PC1MFP_Pos)    /*!< GPC_MFPL PC1 s
 530:src/sys.h     **** #define SYS_GPC_MFPL_PC1MFP_DSRC_RXON       (0xFUL<<SYS_GPC_MFPL_PC1MFP_Pos)    /*!< GPC_MFPL PC1 s
 531:src/sys.h     **** 
 532:src/sys.h     **** //PC.2 MFP
 533:src/sys.h     **** #define SYS_GPC_MFPL_PC2MFP_GPIO            (0x0UL<<SYS_GPC_MFPL_PC2MFP_Pos)    /*!< GPC_MFPL PC2 s
 534:src/sys.h     **** #define SYS_GPC_MFPL_PC2MFP_SPI2_SS         (0x2UL<<SYS_GPC_MFPL_PC2MFP_Pos)    /*!< GPC_MFPL PC2 s
 535:src/sys.h     **** #define SYS_GPC_MFPL_PC2MFP_UART2_TXD       (0x3UL<<SYS_GPC_MFPL_PC2MFP_Pos)    /*!< GPC_MFPL PC2 s
 536:src/sys.h     **** #define SYS_GPC_MFPL_PC2MFP_TM3             (0x4UL<<SYS_GPC_MFPL_PC2MFP_Pos)    /*!< GPC_MFPL PC2 s
 537:src/sys.h     **** #define SYS_GPC_MFPL_PC2MFP_ACMP1_O         (0x5UL<<SYS_GPC_MFPL_PC2MFP_Pos)    /*!< GPC_MFPL PC2 s
 538:src/sys.h     **** #define SYS_GPC_MFPL_PC2MFP_PWM0_CH2        (0x6UL<<SYS_GPC_MFPL_PC2MFP_Pos)    /*!< GPC_MFPL PC2 s
 539:src/sys.h     **** #define SYS_GPC_MFPL_PC2MFP_EBI_AD10        (0x7UL<<SYS_GPC_MFPL_PC2MFP_Pos)    /*!< GPC_MFPL PC2 s
 540:src/sys.h     **** #define SYS_GPC_MFPL_PC2MFP_SPI0_MISO0      (0x8UL<<SYS_GPC_MFPL_PC2MFP_Pos)    /*!< GPC_MFPL PC2 s
 541:src/sys.h     **** #define SYS_GPC_MFPL_PC2MFP_I2S0_MCLK       (0xAUL<<SYS_GPC_MFPL_PC2MFP_Pos)    /*!< GPC_MFPL PC2 s
 542:src/sys.h     **** #define SYS_GPC_MFPL_PC2MFP_SD0_DAT2        (0xBUL<<SYS_GPC_MFPL_PC2MFP_Pos)    /*!< GPC_MFPL PC2 s
 543:src/sys.h     **** #define SYS_GPC_MFPL_PC2MFP_USCI0_DAT1      (0xCUL<<SYS_GPC_MFPL_PC2MFP_Pos)    /*!< GPC_MFPL PC2 s
 544:src/sys.h     **** #define SYS_GPC_MFPL_PC2MFP_TRACE_DATA1     (0xDUL<<SYS_GPC_MFPL_PC2MFP_Pos)    /*!< GPC_MFPL PC2 s
 545:src/sys.h     **** #define SYS_GPC_MFPL_PC2MFP_LCD_SEG18       (0xEUL<<SYS_GPC_MFPL_PC2MFP_Pos)    /*!< GPC_MFPL PC2 s
 546:src/sys.h     **** #define SYS_GPC_MFPL_PC2MFP_SPI5_MISO       (0xFUL<<SYS_GPC_MFPL_PC2MFP_Pos)    /*!< GPC_MFPL PC2 s
 547:src/sys.h     **** 
 548:src/sys.h     **** //PC.3 MFP
 549:src/sys.h     **** #define SYS_GPC_MFPL_PC3MFP_GPIO            (0x0UL<<SYS_GPC_MFPL_PC3MFP_Pos)    /*!< GPC_MFPL PC3 s
 550:src/sys.h     **** #define SYS_GPC_MFPL_PC3MFP_SPI2_MOSI       (0x2UL<<SYS_GPC_MFPL_PC3MFP_Pos)    /*!< GPC_MFPL PC3 s
 551:src/sys.h     **** #define SYS_GPC_MFPL_PC3MFP_UART2_RXD       (0x3UL<<SYS_GPC_MFPL_PC3MFP_Pos)    /*!< GPC_MFPL PC3 s
 552:src/sys.h     **** #define SYS_GPC_MFPL_PC3MFP_PWM0_CH3        (0x6UL<<SYS_GPC_MFPL_PC3MFP_Pos)    /*!< GPC_MFPL PC3 s
 553:src/sys.h     **** #define SYS_GPC_MFPL_PC3MFP_EBI_AD11        (0x7UL<<SYS_GPC_MFPL_PC3MFP_Pos)    /*!< GPC_MFPL PC3 s
 554:src/sys.h     **** #define SYS_GPC_MFPL_PC3MFP_SPI0_MOSI0      (0x8UL<<SYS_GPC_MFPL_PC3MFP_Pos)    /*!< GPC_MFPL PC3 s
 555:src/sys.h     **** #define SYS_GPC_MFPL_PC3MFP_I2S0_BCLK       (0xAUL<<SYS_GPC_MFPL_PC3MFP_Pos)    /*!< GPC_MFPL PC3 s
 556:src/sys.h     **** #define SYS_GPC_MFPL_PC3MFP_SD0_DAT1        (0xBUL<<SYS_GPC_MFPL_PC3MFP_Pos)    /*!< GPC_MFPL PC3 s
 557:src/sys.h     **** #define SYS_GPC_MFPL_PC3MFP_USCI0_CTL0      (0xCUL<<SYS_GPC_MFPL_PC3MFP_Pos)    /*!< GPC_MFPL PC3 s
 558:src/sys.h     **** #define SYS_GPC_MFPL_PC3MFP_TRACE_DATA2     (0xDUL<<SYS_GPC_MFPL_PC3MFP_Pos)    /*!< GPC_MFPL PC3 s
 559:src/sys.h     **** #define SYS_GPC_MFPL_PC3MFP_LCD_SEG19       (0xEUL<<SYS_GPC_MFPL_PC3MFP_Pos)    /*!< GPC_MFPL PC3 s
 560:src/sys.h     **** #define SYS_GPC_MFPL_PC3MFP_SPI5_MOSI       (0xFUL<<SYS_GPC_MFPL_PC3MFP_Pos)    /*!< GPC_MFPL PC3 s
 561:src/sys.h     **** 
 562:src/sys.h     **** //PC.4 MFP
 563:src/sys.h     **** #define SYS_GPC_MFPL_PC4MFP_GPIO            (0x0UL<<SYS_GPC_MFPL_PC4MFP_Pos)    /*!< GPC_MFPL PC4 s
 564:src/sys.h     **** #define SYS_GPC_MFPL_PC4MFP_I2C1_SCL        (0x3UL<<SYS_GPC_MFPL_PC4MFP_Pos)    /*!< GPC_MFPL PC4 s
 565:src/sys.h     **** #define SYS_GPC_MFPL_PC4MFP_I2S0_DI         (0xAUL<<SYS_GPC_MFPL_PC4MFP_Pos)    /*!< GPC_MFPL PC4 s
 566:src/sys.h     **** #define SYS_GPC_MFPL_PC4MFP_LCD_SEG20       (0xEUL<<SYS_GPC_MFPL_PC4MFP_Pos)    /*!< GPC_MFPL PC4 s
 567:src/sys.h     **** #define SYS_GPC_MFPL_PC4MFP_PWM0_CH4        (0x6UL<<SYS_GPC_MFPL_PC4MFP_Pos)    /*!< GPC_MFPL PC4 s
 568:src/sys.h     **** #define SYS_GPC_MFPL_PC4MFP_SC0_PWR         (0x1UL<<SYS_GPC_MFPL_PC4MFP_Pos)    /*!< GPC_MFPL PC4 s
 569:src/sys.h     **** #define SYS_GPC_MFPL_PC4MFP_SD0_DAT0        (0xBUL<<SYS_GPC_MFPL_PC4MFP_Pos)    /*!< GPC_MFPL PC4 s
 570:src/sys.h     **** #define SYS_GPC_MFPL_PC4MFP_SPI0_CLK        (0x8UL<<SYS_GPC_MFPL_PC4MFP_Pos)    /*!< GPC_MFPL PC4 s
 571:src/sys.h     **** #define SYS_GPC_MFPL_PC4MFP_SPI2_MISO       (0x2UL<<SYS_GPC_MFPL_PC4MFP_Pos)    /*!< GPC_MFPL PC4 s
 572:src/sys.h     **** #define SYS_GPC_MFPL_PC4MFP_SPI5_CLK        (0xFUL<<SYS_GPC_MFPL_PC4MFP_Pos)    /*!< GPC_MFPL PC4 s
 573:src/sys.h     **** #define SYS_GPC_MFPL_PC4MFP_TRACE_DATA3     (0xDUL<<SYS_GPC_MFPL_PC4MFP_Pos)    /*!< GPC_MFPL PC4 s
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 47


 574:src/sys.h     **** #define SYS_GPC_MFPL_PC4MFP_UART4_nCTS      (0x9UL<<SYS_GPC_MFPL_PC4MFP_Pos)    /*!< GPC_MFPL PC4 s
 575:src/sys.h     **** #define SYS_GPC_MFPL_PC4MFP_USCI0_CTL1      (0xCUL<<SYS_GPC_MFPL_PC4MFP_Pos)    /*!< GPC_MFPL PC4 s
 576:src/sys.h     **** #define SYS_GPC_MFPL_PC4MFP_EBI_AD12        (0x7UL<<SYS_GPC_MFPL_PC4MFP_Pos)    /*!< GPC_MFPL PC4 s
 577:src/sys.h     **** 
 578:src/sys.h     **** //PC.5 MFP
 579:src/sys.h     **** #define SYS_GPC_MFPL_PC5MFP_BPWM0_CH1       (0x4UL<<SYS_GPC_MFPL_PC5MFP_Pos)    /*!< GPC_MFPL PC5 s
 580:src/sys.h     **** #define SYS_GPC_MFPL_PC5MFP_DAC1_ST         (0x3UL<<SYS_GPC_MFPL_PC5MFP_Pos)    /*!< GPC_MFPL PC5 s
 581:src/sys.h     **** #define SYS_GPC_MFPL_PC5MFP_DSRC_WAKEUP     (0xDUL<<SYS_GPC_MFPL_PC5MFP_Pos)    /*!< GPC_MFPL PC5 s
 582:src/sys.h     **** #define SYS_GPC_MFPL_PC5MFP_EBI_AD13        (0x7UL<<SYS_GPC_MFPL_PC5MFP_Pos)    /*!< GPC_MFPL PC5 s
 583:src/sys.h     **** #define SYS_GPC_MFPL_PC5MFP_GPIO            (0x0UL<<SYS_GPC_MFPL_PC5MFP_Pos)    /*!< GPC_MFPL PC5 s
 584:src/sys.h     **** #define SYS_GPC_MFPL_PC5MFP_LCD_SEG22       (0xEUL<<SYS_GPC_MFPL_PC5MFP_Pos)    /*!< GPC_MFPL PC5 s
 585:src/sys.h     **** #define SYS_GPC_MFPL_PC5MFP_PWM0_CH1        (0x6UL<<SYS_GPC_MFPL_PC5MFP_Pos)    /*!< GPC_MFPL PC5 s
 586:src/sys.h     **** #define SYS_GPC_MFPL_PC5MFP_SPI0_SS         (0x8UL<<SYS_GPC_MFPL_PC5MFP_Pos)    /*!< GPC_MFPL PC5 s
 587:src/sys.h     **** #define SYS_GPC_MFPL_PC5MFP_SPI2_I2SMCLK    (0x2UL<<SYS_GPC_MFPL_PC5MFP_Pos)    /*!< GPC_MFPL PC5 s
 588:src/sys.h     **** #define SYS_GPC_MFPL_PC5MFP_SPI5_SS         (0xFUL<<SYS_GPC_MFPL_PC5MFP_Pos)    /*!< GPC_MFPL PC5 s
 589:src/sys.h     **** #define SYS_GPC_MFPL_PC5MFP_UART4_TXD       (0x9UL<<SYS_GPC_MFPL_PC5MFP_Pos)    /*!< GPC_MFPL PC5 s
 590:src/sys.h     **** 
 591:src/sys.h     **** //PC.6 MFP
 592:src/sys.h     **** #define SYS_GPC_MFPL_PC6MFP_ACMP1_O         (0x5UL<<SYS_GPC_MFPL_PC6MFP_Pos)    /*!< GPC_MFPL PC6 s
 593:src/sys.h     **** #define SYS_GPC_MFPL_PC6MFP_EBI_AD14        (0x7UL<<SYS_GPC_MFPL_PC6MFP_Pos)    /*!< GPC_MFPL PC6 s
 594:src/sys.h     **** #define SYS_GPC_MFPL_PC6MFP_ECAP0_IC1       (0xEUL<<SYS_GPC_MFPL_PC6MFP_Pos)    /*!< GPC_MFPL PC6 s
 595:src/sys.h     **** #define SYS_GPC_MFPL_PC6MFP_GPIO            (0x0UL<<SYS_GPC_MFPL_PC6MFP_Pos)    /*!< GPC_MFPL PC6 s
 596:src/sys.h     **** #define SYS_GPC_MFPL_PC6MFP_I2C1_SMBAL      (0x3UL<<SYS_GPC_MFPL_PC6MFP_Pos)    /*!< GPC_MFPL PC6 s
 597:src/sys.h     **** #define SYS_GPC_MFPL_PC6MFP_LCD_SEG25       (0xFUL<<SYS_GPC_MFPL_PC6MFP_Pos)    /*!< GPC_MFPL PC6 s
 598:src/sys.h     **** #define SYS_GPC_MFPL_PC6MFP_PWM1_CH0        (0x6UL<<SYS_GPC_MFPL_PC6MFP_Pos)    /*!< GPC_MFPL PC6 s
 599:src/sys.h     **** #define SYS_GPC_MFPL_PC6MFP_SC0_DAT         (0x4UL<<SYS_GPC_MFPL_PC6MFP_Pos)    /*!< GPC_MFPL PC6 s
 600:src/sys.h     **** #define SYS_GPC_MFPL_PC6MFP_SD1_nCD         (0xBUL<<SYS_GPC_MFPL_PC6MFP_Pos)    /*!< GPC_MFPL PC6 s
 601:src/sys.h     **** #define SYS_GPC_MFPL_PC6MFP_SPI5_MOSI       (0xCUL<<SYS_GPC_MFPL_PC6MFP_Pos)    /*!< GPC_MFPL PC6 s
 602:src/sys.h     **** #define SYS_GPC_MFPL_PC6MFP_UART0_RXD       (0x9UL<<SYS_GPC_MFPL_PC6MFP_Pos)    /*!< GPC_MFPL PC6 s
 603:src/sys.h     **** #define SYS_GPC_MFPL_PC6MFP_UART4_RXD       (0xAUL<<SYS_GPC_MFPL_PC6MFP_Pos)    /*!< GPC_MFPL PC6 s
 604:src/sys.h     **** 
 605:src/sys.h     **** //PC.7 MFP
 606:src/sys.h     **** #define SYS_GPC_MFPL_PC7MFP_EBI_AD15        (0x7UL<<SYS_GPC_MFPL_PC7MFP_Pos)    /*!< GPC_MFPL PC7 s
 607:src/sys.h     **** #define SYS_GPC_MFPL_PC7MFP_ECAP0_IC0       (0xEUL<<SYS_GPC_MFPL_PC7MFP_Pos)    /*!< GPC_MFPL PC7 s
 608:src/sys.h     **** #define SYS_GPC_MFPL_PC7MFP_GPIO            (0x0UL<<SYS_GPC_MFPL_PC7MFP_Pos)    /*!< GPC_MFPL PC7 s
 609:src/sys.h     **** #define SYS_GPC_MFPL_PC7MFP_I2C1_SMBSUS     (0x3UL<<SYS_GPC_MFPL_PC7MFP_Pos)    /*!< GPC_MFPL PC7 s
 610:src/sys.h     **** #define SYS_GPC_MFPL_PC7MFP_LCD_SEG26       (0xFUL<<SYS_GPC_MFPL_PC7MFP_Pos)    /*!< GPC_MFPL PC7 s
 611:src/sys.h     **** #define SYS_GPC_MFPL_PC7MFP_PWM1_CH1        (0x6UL<<SYS_GPC_MFPL_PC7MFP_Pos)    /*!< GPC_MFPL PC7 s
 612:src/sys.h     **** #define SYS_GPC_MFPL_PC7MFP_SC0_CLK         (0x4UL<<SYS_GPC_MFPL_PC7MFP_Pos)    /*!< GPC_MFPL PC7 s
 613:src/sys.h     **** #define SYS_GPC_MFPL_PC7MFP_SD1_CMD         (0xBUL<<SYS_GPC_MFPL_PC7MFP_Pos)    /*!< GPC_MFPL PC7 s
 614:src/sys.h     **** #define SYS_GPC_MFPL_PC7MFP_SPI5_MISO       (0xCUL<<SYS_GPC_MFPL_PC7MFP_Pos)    /*!< GPC_MFPL PC7 s
 615:src/sys.h     **** #define SYS_GPC_MFPL_PC7MFP_UART0_TXD       (0x9UL<<SYS_GPC_MFPL_PC7MFP_Pos)    /*!< GPC_MFPL PC7 s
 616:src/sys.h     **** #define SYS_GPC_MFPL_PC7MFP_UART4_nRTS      (0xAUL<<SYS_GPC_MFPL_PC7MFP_Pos)    /*!< GPC_MFPL PC7 s
 617:src/sys.h     **** 
 618:src/sys.h     **** //PC.8 MFP
 619:src/sys.h     **** #define SYS_GPC_MFPH_PC8MFP_BPWM0_CH0       (0xDUL<<SYS_GPC_MFPH_PC8MFP_Pos)    /*!< GPC_MFPH PC8 s
 620:src/sys.h     **** #define SYS_GPC_MFPH_PC8MFP_EBI_nCS2        (0x7UL<<SYS_GPC_MFPH_PC8MFP_Pos)    /*!< GPC_MFPH PC8 s
 621:src/sys.h     **** #define SYS_GPC_MFPH_PC8MFP_GPIO            (0x0UL<<SYS_GPC_MFPH_PC8MFP_Pos)    /*!< GPC_MFPH PC8 s
 622:src/sys.h     **** #define SYS_GPC_MFPH_PC8MFP_SPI2_I2SMCLK    (0x4UL<<SYS_GPC_MFPH_PC8MFP_Pos)    /*!< GPC_MFPH PC8 s
 623:src/sys.h     **** 
 624:src/sys.h     **** //PC.9 MFP
 625:src/sys.h     **** #define SYS_GPC_MFPH_PC9MFP_EBI_ADR15       (0x7UL<<SYS_GPC_MFPH_PC9MFP_Pos)    /*!< GPC_MFPH PC9 s
 626:src/sys.h     **** #define SYS_GPC_MFPH_PC9MFP_GPIO            (0x0UL<<SYS_GPC_MFPH_PC9MFP_Pos)    /*!< GPC_MFPH PC9 s
 627:src/sys.h     **** #define SYS_GPC_MFPH_PC9MFP_LCD_SEG10       (0xFUL<<SYS_GPC_MFPH_PC9MFP_Pos)    /*!< GPC_MFPH PC9 s
 628:src/sys.h     **** #define SYS_GPC_MFPH_PC9MFP_PWM1_CH0        (0x6UL<<SYS_GPC_MFPH_PC9MFP_Pos)    /*!< GPC_MFPH PC9 s
 629:src/sys.h     **** #define SYS_GPC_MFPH_PC9MFP_SPI2_I2SMCLK    (0x2UL<<SYS_GPC_MFPH_PC9MFP_Pos)    /*!< GPC_MFPH PC9 s
 630:src/sys.h     **** 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 48


 631:src/sys.h     **** //PC.10 MFP
 632:src/sys.h     **** #define SYS_GPC_MFPH_PC10MFP_EBI_ADR14      (0x7UL<<SYS_GPC_MFPH_PC10MFP_Pos)   /*!< GPC_MFPH PC10 
 633:src/sys.h     **** #define SYS_GPC_MFPH_PC10MFP_GPIO           (0x0UL<<SYS_GPC_MFPH_PC10MFP_Pos)   /*!< GPC_MFPH PC10 
 634:src/sys.h     **** #define SYS_GPC_MFPH_PC10MFP_LCD_SEG11      (0xFUL<<SYS_GPC_MFPH_PC10MFP_Pos)   /*!< GPC_MFPH PC10 
 635:src/sys.h     **** #define SYS_GPC_MFPH_PC10MFP_PWM1_CH1       (0x6UL<<SYS_GPC_MFPH_PC10MFP_Pos)   /*!< GPC_MFPH PC10 
 636:src/sys.h     **** #define SYS_GPC_MFPH_PC10MFP_SPI2_MOSI      (0x2UL<<SYS_GPC_MFPH_PC10MFP_Pos)   /*!< GPC_MFPH PC10 
 637:src/sys.h     **** 
 638:src/sys.h     **** //PC.11 MFP
 639:src/sys.h     **** #define SYS_GPC_MFPH_PC11MFP_EBI_ADR13      (0x7UL<<SYS_GPC_MFPH_PC11MFP_Pos)   /*!< GPC_MFPH PC11 
 640:src/sys.h     **** #define SYS_GPC_MFPH_PC11MFP_GPIO           (0x0UL<<SYS_GPC_MFPH_PC11MFP_Pos)   /*!< GPC_MFPH PC11 
 641:src/sys.h     **** #define SYS_GPC_MFPH_PC11MFP_LCD_SEG12      (0xFUL<<SYS_GPC_MFPH_PC11MFP_Pos)   /*!< GPC_MFPH PC11 
 642:src/sys.h     **** #define SYS_GPC_MFPH_PC11MFP_PWM1_CH2       (0x6UL<<SYS_GPC_MFPH_PC11MFP_Pos)   /*!< GPC_MFPH PC11 
 643:src/sys.h     **** #define SYS_GPC_MFPH_PC11MFP_SPI2_MISO      (0x2UL<<SYS_GPC_MFPH_PC11MFP_Pos)   /*!< GPC_MFPH PC11 
 644:src/sys.h     **** 
 645:src/sys.h     **** //PC.12 MFP
 646:src/sys.h     **** #define SYS_GPC_MFPH_PC12MFP_EBI_ADR12      (0x7UL<<SYS_GPC_MFPH_PC12MFP_Pos)   /*!< GPC_MFPH PC12 
 647:src/sys.h     **** #define SYS_GPC_MFPH_PC12MFP_GPIO           (0x0UL<<SYS_GPC_MFPH_PC12MFP_Pos)   /*!< GPC_MFPH PC12 
 648:src/sys.h     **** #define SYS_GPC_MFPH_PC12MFP_LCD_SEG13      (0xFUL<<SYS_GPC_MFPH_PC12MFP_Pos)   /*!< GPC_MFPH PC12 
 649:src/sys.h     **** #define SYS_GPC_MFPH_PC12MFP_PWM1_CH3       (0x6UL<<SYS_GPC_MFPH_PC12MFP_Pos)   /*!< GPC_MFPH PC12 
 650:src/sys.h     **** #define SYS_GPC_MFPH_PC12MFP_SPI2_CLK       (0x2UL<<SYS_GPC_MFPH_PC12MFP_Pos)   /*!< GPC_MFPH PC12 
 651:src/sys.h     **** 
 652:src/sys.h     **** //PC.13 MFP
 653:src/sys.h     **** #define SYS_GPC_MFPH_PC13MFP_EBI_ADR11      (0x7UL<<SYS_GPC_MFPH_PC13MFP_Pos)   /*!< GPC_MFPH PC13 
 654:src/sys.h     **** #define SYS_GPC_MFPH_PC13MFP_GPIO           (0x0UL<<SYS_GPC_MFPH_PC13MFP_Pos)   /*!< GPC_MFPH PC13 
 655:src/sys.h     **** #define SYS_GPC_MFPH_PC13MFP_LCD_SEG14      (0xFUL<<SYS_GPC_MFPH_PC13MFP_Pos)   /*!< GPC_MFPH PC13 
 656:src/sys.h     **** #define SYS_GPC_MFPH_PC13MFP_PWM1_CH4       (0x6UL<<SYS_GPC_MFPH_PC13MFP_Pos)   /*!< GPC_MFPH PC13 
 657:src/sys.h     **** #define SYS_GPC_MFPH_PC13MFP_SPI2_SS        (0x2UL<<SYS_GPC_MFPH_PC13MFP_Pos)   /*!< GPC_MFPH PC13 
 658:src/sys.h     **** 
 659:src/sys.h     **** //PC.14 MFP
 660:src/sys.h     **** #define SYS_GPC_MFPH_PC14MFP_EBI_ADR10      (0x7UL<<SYS_GPC_MFPH_PC14MFP_Pos)   /*!< GPC_MFPH PC14 
 661:src/sys.h     **** #define SYS_GPC_MFPH_PC14MFP_GPIO           (0x0UL<<SYS_GPC_MFPH_PC14MFP_Pos)   /*!< GPC_MFPH PC14 
 662:src/sys.h     **** #define SYS_GPC_MFPH_PC14MFP_LCD_SEG15      (0xFUL<<SYS_GPC_MFPH_PC14MFP_Pos)   /*!< GPC_MFPH PC14 
 663:src/sys.h     **** #define SYS_GPC_MFPH_PC14MFP_PWM1_CH5       (0x6UL<<SYS_GPC_MFPH_PC14MFP_Pos)   /*!< GPC_MFPH PC14 
 664:src/sys.h     **** 
 665:src/sys.h     **** //PC.15 MFP
 666:src/sys.h     **** #define SYS_GPC_MFPH_PC15MFP_EBI_ADR0       (0x7UL<<SYS_GPC_MFPH_PC15MFP_Pos)   /*!< GPC_MFPH PC15 
 667:src/sys.h     **** #define SYS_GPC_MFPH_PC15MFP_GPIO           (0x0UL<<SYS_GPC_MFPH_PC15MFP_Pos)   /*!< GPC_MFPH PC15 
 668:src/sys.h     **** #define SYS_GPC_MFPH_PC15MFP_LCD_SEG9       (0xFUL<<SYS_GPC_MFPH_PC15MFP_Pos)   /*!< GPC_MFPH PC15 
 669:src/sys.h     **** #define SYS_GPC_MFPH_PC15MFP_PWM1_CH0       (0x6UL<<SYS_GPC_MFPH_PC15MFP_Pos)   /*!< GPC_MFPH PC15 
 670:src/sys.h     **** #define SYS_GPC_MFPH_PC15MFP_SPI3_I2SMCLK   (0x9UL<<SYS_GPC_MFPH_PC15MFP_Pos)   /*!< GPC_MFPH PC15 
 671:src/sys.h     **** 
 672:src/sys.h     **** //PD.0 MFP
 673:src/sys.h     **** #define SYS_GPD_MFPL_PD0MFP_ACMP1_N         (0x5UL<<SYS_GPD_MFPL_PD0MFP_Pos)    /*!< GPD_MFPL PD0 s
 674:src/sys.h     **** #define SYS_GPD_MFPL_PD0MFP_BPWM0_CH2       (0xDUL<<SYS_GPD_MFPL_PD0MFP_Pos)    /*!< GPD_MFPL PD0 s
 675:src/sys.h     **** #define SYS_GPD_MFPL_PD0MFP_EBI_ALE         (0x7UL<<SYS_GPD_MFPL_PD0MFP_Pos)    /*!< GPD_MFPL PD0 s
 676:src/sys.h     **** #define SYS_GPD_MFPL_PD0MFP_GPIO            (0x0UL<<SYS_GPD_MFPL_PD0MFP_Pos)    /*!< GPD_MFPL PD0 s
 677:src/sys.h     **** #define SYS_GPD_MFPL_PD0MFP_INT3            (0x8UL<<SYS_GPD_MFPL_PD0MFP_Pos)    /*!< GPD_MFPL PD0 s
 678:src/sys.h     **** #define SYS_GPD_MFPL_PD0MFP_SC0_PWR         (0xAUL<<SYS_GPD_MFPL_PD0MFP_Pos)    /*!< GPD_MFPL PDM s
 679:src/sys.h     **** #define SYS_GPD_MFPL_PD0MFP_SC1_nCD         (0xBUL<<SYS_GPD_MFPL_PD0MFP_Pos)    /*!< GPD_MFPL PD0 s
 680:src/sys.h     **** #define SYS_GPD_MFPL_PD0MFP_SD1_DAT0        (0xEUL<<SYS_GPD_MFPL_PD0MFP_Pos)    /*!< GPD_MFPL PD0 s
 681:src/sys.h     **** #define SYS_GPD_MFPL_PD0MFP_SPI1_I2SMCLK    (0x2UL<<SYS_GPD_MFPL_PD0MFP_Pos)    /*!< GPD_MFPL PD0 s
 682:src/sys.h     **** #define SYS_GPD_MFPL_PD0MFP_TM3             (0xCUL<<SYS_GPD_MFPL_PD0MFP_Pos)    /*!< GPD_MFPL PD0 s
 683:src/sys.h     **** #define SYS_GPD_MFPL_PD0MFP_UART0_RXD       (0x3UL<<SYS_GPD_MFPL_PD0MFP_Pos)    /*!< GPD_MFPL PD0 s
 684:src/sys.h     **** #define SYS_GPD_MFPL_PD0MFP_UART5_RXD       (0x4UL<<SYS_GPD_MFPL_PD0MFP_Pos)    /*!< GPD_MFPL PD0 s
 685:src/sys.h     **** 
 686:src/sys.h     **** //PD.1 MFP
 687:src/sys.h     **** #define SYS_GPD_MFPL_PD1MFP_ACMP1_P2        (0x5UL<<SYS_GPD_MFPL_PD1MFP_Pos)    /*!< GPD_MFPL PD1 s
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 49


 688:src/sys.h     **** #define SYS_GPD_MFPL_PD1MFP_BPWM0_CH3       (0xDUL<<SYS_GPD_MFPL_PD1MFP_Pos)    /*!< GPD_MFPL PD1 s
 689:src/sys.h     **** #define SYS_GPD_MFPL_PD1MFP_EBI_nRD         (0x7UL<<SYS_GPD_MFPL_PD1MFP_Pos)    /*!< GPD_MFPL PD1 s
 690:src/sys.h     **** #define SYS_GPD_MFPL_PD1MFP_GPIO            (0x0UL<<SYS_GPD_MFPL_PD1MFP_Pos)    /*!< GPD_MFPL PD1 s
 691:src/sys.h     **** #define SYS_GPD_MFPL_PD1MFP_OPA1_O          (0x9UL<<SYS_GPD_MFPL_PD1MFP_Pos)    /*!< GPD_MFPL PD1 s
 692:src/sys.h     **** #define SYS_GPD_MFPL_PD1MFP_PWM0_SYNC_IN    (0x2UL<<SYS_GPD_MFPL_PD1MFP_Pos)    /*!< GPD_MFPL PD1 s
 693:src/sys.h     **** #define SYS_GPD_MFPL_PD1MFP_QEI0_B          (0x8UL<<SYS_GPD_MFPL_PD1MFP_Pos)    /*!< GPD_MFPL PD1 s
 694:src/sys.h     **** #define SYS_GPD_MFPL_PD1MFP_SC0_RST         (0xAUL<<SYS_GPD_MFPL_PD1MFP_Pos)    /*!< GPD_MFPL PD1 s
 695:src/sys.h     **** #define SYS_GPD_MFPL_PD1MFP_SC2_RST         (0xBUL<<SYS_GPD_MFPL_PD1MFP_Pos)    /*!< GPD_MFPL PD1 s
 696:src/sys.h     **** #define SYS_GPD_MFPL_PD1MFP_SD1_CLK         (0xEUL<<SYS_GPD_MFPL_PD1MFP_Pos)    /*!< GPD_MFPL PD1 s
 697:src/sys.h     **** #define SYS_GPD_MFPL_PD1MFP_SPI2_MISO       (0x4UL<<SYS_GPD_MFPL_PD1MFP_Pos)    /*!< GPD_MFPL PD1 s
 698:src/sys.h     **** #define SYS_GPD_MFPL_PD1MFP_SPI3_I2SMCLK    (0xFUL<<SYS_GPD_MFPL_PD1MFP_Pos)    /*!< GPD_MFPL PD1 s
 699:src/sys.h     **** #define SYS_GPD_MFPL_PD1MFP_TM0             (0x6UL<<SYS_GPD_MFPL_PD1MFP_Pos)    /*!< GPD_MFPL PD1 s
 700:src/sys.h     **** #define SYS_GPD_MFPL_PD1MFP_UART0_TXD       (0x3UL<<SYS_GPD_MFPL_PD1MFP_Pos)    /*!< GPD_MFPL PD1 s
 701:src/sys.h     **** #define SYS_GPD_MFPL_PD1MFP_UART5_RXD       (0x1UL<<SYS_GPD_MFPL_PD1MFP_Pos)    /*!< GPD_MFPL PD1 s
 702:src/sys.h     **** #define SYS_GPD_MFPL_PD1MFP_USCI0_CTL0      (0xCUL<<SYS_GPD_MFPL_PD1MFP_Pos)    /*!< GPD_MFPL PD1 s
 703:src/sys.h     **** 
 704:src/sys.h     **** //PD.2 MFP
 705:src/sys.h     **** #define SYS_GPD_MFPL_PD2MFP_ACMP1_P1        (0x5UL<<SYS_GPD_MFPL_PD2MFP_Pos)    /*!< GPD_MFPL PD2 s
 706:src/sys.h     **** #define SYS_GPD_MFPL_PD2MFP_BPWM0_CH4       (0xDUL<<SYS_GPD_MFPL_PD2MFP_Pos)    /*!< GPD_MFPL PD2 s
 707:src/sys.h     **** #define SYS_GPD_MFPL_PD2MFP_EADC0_ST        (0x1UL<<SYS_GPD_MFPL_PD2MFP_Pos)    /*!< GPD_MFPL PD2 s
 708:src/sys.h     **** #define SYS_GPD_MFPL_PD2MFP_EBI_nWR         (0x7UL<<SYS_GPD_MFPL_PD2MFP_Pos)    /*!< GPD_MFPL PD2 s
 709:src/sys.h     **** #define SYS_GPD_MFPL_PD2MFP_GPIO            (0x0UL<<SYS_GPD_MFPL_PD2MFP_Pos)    /*!< GPD_MFPL PD2 s
 710:src/sys.h     **** #define SYS_GPD_MFPL_PD2MFP_INT0            (0x8UL<<SYS_GPD_MFPL_PD2MFP_Pos)    /*!< GPD_MFPL PD2 s
 711:src/sys.h     **** #define SYS_GPD_MFPL_PD2MFP_OPA1_N          (0x9UL<<SYS_GPD_MFPL_PD2MFP_Pos)    /*!< GPD_MFPL PD2 s
 712:src/sys.h     **** #define SYS_GPD_MFPL_PD2MFP_PWM0_BRAKE0     (0x6UL<<SYS_GPD_MFPL_PD2MFP_Pos)    /*!< GPD_MFPL PD2 s
 713:src/sys.h     **** #define SYS_GPD_MFPL_PD2MFP_SC0_DAT         (0xAUL<<SYS_GPD_MFPL_PD2MFP_Pos)    /*!< GPD_MFPL PD2 s
 714:src/sys.h     **** #define SYS_GPD_MFPL_PD2MFP_SC2_CLK         (0xBUL<<SYS_GPD_MFPL_PD2MFP_Pos)    /*!< GPD_MFPL PD2 s
 715:src/sys.h     **** #define SYS_GPD_MFPL_PD2MFP_SD1_nCD         (0xEUL<<SYS_GPD_MFPL_PD2MFP_Pos)    /*!< GPD_MFPL PD2 s
 716:src/sys.h     **** #define SYS_GPD_MFPL_PD2MFP_SPI2_CLK        (0x4UL<<SYS_GPD_MFPL_PD2MFP_Pos)    /*!< GPD_MFPL PD2 s
 717:src/sys.h     **** #define SYS_GPD_MFPL_PD2MFP_TM0_EXT         (0x3UL<<SYS_GPD_MFPL_PD2MFP_Pos)    /*!< GPD_MFPL PD2 s
 718:src/sys.h     **** #define SYS_GPD_MFPL_PD2MFP_UART3_TXD       (0x2UL<<SYS_GPD_MFPL_PD2MFP_Pos)    /*!< GPD_MFPL PD2 s
 719:src/sys.h     **** #define SYS_GPD_MFPL_PD2MFP_USCI0_CTL1      (0xCUL<<SYS_GPD_MFPL_PD2MFP_Pos)    /*!< GPD_MFPL PD2 s
 720:src/sys.h     **** 
 721:src/sys.h     **** //PD.3 MFP
 722:src/sys.h     **** #define SYS_GPD_MFPL_PD3MFP_ACMP1_P0        (0x5UL<<SYS_GPD_MFPL_PD3MFP_Pos)    /*!< GPD_MFPL PD3 s
 723:src/sys.h     **** #define SYS_GPD_MFPL_PD3MFP_BPWM0_CH5       (0xDUL<<SYS_GPD_MFPL_PD3MFP_Pos)    /*!< GPD_MFPL PD3 s
 724:src/sys.h     **** #define SYS_GPD_MFPL_PD3MFP_EBI_MCLK        (0x7UL<<SYS_GPD_MFPL_PD3MFP_Pos)    /*!< GPD_MFPL PD3 s
 725:src/sys.h     **** #define SYS_GPD_MFPL_PD3MFP_GPIO            (0x0UL<<SYS_GPD_MFPL_PD3MFP_Pos)    /*!< GPD_MFPL PD3 s
 726:src/sys.h     **** #define SYS_GPD_MFPL_PD3MFP_INT1            (0x8UL<<SYS_GPD_MFPL_PD3MFP_Pos)    /*!< GPD_MFPL PD3 s
 727:src/sys.h     **** #define SYS_GPD_MFPL_PD3MFP_OPA1_P          (0x9UL<<SYS_GPD_MFPL_PD3MFP_Pos)    /*!< GPD_MFPL PD3 s
 728:src/sys.h     **** #define SYS_GPD_MFPL_PD3MFP_PWM0_BRAKE1     (0x6UL<<SYS_GPD_MFPL_PD3MFP_Pos)    /*!< GPD_MFPL PD3 s
 729:src/sys.h     **** #define SYS_GPD_MFPL_PD3MFP_SC0_CLK         (0xAUL<<SYS_GPD_MFPL_PD3MFP_Pos)    /*!< GPD_MFPL PD3 s
 730:src/sys.h     **** #define SYS_GPD_MFPL_PD3MFP_SC2_DAT         (0xBUL<<SYS_GPD_MFPL_PD3MFP_Pos)    /*!< GPD_MFPL PD3 s
 731:src/sys.h     **** #define SYS_GPD_MFPL_PD3MFP_SD1_CMD         (0xEUL<<SYS_GPD_MFPL_PD3MFP_Pos)    /*!< GPD_MFPL PD3 s
 732:src/sys.h     **** #define SYS_GPD_MFPL_PD3MFP_SPI1_I2SMCLK    (0x4UL<<SYS_GPD_MFPL_PD3MFP_Pos)    /*!< GPD_MFPL PD3 s
 733:src/sys.h     **** #define SYS_GPD_MFPL_PD3MFP_TM1_EXT         (0x3UL<<SYS_GPD_MFPL_PD3MFP_Pos)    /*!< GPD_MFPL PD3 s
 734:src/sys.h     **** #define SYS_GPD_MFPL_PD3MFP_TM2             (0x1UL<<SYS_GPD_MFPL_PD3MFP_Pos)    /*!< GPD_MFPL PD3 s
 735:src/sys.h     **** #define SYS_GPD_MFPL_PD3MFP_UART3_RXD       (0x2UL<<SYS_GPD_MFPL_PD3MFP_Pos)    /*!< GPD_MFPL PD3 s
 736:src/sys.h     **** #define SYS_GPD_MFPL_PD3MFP_USCI0_CLK       (0xCUL<<SYS_GPD_MFPL_PD3MFP_Pos)    /*!< GPD_MFPL PD3 s
 737:src/sys.h     **** 
 738:src/sys.h     **** //PD.4 MFP
 739:src/sys.h     **** #define SYS_GPD_MFPL_PD4MFP_EBI_AD11        (0x7UL<<SYS_GPD_MFPL_PD4MFP_Pos)    /*!< GPD_MFPL PD4 s
 740:src/sys.h     **** #define SYS_GPD_MFPL_PD4MFP_GPIO            (0x0UL<<SYS_GPD_MFPL_PD4MFP_Pos)    /*!< GPD_MFPL PD4 s
 741:src/sys.h     **** #define SYS_GPD_MFPL_PD4MFP_I2C0_SDA        (0x3UL<<SYS_GPD_MFPL_PD4MFP_Pos)    /*!< GPD_MFPL PD4 s
 742:src/sys.h     **** #define SYS_GPD_MFPL_PD4MFP_PWM0_BRAKE0     (0x5UL<<SYS_GPD_MFPL_PD4MFP_Pos)    /*!< GPD_MFPL PD4 s
 743:src/sys.h     **** #define SYS_GPD_MFPL_PD4MFP_SPI1_CLK        (0x2UL<<SYS_GPD_MFPL_PD4MFP_Pos)    /*!< GPD_MFPL PD4 s
 744:src/sys.h     **** #define SYS_GPD_MFPL_PD4MFP_TM0             (0x6UL<<SYS_GPD_MFPL_PD4MFP_Pos)    /*!< GPD_MFPL PD4 s
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 50


 745:src/sys.h     **** 
 746:src/sys.h     **** //PD.5 MFP
 747:src/sys.h     **** #define SYS_GPD_MFPL_PD5MFP_CLKO            (0x1UL<<SYS_GPD_MFPL_PD5MFP_Pos)    /*!< GPD_MFPL PD5 s
 748:src/sys.h     **** #define SYS_GPD_MFPL_PD5MFP_EBI_AD12        (0x7UL<<SYS_GPD_MFPL_PD5MFP_Pos)    /*!< GPD_MFPL PD5 s
 749:src/sys.h     **** #define SYS_GPD_MFPL_PD5MFP_GPIO            (0x0UL<<SYS_GPD_MFPL_PD5MFP_Pos)    /*!< GPD_MFPL PD5 s
 750:src/sys.h     **** #define SYS_GPD_MFPL_PD5MFP_I2C0_SCL        (0x3UL<<SYS_GPD_MFPL_PD5MFP_Pos)    /*!< GPD_MFPL PD5 s
 751:src/sys.h     **** #define SYS_GPD_MFPL_PD5MFP_OPA2_O          (0x9UL<<SYS_GPD_MFPL_PD5MFP_Pos)    /*!< GPD_MFPL PD5 s
 752:src/sys.h     **** #define SYS_GPD_MFPL_PD5MFP_PWM0_BRAKE1     (0x5UL<<SYS_GPD_MFPL_PD5MFP_Pos)    /*!< GPD_MFPL PD5 s
 753:src/sys.h     **** #define SYS_GPD_MFPL_PD5MFP_SPI1_MISO       (0x2UL<<SYS_GPD_MFPL_PD5MFP_Pos)    /*!< GPD_MFPL PD5 s
 754:src/sys.h     **** #define SYS_GPD_MFPL_PD5MFP_TM1             (0x6UL<<SYS_GPD_MFPL_PD5MFP_Pos)    /*!< GPD_MFPL PD5 s
 755:src/sys.h     **** 
 756:src/sys.h     **** //PD.6 MFP
 757:src/sys.h     **** #define SYS_GPD_MFPL_PD6MFP_ACMP0_O         (0x5UL<<SYS_GPD_MFPL_PD6MFP_Pos)    /*!< GPD_MFPL PD6 s
 758:src/sys.h     **** #define SYS_GPD_MFPL_PD6MFP_CLKO            (0x1UL<<SYS_GPD_MFPL_PD6MFP_Pos)    /*!< GPD_MFPL PD6 s
 759:src/sys.h     **** #define SYS_GPD_MFPL_PD6MFP_EBI_nWR         (0x7UL<<SYS_GPD_MFPL_PD6MFP_Pos)    /*!< GPD_MFPL PD6 s
 760:src/sys.h     **** #define SYS_GPD_MFPL_PD6MFP_GPIO            (0x0UL<<SYS_GPD_MFPL_PD6MFP_Pos)    /*!< GPD_MFPL PD6 s
 761:src/sys.h     **** #define SYS_GPD_MFPL_PD6MFP_OPA2_P          (0x9UL<<SYS_GPD_MFPL_PD6MFP_Pos)    /*!< GPD_MFPL PD6 s
 762:src/sys.h     **** #define SYS_GPD_MFPL_PD6MFP_PWM0_CH5        (0x6UL<<SYS_GPD_MFPL_PD6MFP_Pos)    /*!< GPD_MFPL PD6 s
 763:src/sys.h     **** #define SYS_GPD_MFPL_PD6MFP_SD0_CMD         (0xEUL<<SYS_GPD_MFPL_PD6MFP_Pos)    /*!< GPD_MFPL PD6 s
 764:src/sys.h     **** #define SYS_GPD_MFPL_PD6MFP_SPI1_SS         (0x2UL<<SYS_GPD_MFPL_PD6MFP_Pos)    /*!< GPD_MFPL PD6 s
 765:src/sys.h     **** #define SYS_GPD_MFPL_PD6MFP_UART0_RXD       (0x3UL<<SYS_GPD_MFPL_PD6MFP_Pos)    /*!< GPD_MFPL PD6 s
 766:src/sys.h     **** 
 767:src/sys.h     **** //PD.7 MFP
 768:src/sys.h     **** #define SYS_GPD_MFPL_PD7MFP_ACMP0_O         (0x5UL<<SYS_GPD_MFPL_PD7MFP_Pos)    /*!< GPD_MFPL PD7 s
 769:src/sys.h     **** #define SYS_GPD_MFPL_PD7MFP_EBI_nRD         (0x7UL<<SYS_GPD_MFPL_PD7MFP_Pos)    /*!< GPD_MFPL PD7 s
 770:src/sys.h     **** #define SYS_GPD_MFPL_PD7MFP_ECAP1_IC1       (0xDUL<<SYS_GPD_MFPL_PD7MFP_Pos)    /*!< GPD_MFPL PD7 s
 771:src/sys.h     **** #define SYS_GPD_MFPL_PD7MFP_GPIO            (0x0UL<<SYS_GPD_MFPL_PD7MFP_Pos)    /*!< GPD_MFPL PD7 s
 772:src/sys.h     **** #define SYS_GPD_MFPL_PD7MFP_LCD_SEG8        (0xFUL<<SYS_GPD_MFPL_PD7MFP_Pos)    /*!< GPD_MFPL PD7 s
 773:src/sys.h     **** #define SYS_GPD_MFPL_PD7MFP_PWM0_CH5        (0x6UL<<SYS_GPD_MFPL_PD7MFP_Pos)    /*!< GPD_MFPL PD7 s
 774:src/sys.h     **** #define SYS_GPD_MFPL_PD7MFP_PWM0_SYNC_IN    (0x3UL<<SYS_GPD_MFPL_PD7MFP_Pos)    /*!< GPD_MFPL PD7 s
 775:src/sys.h     **** #define SYS_GPD_MFPL_PD7MFP_PWM1_BRAKE1     (0xCUL<<SYS_GPD_MFPL_PD7MFP_Pos)    /*!< GPD_MFPL PD7 s
 776:src/sys.h     **** #define SYS_GPD_MFPL_PD7MFP_SC0_nCD         (0xBUL<<SYS_GPD_MFPL_PD7MFP_Pos)    /*!< GPD_MFPL PD7 s
 777:src/sys.h     **** #define SYS_GPD_MFPL_PD7MFP_SC2_PWR         (0xAUL<<SYS_GPD_MFPL_PD7MFP_Pos)    /*!< GPD_MFPL PD7 s
 778:src/sys.h     **** #define SYS_GPD_MFPL_PD7MFP_SD0_CMD         (0xEUL<<SYS_GPD_MFPL_PD7MFP_Pos)    /*!< GPD_MFPL PD7 s
 779:src/sys.h     **** #define SYS_GPD_MFPL_PD7MFP_TM1             (0x4UL<<SYS_GPD_MFPL_PD7MFP_Pos)    /*!< GPD_MFPL PD7 s
 780:src/sys.h     **** 
 781:src/sys.h     **** //PD.8 MFP
 782:src/sys.h     **** #define SYS_GPD_MFPH_PD8MFP_ACMP1_WLAT      (0x5UL<<SYS_GPD_MFPH_PD8MFP_Pos)    /*!< GPD_MFPH PD8 s
 783:src/sys.h     **** #define SYS_GPD_MFPH_PD8MFP_BPWM0_CH1       (0xDUL<<SYS_GPD_MFPH_PD8MFP_Pos)    /*!< GPD_MFPH PD8 s
 784:src/sys.h     **** #define SYS_GPD_MFPH_PD8MFP_EBI_nCS0        (0x7UL<<SYS_GPD_MFPH_PD8MFP_Pos)    /*!< GPD_MFPH PD8 s
 785:src/sys.h     **** #define SYS_GPD_MFPH_PD8MFP_GPIO            (0x0UL<<SYS_GPD_MFPH_PD8MFP_Pos)    /*!< GPD_MFPH PD8 s
 786:src/sys.h     **** #define SYS_GPD_MFPH_PD8MFP_I2C0_SDA        (0x3UL<<SYS_GPD_MFPH_PD8MFP_Pos)    /*!< GPD_MFPH PD8 s
 787:src/sys.h     **** #define SYS_GPD_MFPH_PD8MFP_QEI0_INDEX      (0x8UL<<SYS_GPD_MFPH_PD8MFP_Pos)    /*!< GPD_MFPH PD8 s
 788:src/sys.h     **** #define SYS_GPD_MFPH_PD8MFP_SC2_nCD         (0xBUL<<SYS_GPD_MFPH_PD8MFP_Pos)    /*!< GPD_MFPH PD8 s
 789:src/sys.h     **** #define SYS_GPD_MFPH_PD8MFP_SPI2_SS         (0x4UL<<SYS_GPD_MFPH_PD8MFP_Pos)    /*!< GPD_MFPH PD8 s
 790:src/sys.h     **** #define SYS_GPD_MFPH_PD8MFP_USCI0_DAT0      (0xCUL<<SYS_GPD_MFPH_PD8MFP_Pos)    /*!< GPD_MFPH PD8 s
 791:src/sys.h     **** 
 792:src/sys.h     **** //PD.9 MFP
 793:src/sys.h     **** #define SYS_GPD_MFPH_PD9MFP_ACMP1_P3        (0x5UL<<SYS_GPD_MFPH_PD9MFP_Pos)    /*!< GPD_MFPH PD9 s
 794:src/sys.h     **** #define SYS_GPD_MFPH_PD9MFP_BPWM0_CH2       (0xDUL<<SYS_GPD_MFPH_PD9MFP_Pos)    /*!< GPD_MFPH PD9 s
 795:src/sys.h     **** #define SYS_GPD_MFPH_PD9MFP_EBI_ALE         (0x7UL<<SYS_GPD_MFPH_PD9MFP_Pos)    /*!< GPD_MFPH PD9 s
 796:src/sys.h     **** #define SYS_GPD_MFPH_PD9MFP_GPIO            (0x0UL<<SYS_GPD_MFPH_PD9MFP_Pos)    /*!< GPD_MFPH PD9 s
 797:src/sys.h     **** #define SYS_GPD_MFPH_PD9MFP_I2C0_SCL        (0x3UL<<SYS_GPD_MFPH_PD9MFP_Pos)    /*!< GPD_MFPH PD9 s
 798:src/sys.h     **** #define SYS_GPD_MFPH_PD9MFP_QEI0_A          (0x8UL<<SYS_GPD_MFPH_PD9MFP_Pos)    /*!< GPD_MFPH PD9 s
 799:src/sys.h     **** #define SYS_GPD_MFPH_PD9MFP_SC2_PWR         (0xBUL<<SYS_GPD_MFPH_PD9MFP_Pos)    /*!< GPD_MFPH PD9 s
 800:src/sys.h     **** #define SYS_GPD_MFPH_PD9MFP_SPI2_MOSI       (0x4UL<<SYS_GPD_MFPH_PD9MFP_Pos)    /*!< GPD_MFPH PD9 s
 801:src/sys.h     **** #define SYS_GPD_MFPH_PD9MFP_USCI0_DAT1      (0xCUL<<SYS_GPD_MFPH_PD9MFP_Pos)    /*!< GPD_MFPH PD9 s
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 51


 802:src/sys.h     **** 
 803:src/sys.h     **** //PD.10 MFP
 804:src/sys.h     **** #define SYS_GPD_MFPH_PD10MFP_EBI_ADR9       (0x7UL<<SYS_GPD_MFPH_PD10MFP_Pos)   /*!< GPD_MFPH PD10 
 805:src/sys.h     **** #define SYS_GPD_MFPH_PD10MFP_GPIO           (0x0UL<<SYS_GPD_MFPH_PD10MFP_Pos)   /*!< GPD_MFPH PD10 
 806:src/sys.h     **** #define SYS_GPD_MFPH_PD10MFP_LCD_SEG2       (0xFUL<<SYS_GPD_MFPH_PD10MFP_Pos)   /*!< GPD_MFPH PD10 
 807:src/sys.h     **** #define SYS_GPD_MFPH_PD10MFP_SD0_DAT2       (0xEUL<<SYS_GPD_MFPH_PD10MFP_Pos)   /*!< GPD_MFPH PD10 
 808:src/sys.h     **** #define SYS_GPD_MFPH_PD10MFP_SPI1_CLK       (0x1UL<<SYS_GPD_MFPH_PD10MFP_Pos)   /*!< GPD_MFPH PD10 
 809:src/sys.h     **** #define SYS_GPD_MFPH_PD10MFP_TM2            (0x4UL<<SYS_GPD_MFPH_PD10MFP_Pos)   /*!< GPD_MFPH PD10 
 810:src/sys.h     **** #define SYS_GPD_MFPH_PD10MFP_USCI0_CTL1     (0xCUL<<SYS_GPD_MFPH_PD10MFP_Pos)   /*!< GPD_MFPH PD10 
 811:src/sys.h     **** 
 812:src/sys.h     **** //PD.11 MFP
 813:src/sys.h     **** #define SYS_GPD_MFPH_PD11MFP_EBI_ADR8       (0x7UL<<SYS_GPD_MFPH_PD11MFP_Pos)   /*!< GPD_MFPH PD11 
 814:src/sys.h     **** #define SYS_GPD_MFPH_PD11MFP_GPIO           (0x0UL<<SYS_GPD_MFPH_PD11MFP_Pos)   /*!< GPD_MFPH PD11 
 815:src/sys.h     **** #define SYS_GPD_MFPH_PD11MFP_LCD_SEG3       (0xFUL<<SYS_GPD_MFPH_PD11MFP_Pos)   /*!< GPD_MFPH PD11 
 816:src/sys.h     **** #define SYS_GPD_MFPH_PD11MFP_SD0_DAT1       (0xEUL<<SYS_GPD_MFPH_PD11MFP_Pos)   /*!< GPD_MFPH PD11 
 817:src/sys.h     **** #define SYS_GPD_MFPH_PD11MFP_SPI1_MOSI      (0x1UL<<SYS_GPD_MFPH_PD11MFP_Pos)   /*!< GPD_MFPH PD11 
 818:src/sys.h     **** #define SYS_GPD_MFPH_PD11MFP_TM3            (0x4UL<<SYS_GPD_MFPH_PD11MFP_Pos)   /*!< GPD_MFPH PD11 
 819:src/sys.h     **** #define SYS_GPD_MFPH_PD11MFP_USCI0_CTL0     (0xCUL<<SYS_GPD_MFPH_PD11MFP_Pos)   /*!< GPD_MFPH PD11 
 820:src/sys.h     **** 
 821:src/sys.h     **** //PD.12 MFP
 822:src/sys.h     **** #define SYS_GPD_MFPH_PD12MFP_EBI_ADR16      (0x7UL<<SYS_GPD_MFPH_PD12MFP_Pos)   /*!< GPD_MFPH PD12 
 823:src/sys.h     **** #define SYS_GPD_MFPH_PD12MFP_GPIO           (0x0UL<<SYS_GPD_MFPH_PD12MFP_Pos)   /*!< GPD_MFPH PD12 
 824:src/sys.h     **** #define SYS_GPD_MFPH_PD12MFP_LCD_SEG4       (0xFUL<<SYS_GPD_MFPH_PD12MFP_Pos)   /*!< GPD_MFPH PD12 
 825:src/sys.h     **** #define SYS_GPD_MFPH_PD12MFP_PWM1_CH0       (0x6UL<<SYS_GPD_MFPH_PD12MFP_Pos)   /*!< GPD_MFPH PD12 
 826:src/sys.h     **** #define SYS_GPD_MFPH_PD12MFP_SC2_nCD        (0xAUL<<SYS_GPD_MFPH_PD12MFP_Pos)   /*!< GPD_MFPH PD12 
 827:src/sys.h     **** #define SYS_GPD_MFPH_PD12MFP_SD0_DAT0       (0xEUL<<SYS_GPD_MFPH_PD12MFP_Pos)   /*!< GPD_MFPH PD12 
 828:src/sys.h     **** #define SYS_GPD_MFPH_PD12MFP_SPI1_MISO      (0x1UL<<SYS_GPD_MFPH_PD12MFP_Pos)   /*!< GPD_MFPH PD12 
 829:src/sys.h     **** #define SYS_GPD_MFPH_PD12MFP_SPI2_SS        (0x2UL<<SYS_GPD_MFPH_PD12MFP_Pos)   /*!< GPD_MFPH PD12 
 830:src/sys.h     **** #define SYS_GPD_MFPH_PD12MFP_UART3_TXD      (0x3UL<<SYS_GPD_MFPH_PD12MFP_Pos)   /*!< GPD_MFPH PD12 
 831:src/sys.h     **** #define SYS_GPD_MFPH_PD12MFP_USCI0_CLK      (0xCUL<<SYS_GPD_MFPH_PD12MFP_Pos)   /*!< GPD_MFPH PD12 
 832:src/sys.h     **** 
 833:src/sys.h     **** //PD.13 MFP
 834:src/sys.h     **** #define SYS_GPD_MFPH_PD13MFP_EBI_ADR17      (0x7UL<<SYS_GPD_MFPH_PD13MFP_Pos)   /*!< GPD_MFPH PD13 
 835:src/sys.h     **** #define SYS_GPD_MFPH_PD13MFP_GPIO           (0x0UL<<SYS_GPD_MFPH_PD13MFP_Pos)   /*!< GPD_MFPH PD13 
 836:src/sys.h     **** #define SYS_GPD_MFPH_PD13MFP_LCD_SEG5       (0xFUL<<SYS_GPD_MFPH_PD13MFP_Pos)   /*!< GPD_MFPH PD13 
 837:src/sys.h     **** #define SYS_GPD_MFPH_PD13MFP_PWM1_CH1       (0x6UL<<SYS_GPD_MFPH_PD13MFP_Pos)   /*!< GPD_MFPH PD13 
 838:src/sys.h     **** #define SYS_GPD_MFPH_PD13MFP_SC2_RST        (0xAUL<<SYS_GPD_MFPH_PD13MFP_Pos)   /*!< GPD_MFPH PD13 
 839:src/sys.h     **** #define SYS_GPD_MFPH_PD13MFP_SPI2_MOSI      (0x2UL<<SYS_GPD_MFPH_PD13MFP_Pos)   /*!< GPD_MFPH PD13 
 840:src/sys.h     **** #define SYS_GPD_MFPH_PD13MFP_UART3_RXD      (0x3UL<<SYS_GPD_MFPH_PD13MFP_Pos)   /*!< GPD_MFPH PD13 
 841:src/sys.h     **** 
 842:src/sys.h     **** //PD.14 MFP
 843:src/sys.h     **** #define SYS_GPD_MFPH_PD14MFP_EBI_ADR18      (0x7UL<<SYS_GPD_MFPH_PD14MFP_Pos)   /*!< GPD_MFPH PD14 
 844:src/sys.h     **** #define SYS_GPD_MFPH_PD14MFP_GPIO           (0x0UL<<SYS_GPD_MFPH_PD14MFP_Pos)   /*!< GPD_MFPH PD14 
 845:src/sys.h     **** #define SYS_GPD_MFPH_PD14MFP_LCD_SEG6       (0xFUL<<SYS_GPD_MFPH_PD14MFP_Pos)   /*!< GPD_MFPH PD14 
 846:src/sys.h     **** #define SYS_GPD_MFPH_PD14MFP_PWM1_BRAKE0    (0x5UL<<SYS_GPD_MFPH_PD14MFP_Pos)   /*!< GPD_MFPH PD14 
 847:src/sys.h     **** #define SYS_GPD_MFPH_PD14MFP_PWM1_CH2       (0x6UL<<SYS_GPD_MFPH_PD14MFP_Pos)   /*!< GPD_MFPH PD14 
 848:src/sys.h     **** #define SYS_GPD_MFPH_PD14MFP_SC2_DAT        (0xAUL<<SYS_GPD_MFPH_PD14MFP_Pos)   /*!< GPD_MFPH PD14 
 849:src/sys.h     **** #define SYS_GPD_MFPH_PD14MFP_SPI2_MISO      (0x2UL<<SYS_GPD_MFPH_PD14MFP_Pos)   /*!< GPD_MFPH PD14 
 850:src/sys.h     **** #define SYS_GPD_MFPH_PD14MFP_UART3_nCTS     (0x3UL<<SYS_GPD_MFPH_PD14MFP_Pos)   /*!< GPD_MFPH PD14 
 851:src/sys.h     **** 
 852:src/sys.h     **** //PD.15 MFP
 853:src/sys.h     **** #define SYS_GPD_MFPH_PD15MFP_EBI_ADR19      (0x7UL<<SYS_GPD_MFPH_PD15MFP_Pos)   /*!< GPD_MFPH PD15 
 854:src/sys.h     **** #define SYS_GPD_MFPH_PD15MFP_ECAP0_IC2      (0xDUL<<SYS_GPD_MFPH_PD15MFP_Pos)   /*!< GPD_MFPH PD15 
 855:src/sys.h     **** #define SYS_GPD_MFPH_PD15MFP_GPIO           (0x0UL<<SYS_GPD_MFPH_PD15MFP_Pos)   /*!< GPD_MFPH PD15 
 856:src/sys.h     **** #define SYS_GPD_MFPH_PD15MFP_LCD_SEG7       (0xFUL<<SYS_GPD_MFPH_PD15MFP_Pos)   /*!< GPD_MFPH PD15 
 857:src/sys.h     **** #define SYS_GPD_MFPH_PD15MFP_PWM1_CH3       (0x6UL<<SYS_GPD_MFPH_PD15MFP_Pos)   /*!< GPD_MFPH PD15 
 858:src/sys.h     **** #define SYS_GPD_MFPH_PD15MFP_QEI0_INDEX     (0xCUL<<SYS_GPD_MFPH_PD15MFP_Pos)   /*!< GPD_MFPH PD15 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 52


 859:src/sys.h     **** #define SYS_GPD_MFPH_PD15MFP_QEI1_INDEX     (0xBUL<<SYS_GPD_MFPH_PD15MFP_Pos)   /*!< GPD_MFPH PD15 
 860:src/sys.h     **** #define SYS_GPD_MFPH_PD15MFP_SC2_CLK        (0xAUL<<SYS_GPD_MFPH_PD15MFP_Pos)   /*!< GPD_MFPH PD15 
 861:src/sys.h     **** #define SYS_GPD_MFPH_PD15MFP_SD0_nCD        (0xEUL<<SYS_GPD_MFPH_PD15MFP_Pos)   /*!< GPD_MFPH PD15 
 862:src/sys.h     **** #define SYS_GPD_MFPH_PD15MFP_SPI2_CLK       (0x2UL<<SYS_GPD_MFPH_PD15MFP_Pos)   /*!< GPD_MFPH PD15 
 863:src/sys.h     **** #define SYS_GPD_MFPH_PD15MFP_UART3_nRTS     (0x3UL<<SYS_GPD_MFPH_PD15MFP_Pos)   /*!< GPD_MFPH PD15 
 864:src/sys.h     **** 
 865:src/sys.h     **** //PE.0 MFP
 866:src/sys.h     **** #define SYS_GPE_MFPL_PE0MFP_BPWM0_CH0       (0x4UL<<SYS_GPE_MFPL_PE0MFP_Pos)    /*!< GPE_MFPL PE0 s
 867:src/sys.h     **** #define SYS_GPE_MFPL_PE0MFP_EBI_nCS1        (0x7UL<<SYS_GPE_MFPL_PE0MFP_Pos)    /*!< GPE_MFPL PE0 s
 868:src/sys.h     **** #define SYS_GPE_MFPL_PE0MFP_ECAP0_IC2       (0xEUL<<SYS_GPE_MFPL_PE0MFP_Pos)    /*!< GPE_MFPL PE0 s
 869:src/sys.h     **** #define SYS_GPE_MFPL_PE0MFP_GPIO            (0x0UL<<SYS_GPE_MFPL_PE0MFP_Pos)    /*!< GPE_MFPL PE0 s
 870:src/sys.h     **** #define SYS_GPE_MFPL_PE0MFP_I2C1_SDA        (0x3UL<<SYS_GPE_MFPL_PE0MFP_Pos)    /*!< GPE_MFPL PE0 s
 871:src/sys.h     **** #define SYS_GPE_MFPL_PE0MFP_I2S0_BCLK       (0xAUL<<SYS_GPE_MFPL_PE0MFP_Pos)    /*!< GPE_MFPL PE0 s
 872:src/sys.h     **** #define SYS_GPE_MFPL_PE0MFP_INT4            (0x8UL<<SYS_GPE_MFPL_PE0MFP_Pos)    /*!< GPE_MFPL PE0 s
 873:src/sys.h     **** #define SYS_GPE_MFPL_PE0MFP_LCD_SEG21       (0xFUL<<SYS_GPE_MFPL_PE0MFP_Pos)    /*!< GPE_MFPL PE0 s
 874:src/sys.h     **** #define SYS_GPE_MFPL_PE0MFP_PWM0_CH0        (0x6UL<<SYS_GPE_MFPL_PE0MFP_Pos)    /*!< GPE_MFPL PE0 s
 875:src/sys.h     **** #define SYS_GPE_MFPL_PE0MFP_PWM0_CH5        (0xBUL<<SYS_GPE_MFPL_PE0MFP_Pos)    /*!< GPE_MFPL PE0 s
 876:src/sys.h     **** #define SYS_GPE_MFPL_PE0MFP_SC0_nCD         (0x5UL<<SYS_GPE_MFPL_PE0MFP_Pos)    /*!< GPE_MFPL PE0 s
 877:src/sys.h     **** #define SYS_GPE_MFPL_PE0MFP_SPI0_CLK        (0xCUL<<SYS_GPE_MFPL_PE0MFP_Pos)    /*!< GPE_MFPL PE0 s
 878:src/sys.h     **** #define SYS_GPE_MFPL_PE0MFP_SPI0_SS         (0x1UL<<SYS_GPE_MFPL_PE0MFP_Pos)    /*!< GPE_MFPL PE0 s
 879:src/sys.h     **** #define SYS_GPE_MFPL_PE0MFP_SPI2_CLK        (0x2UL<<SYS_GPE_MFPL_PE0MFP_Pos)    /*!< GPE_MFPL PE0 s
 880:src/sys.h     **** #define SYS_GPE_MFPL_PE0MFP_TM2_EXT         (0xDUL<<SYS_GPE_MFPL_PE0MFP_Pos)    /*!< GPE_MFPL PE0 s
 881:src/sys.h     **** #define SYS_GPE_MFPL_PE0MFP_UART4_RXD       (0x9UL<<SYS_GPE_MFPL_PE0MFP_Pos)    /*!< GPE_MFPL PE0 s
 882:src/sys.h     **** 
 883:src/sys.h     **** //PE.1 MFP
 884:src/sys.h     **** #define SYS_GPE_MFPL_PE1MFP_DSRC_TXON       (0xEUL<<SYS_GPE_MFPL_PE1MFP_Pos)    /*!< GPE_MFPL PE1 s
 885:src/sys.h     **** #define SYS_GPE_MFPL_PE1MFP_EBI_ADR7        (0x7UL<<SYS_GPE_MFPL_PE1MFP_Pos)    /*!< GPE_MFPL PE1 s
 886:src/sys.h     **** #define SYS_GPE_MFPL_PE1MFP_GPIO            (0x0UL<<SYS_GPE_MFPL_PE1MFP_Pos)    /*!< GPE_MFPL PE1 s
 887:src/sys.h     **** #define SYS_GPE_MFPL_PE1MFP_LCD_SEG34       (0xFUL<<SYS_GPE_MFPL_PE1MFP_Pos)    /*!< GPE_MFPL PE1 s
 888:src/sys.h     **** #define SYS_GPE_MFPL_PE1MFP_PWM0_CH1        (0x6UL<<SYS_GPE_MFPL_PE1MFP_Pos)    /*!< GPE_MFPL PE1 s
 889:src/sys.h     **** #define SYS_GPE_MFPL_PE1MFP_SC0_nCD         (0x5UL<<SYS_GPE_MFPL_PE1MFP_Pos)    /*!< GPE_MFPL PE1 s
 890:src/sys.h     **** #define SYS_GPE_MFPL_PE1MFP_SD1_nCD         (0xBUL<<SYS_GPE_MFPL_PE1MFP_Pos)    /*!< GPE_MFPL PE1 s
 891:src/sys.h     **** #define SYS_GPE_MFPL_PE1MFP_TM3_EXT         (0x3UL<<SYS_GPE_MFPL_PE1MFP_Pos)    /*!< GPE_MFPL PE1 s
 892:src/sys.h     **** #define SYS_GPE_MFPL_PE1MFP_UART1_RXD       (0x1UL<<SYS_GPE_MFPL_PE1MFP_Pos)    /*!< GPE_MFPL PE1 s
 893:src/sys.h     **** 
 894:src/sys.h     **** //PE.2 MFP
 895:src/sys.h     **** #define SYS_GPE_MFPL_PE2MFP_EBI_ADR9        (0x7UL<<SYS_GPE_MFPL_PE2MFP_Pos)    /*!< GPE_MFPL PE2 s
 896:src/sys.h     **** #define SYS_GPE_MFPL_PE2MFP_GPIO            (0x0UL<<SYS_GPE_MFPL_PE2MFP_Pos)    /*!< GPE_MFPL PE2 s
 897:src/sys.h     **** #define SYS_GPE_MFPL_PE2MFP_PWM1_CH1        (0x6UL<<SYS_GPE_MFPL_PE2MFP_Pos)    /*!< GPE_MFPL PE2 s
 898:src/sys.h     **** #define SYS_GPE_MFPL_PE2MFP_SPI3_MISO       (0x9UL<<SYS_GPE_MFPL_PE2MFP_Pos)    /*!< GPE_MFPL PE2 s
 899:src/sys.h     **** 
 900:src/sys.h     **** //PE.3 MFP
 901:src/sys.h     **** #define SYS_GPE_MFPL_PE3MFP_EBI_AD13        (0x7UL<<SYS_GPE_MFPL_PE3MFP_Pos)    /*!< GPE_MFPL PE3 s
 902:src/sys.h     **** #define SYS_GPE_MFPL_PE3MFP_GPIO            (0x0UL<<SYS_GPE_MFPL_PE3MFP_Pos)    /*!< GPE_MFPL PE3 s
 903:src/sys.h     **** #define SYS_GPE_MFPL_PE3MFP_OPA2_N          (0x9UL<<SYS_GPE_MFPL_PE3MFP_Pos)    /*!< GPE_MFPL PE3 s
 904:src/sys.h     **** #define SYS_GPE_MFPL_PE3MFP_PWM0_CH3        (0x6UL<<SYS_GPE_MFPL_PE3MFP_Pos)    /*!< GPE_MFPL PE3 s
 905:src/sys.h     **** #define SYS_GPE_MFPL_PE3MFP_SD0_nCD         (0xEUL<<SYS_GPE_MFPL_PE3MFP_Pos)    /*!< GPE_MFPL PE3 s
 906:src/sys.h     **** #define SYS_GPE_MFPL_PE3MFP_SPI1_MOSI       (0x2UL<<SYS_GPE_MFPL_PE3MFP_Pos)    /*!< GPE_MFPL PE3 s
 907:src/sys.h     **** 
 908:src/sys.h     **** //PE.4 MFP
 909:src/sys.h     **** #define SYS_GPE_MFPL_PE4MFP_EBI_nCS0        (0x7UL<<SYS_GPE_MFPL_PE4MFP_Pos)    /*!< GPE_MFPL PE4 s
 910:src/sys.h     **** #define SYS_GPE_MFPL_PE4MFP_GPIO            (0x0UL<<SYS_GPE_MFPL_PE4MFP_Pos)    /*!< GPE_MFPL PE4 s
 911:src/sys.h     **** #define SYS_GPE_MFPL_PE4MFP_I2C1_SCL        (0x3UL<<SYS_GPE_MFPL_PE4MFP_Pos)    /*!< GPE_MFPL PE4 s
 912:src/sys.h     **** #define SYS_GPE_MFPL_PE4MFP_INT0            (0x8UL<<SYS_GPE_MFPL_PE4MFP_Pos)    /*!< GPE_MFPL PE4 s
 913:src/sys.h     **** #define SYS_GPE_MFPL_PE4MFP_LCD_SEG27       (0xFUL<<SYS_GPE_MFPL_PE4MFP_Pos)    /*!< GPE_MFPL PE4 s
 914:src/sys.h     **** #define SYS_GPE_MFPL_PE4MFP_PWM1_BRAKE0     (0x6UL<<SYS_GPE_MFPL_PE4MFP_Pos)    /*!< GPE_MFPL PE4 s
 915:src/sys.h     **** #define SYS_GPE_MFPL_PE4MFP_SC0_PWR         (0x4UL<<SYS_GPE_MFPL_PE4MFP_Pos)    /*!< GPE_MFPL PE4 s
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 53


 916:src/sys.h     **** #define SYS_GPE_MFPL_PE4MFP_SPI5_SS         (0xCUL<<SYS_GPE_MFPL_PE4MFP_Pos)    /*!< GPE_MFPL PE4 s
 917:src/sys.h     **** 
 918:src/sys.h     **** //PE.5 MFP
 919:src/sys.h     **** #define SYS_GPE_MFPL_PE5MFP_EBI_ALE         (0x7UL<<SYS_GPE_MFPL_PE5MFP_Pos)    /*!< GPE_MFPL PE5 s
 920:src/sys.h     **** #define SYS_GPE_MFPL_PE5MFP_GPIO            (0x0UL<<SYS_GPE_MFPL_PE5MFP_Pos)    /*!< GPE_MFPL PE5 s
 921:src/sys.h     **** #define SYS_GPE_MFPL_PE5MFP_I2C1_SDA        (0x3UL<<SYS_GPE_MFPL_PE5MFP_Pos)    /*!< GPE_MFPL PE5 s
 922:src/sys.h     **** #define SYS_GPE_MFPL_PE5MFP_INT1            (0x8UL<<SYS_GPE_MFPL_PE5MFP_Pos)    /*!< GPE_MFPL PE5 s
 923:src/sys.h     **** #define SYS_GPE_MFPL_PE5MFP_LCD_SEG28       (0xFUL<<SYS_GPE_MFPL_PE5MFP_Pos)    /*!< GPE_MFPL PE5 s
 924:src/sys.h     **** #define SYS_GPE_MFPL_PE5MFP_PWM1_BRAKE1     (0x6UL<<SYS_GPE_MFPL_PE5MFP_Pos)    /*!< GPE_MFPL PE5 s
 925:src/sys.h     **** #define SYS_GPE_MFPL_PE5MFP_SC0_RST         (0x4UL<<SYS_GPE_MFPL_PE5MFP_Pos)    /*!< GPE_MFPL PE5 s
 926:src/sys.h     **** #define SYS_GPE_MFPL_PE5MFP_SPI5_CLK        (0xCUL<<SYS_GPE_MFPL_PE5MFP_Pos)    /*!< GPE_MFPL PE5 s
 927:src/sys.h     **** 
 928:src/sys.h     **** //PE.6 MFP
 929:src/sys.h     **** #define SYS_GPE_MFPL_PE6MFP_GPIO            (0x0UL<<SYS_GPE_MFPL_PE6MFP_Pos)    /*!< GPE_MFPL PE6 s
 930:src/sys.h     **** #define SYS_GPE_MFPL_PE6MFP_LCD_COM4_SEG40  (0xFUL<<SYS_GPE_MFPL_PE6MFP_Pos)    /*!< GPE_MFPL PE6 s
 931:src/sys.h     **** #define SYS_GPE_MFPL_PE6MFP_SD1_DAT0        (0xBUL<<SYS_GPE_MFPL_PE6MFP_Pos)    /*!< GPE_MFPL PE6 s
 932:src/sys.h     **** #define SYS_GPE_MFPL_PE6MFP_TM3_EXT         (0x3UL<<SYS_GPE_MFPL_PE6MFP_Pos)    /*!< GPE_MFPL PE6 s
 933:src/sys.h     **** 
 934:src/sys.h     **** //PE.7 MFP
 935:src/sys.h     **** #define SYS_GPE_MFPL_PE7MFP_EBI_MCLK        (0x7UL<<SYS_GPE_MFPL_PE7MFP_Pos)    /*!< GPE_MFPL PE7 s
 936:src/sys.h     **** #define SYS_GPE_MFPL_PE7MFP_GPIO            (0x0UL<<SYS_GPE_MFPL_PE7MFP_Pos)    /*!< GPE_MFPL PE7 s
 937:src/sys.h     **** #define SYS_GPE_MFPL_PE7MFP_PWM1_BRAKE1     (0xDUL<<SYS_GPE_MFPL_PE7MFP_Pos)    /*!< GPE_MFPL PE7 s
 938:src/sys.h     **** 
 939:src/sys.h     **** //PE.8 MFP
 940:src/sys.h     **** #define SYS_GPE_MFPH_PE8MFP_BPWM1_CH0       (0xDUL<<SYS_GPE_MFPH_PE8MFP_Pos)    /*!< GPE_MFPH PE8 s
 941:src/sys.h     **** #define SYS_GPE_MFPH_PE8MFP_CLKO            (0x9UL<<SYS_GPE_MFPH_PE8MFP_Pos)    /*!< GPE_MFPH PE8 s
 942:src/sys.h     **** #define SYS_GPE_MFPH_PE8MFP_DSRC_RXON       (0xEUL<<SYS_GPE_MFPH_PE8MFP_Pos)    /*!< GPE_MFPH PE8 s
 943:src/sys.h     **** #define SYS_GPE_MFPH_PE8MFP_EBI_ADR6        (0x7UL<<SYS_GPE_MFPH_PE8MFP_Pos)    /*!< GPE_MFPH PE8 s
 944:src/sys.h     **** #define SYS_GPE_MFPH_PE8MFP_GPIO            (0x0UL<<SYS_GPE_MFPH_PE8MFP_Pos)    /*!< GPE_MFPH PE8 s
 945:src/sys.h     **** #define SYS_GPE_MFPH_PE8MFP_I2C1_SCL        (0x4UL<<SYS_GPE_MFPH_PE8MFP_Pos)    /*!< GPE_MFPH PE8 s
 946:src/sys.h     **** #define SYS_GPE_MFPH_PE8MFP_LCD_SEG35       (0xFUL<<SYS_GPE_MFPH_PE8MFP_Pos)    /*!< GPE_MFPH PE8 s
 947:src/sys.h     **** #define SYS_GPE_MFPH_PE8MFP_PWM0_BRAKE0     (0xAUL<<SYS_GPE_MFPH_PE8MFP_Pos)    /*!< GPE_MFPH PE8 s
 948:src/sys.h     **** #define SYS_GPE_MFPH_PE8MFP_SC0_PWR         (0x5UL<<SYS_GPE_MFPH_PE8MFP_Pos)    /*!< GPE_MFPH PE8 s
 949:src/sys.h     **** #define SYS_GPE_MFPH_PE8MFP_SPI0_MISO1      (0x2UL<<SYS_GPE_MFPH_PE8MFP_Pos)    /*!< GPE_MFPH PE8 s
 950:src/sys.h     **** #define SYS_GPE_MFPH_PE8MFP_TM1             (0xBUL<<SYS_GPE_MFPH_PE8MFP_Pos)    /*!< GPE_MFPH PE8 s
 951:src/sys.h     **** #define SYS_GPE_MFPH_PE8MFP_UART1_TXD       (0x1UL<<SYS_GPE_MFPH_PE8MFP_Pos)    /*!< GPE_MFPH PE8 s
 952:src/sys.h     **** #define SYS_GPE_MFPH_PE8MFP_UART4_nRTS      (0x6UL<<SYS_GPE_MFPH_PE8MFP_Pos)    /*!< GPE_MFPH PE8 s
 953:src/sys.h     **** 
 954:src/sys.h     **** //PE.9 MFP
 955:src/sys.h     **** #define SYS_GPE_MFPH_PE9MFP_BPWM1_CH1       (0xDUL<<SYS_GPE_MFPH_PE9MFP_Pos)    /*!< GPE_MFPH PE9 s
 956:src/sys.h     **** #define SYS_GPE_MFPH_PE9MFP_DSRC_WAKEUP     (0xEUL<<SYS_GPE_MFPH_PE9MFP_Pos)    /*!< GPE_MFPH PE9 s
 957:src/sys.h     **** #define SYS_GPE_MFPH_PE9MFP_EBI_ADR5        (0x7UL<<SYS_GPE_MFPH_PE9MFP_Pos)    /*!< GPE_MFPH PE9 s
 958:src/sys.h     **** #define SYS_GPE_MFPH_PE9MFP_GPIO            (0x0UL<<SYS_GPE_MFPH_PE9MFP_Pos)    /*!< GPE_MFPH PE9 s
 959:src/sys.h     **** #define SYS_GPE_MFPH_PE9MFP_I2C1_SDA        (0x4UL<<SYS_GPE_MFPH_PE9MFP_Pos)    /*!< GPE_MFPH PE9 s
 960:src/sys.h     **** #define SYS_GPE_MFPH_PE9MFP_I2S0_BCLK       (0x8UL<<SYS_GPE_MFPH_PE9MFP_Pos)    /*!< GPE_MFPH PE9 s
 961:src/sys.h     **** #define SYS_GPE_MFPH_PE9MFP_LCD_SEG36       (0xFUL<<SYS_GPE_MFPH_PE9MFP_Pos)    /*!< GPE_MFPH PE9 s
 962:src/sys.h     **** #define SYS_GPE_MFPH_PE9MFP_PWM1_BRAKE1     (0xAUL<<SYS_GPE_MFPH_PE9MFP_Pos)    /*!< GPE_MFPH PE9 s
 963:src/sys.h     **** #define SYS_GPE_MFPH_PE9MFP_SC0_RST         (0x5UL<<SYS_GPE_MFPH_PE9MFP_Pos)    /*!< GPE_MFPH PE9 s
 964:src/sys.h     **** #define SYS_GPE_MFPH_PE9MFP_SPI0_MOSI1      (0x2UL<<SYS_GPE_MFPH_PE9MFP_Pos)    /*!< GPE_MFPH PE9 s
 965:src/sys.h     **** #define SYS_GPE_MFPH_PE9MFP_SPI1_I2SMCLK    (0x9UL<<SYS_GPE_MFPH_PE9MFP_Pos)    /*!< GPE_MFPH PE9 s
 966:src/sys.h     **** #define SYS_GPE_MFPH_PE9MFP_TM2             (0xBUL<<SYS_GPE_MFPH_PE9MFP_Pos)    /*!< GPE_MFPH PE9 s
 967:src/sys.h     **** #define SYS_GPE_MFPH_PE9MFP_UART1_RXD       (0x1UL<<SYS_GPE_MFPH_PE9MFP_Pos)    /*!< GPE_MFPH PE9 s
 968:src/sys.h     **** #define SYS_GPE_MFPH_PE9MFP_UART4_nCTS      (0x6UL<<SYS_GPE_MFPH_PE9MFP_Pos)    /*!< GPE_MFPH PE9 s
 969:src/sys.h     **** #define SYS_GPE_MFPH_PE9MFP_USCI1_CTL1      (0xCUL<<SYS_GPE_MFPH_PE9MFP_Pos)    /*!< GPE_MFPH PE9 s
 970:src/sys.h     **** 
 971:src/sys.h     **** //PE.10 MFP
 972:src/sys.h     **** #define SYS_GPE_MFPH_PE10MFP_BPWM1_CH2      (0xDUL<<SYS_GPE_MFPH_PE10MFP_Pos)   /*!< GPE_MFPH PE10 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 54


 973:src/sys.h     **** #define SYS_GPE_MFPH_PE10MFP_EBI_ADR4       (0x7UL<<SYS_GPE_MFPH_PE10MFP_Pos)   /*!< GPE_MFPH PE10 
 974:src/sys.h     **** #define SYS_GPE_MFPH_PE10MFP_GPIO           (0x0UL<<SYS_GPE_MFPH_PE10MFP_Pos)   /*!< GPE_MFPH PE10 
 975:src/sys.h     **** #define SYS_GPE_MFPH_PE10MFP_I2C0_SMBAL     (0x4UL<<SYS_GPE_MFPH_PE10MFP_Pos)   /*!< GPE_MFPH PE10 
 976:src/sys.h     **** #define SYS_GPE_MFPH_PE10MFP_I2C1_SCL       (0xBUL<<SYS_GPE_MFPH_PE10MFP_Pos)   /*!< GPE_MFPH PE10 
 977:src/sys.h     **** #define SYS_GPE_MFPH_PE10MFP_I2S0_MCLK      (0x8UL<<SYS_GPE_MFPH_PE10MFP_Pos)   /*!< GPE_MFPH PE10 
 978:src/sys.h     **** #define SYS_GPE_MFPH_PE10MFP_LCD_SEG37      (0xFUL<<SYS_GPE_MFPH_PE10MFP_Pos)   /*!< GPE_MFPH PE10 
 979:src/sys.h     **** #define SYS_GPE_MFPH_PE10MFP_PWM1_CH0       (0x6UL<<SYS_GPE_MFPH_PE10MFP_Pos)   /*!< GPE_MFPH PE10 
 980:src/sys.h     **** #define SYS_GPE_MFPH_PE10MFP_SC0_DAT        (0x5UL<<SYS_GPE_MFPH_PE10MFP_Pos)   /*!< GPE_MFPH PE10 
 981:src/sys.h     **** #define SYS_GPE_MFPH_PE10MFP_SPI0_MISO0     (0x2UL<<SYS_GPE_MFPH_PE10MFP_Pos)   /*!< GPE_MFPH PE10 
 982:src/sys.h     **** #define SYS_GPE_MFPH_PE10MFP_SPI1_MISO      (0x1UL<<SYS_GPE_MFPH_PE10MFP_Pos)   /*!< GPE_MFPH PE10 
 983:src/sys.h     **** #define SYS_GPE_MFPH_PE10MFP_SPI5_SS        (0xEUL<<SYS_GPE_MFPH_PE10MFP_Pos)   /*!< GPE_MFPH PE10 
 984:src/sys.h     **** #define SYS_GPE_MFPH_PE10MFP_UART1_nCTS     (0x3UL<<SYS_GPE_MFPH_PE10MFP_Pos)   /*!< GPE_MFPH PE10 
 985:src/sys.h     **** #define SYS_GPE_MFPH_PE10MFP_UART3_TXD      (0x9UL<<SYS_GPE_MFPH_PE10MFP_Pos)   /*!< GPE_MFPH PE10 
 986:src/sys.h     **** #define SYS_GPE_MFPH_PE10MFP_USCI1_CTL0     (0xCUL<<SYS_GPE_MFPH_PE10MFP_Pos)   /*!< GPE_MFPH PE10 
 987:src/sys.h     **** 
 988:src/sys.h     **** //PE.11 MFP
 989:src/sys.h     **** #define SYS_GPE_MFPH_PE11MFP_BPWM1_CH3      (0xDUL<<SYS_GPE_MFPH_PE11MFP_Pos)   /*!< GPE_MFPH PE11 
 990:src/sys.h     **** #define SYS_GPE_MFPH_PE11MFP_EBI_ADR3       (0x7UL<<SYS_GPE_MFPH_PE11MFP_Pos)   /*!< GPE_MFPH PE11 
 991:src/sys.h     **** #define SYS_GPE_MFPH_PE11MFP_GPIO           (0x0UL<<SYS_GPE_MFPH_PE11MFP_Pos)   /*!< GPE_MFPH PE11 
 992:src/sys.h     **** #define SYS_GPE_MFPH_PE11MFP_I2C0_SMBSUS    (0x4UL<<SYS_GPE_MFPH_PE11MFP_Pos)   /*!< GPE_MFPH PE11 
 993:src/sys.h     **** #define SYS_GPE_MFPH_PE11MFP_I2C1_SDA       (0xBUL<<SYS_GPE_MFPH_PE11MFP_Pos)   /*!< GPE_MFPH PE11 
 994:src/sys.h     **** #define SYS_GPE_MFPH_PE11MFP_I2S0_DI        (0x8UL<<SYS_GPE_MFPH_PE11MFP_Pos)   /*!< GPE_MFPH PE11 
 995:src/sys.h     **** #define SYS_GPE_MFPH_PE11MFP_LCD_SEG38      (0xFUL<<SYS_GPE_MFPH_PE11MFP_Pos)   /*!< GPE_MFPH PE11 
 996:src/sys.h     **** #define SYS_GPE_MFPH_PE11MFP_PWM1_CH1       (0x6UL<<SYS_GPE_MFPH_PE11MFP_Pos)   /*!< GPE_MFPH PE11 
 997:src/sys.h     **** #define SYS_GPE_MFPH_PE11MFP_SC0_CLK        (0x5UL<<SYS_GPE_MFPH_PE11MFP_Pos)   /*!< GPE_MFPH PE11 
 998:src/sys.h     **** #define SYS_GPE_MFPH_PE11MFP_SPI0_MOSI0     (0x2UL<<SYS_GPE_MFPH_PE11MFP_Pos)   /*!< GPE_MFPH PE11 
 999:src/sys.h     **** #define SYS_GPE_MFPH_PE11MFP_SPI1_MOSI      (0x1UL<<SYS_GPE_MFPH_PE11MFP_Pos)   /*!< GPE_MFPH PE11 
1000:src/sys.h     **** #define SYS_GPE_MFPH_PE11MFP_SPI5_CLK       (0xEUL<<SYS_GPE_MFPH_PE11MFP_Pos)   /*!< GPE_MFPH PE11 
1001:src/sys.h     **** #define SYS_GPE_MFPH_PE11MFP_UART1_nRTS     (0x3UL<<SYS_GPE_MFPH_PE11MFP_Pos)   /*!< GPE_MFPH PE11 
1002:src/sys.h     **** #define SYS_GPE_MFPH_PE11MFP_UART3_RXD      (0x9UL<<SYS_GPE_MFPH_PE11MFP_Pos)   /*!< GPE_MFPH PE11 
1003:src/sys.h     **** #define SYS_GPE_MFPH_PE11MFP_USCI1_DAT0     (0xCUL<<SYS_GPE_MFPH_PE11MFP_Pos)   /*!< GPE_MFPH PE11 
1004:src/sys.h     **** 
1005:src/sys.h     **** //PE.12 MFP
1006:src/sys.h     **** #define SYS_GPE_MFPH_PE12MFP_BPWM1_CH4      (0xDUL<<SYS_GPE_MFPH_PE12MFP_Pos)   /*!< GPE_MFPH PE12 
1007:src/sys.h     **** #define SYS_GPE_MFPH_PE12MFP_EBI_ADR2       (0x7UL<<SYS_GPE_MFPH_PE12MFP_Pos)   /*!< GPE_MFPH PE12 
1008:src/sys.h     **** #define SYS_GPE_MFPH_PE12MFP_GPIO           (0x0UL<<SYS_GPE_MFPH_PE12MFP_Pos)   /*!< GPE_MFPH PE12 
1009:src/sys.h     **** #define SYS_GPE_MFPH_PE12MFP_I2C0_SCL       (0x4UL<<SYS_GPE_MFPH_PE12MFP_Pos)   /*!< GPE_MFPH PE12 
1010:src/sys.h     **** #define SYS_GPE_MFPH_PE12MFP_I2S0_DO        (0x8UL<<SYS_GPE_MFPH_PE12MFP_Pos)   /*!< GPE_MFPH PE12 
1011:src/sys.h     **** #define SYS_GPE_MFPH_PE12MFP_LCD_SEG39      (0xFUL<<SYS_GPE_MFPH_PE12MFP_Pos)   /*!< GPE_MFPH PE12 
1012:src/sys.h     **** #define SYS_GPE_MFPH_PE12MFP_PWM0_CH4       (0xAUL<<SYS_GPE_MFPH_PE12MFP_Pos)   /*!< GPE_MFPH PE12 
1013:src/sys.h     **** #define SYS_GPE_MFPH_PE12MFP_SC0_PWR        (0x5UL<<SYS_GPE_MFPH_PE12MFP_Pos)   /*!< GPE_MFPH PE12 
1014:src/sys.h     **** #define SYS_GPE_MFPH_PE12MFP_SD0_CMD        (0xBUL<<SYS_GPE_MFPH_PE12MFP_Pos)   /*!< GPE_MFPH PE12 
1015:src/sys.h     **** #define SYS_GPE_MFPH_PE12MFP_SPI0_SS        (0x2UL<<SYS_GPE_MFPH_PE12MFP_Pos)   /*!< GPE_MFPH PE12 
1016:src/sys.h     **** #define SYS_GPE_MFPH_PE12MFP_SPI1_SS        (0x1UL<<SYS_GPE_MFPH_PE12MFP_Pos)   /*!< GPE_MFPH PE12 
1017:src/sys.h     **** #define SYS_GPE_MFPH_PE12MFP_SPI5_MISO      (0xEUL<<SYS_GPE_MFPH_PE12MFP_Pos)   /*!< GPE_MFPH PE12 
1018:src/sys.h     **** #define SYS_GPE_MFPH_PE12MFP_UART1_TXD      (0x3UL<<SYS_GPE_MFPH_PE12MFP_Pos)   /*!< GPE_MFPH PE12 
1019:src/sys.h     **** #define SYS_GPE_MFPH_PE12MFP_UART4_TXD      (0x6UL<<SYS_GPE_MFPH_PE12MFP_Pos)   /*!< GPE_MFPH PE12 
1020:src/sys.h     **** #define SYS_GPE_MFPH_PE12MFP_USCI1_DAT1     (0xCUL<<SYS_GPE_MFPH_PE12MFP_Pos)   /*!< GPE_MFPH PE12 
1021:src/sys.h     **** 
1022:src/sys.h     **** //PE.13 MFP
1023:src/sys.h     **** #define SYS_GPE_MFPH_PE13MFP_BPWM1_CH5      (0xDUL<<SYS_GPE_MFPH_PE13MFP_Pos)   /*!< GPE_MFPH PE13 
1024:src/sys.h     **** #define SYS_GPE_MFPH_PE13MFP_EBI_ADR1       (0x7UL<<SYS_GPE_MFPH_PE13MFP_Pos)   /*!< GPE_MFPH PE13 
1025:src/sys.h     **** #define SYS_GPE_MFPH_PE13MFP_GPIO           (0x0UL<<SYS_GPE_MFPH_PE13MFP_Pos)   /*!< GPE_MFPH PE13 
1026:src/sys.h     **** #define SYS_GPE_MFPH_PE13MFP_I2C0_SDA       (0x4UL<<SYS_GPE_MFPH_PE13MFP_Pos)   /*!< GPE_MFPH PE13 
1027:src/sys.h     **** #define SYS_GPE_MFPH_PE13MFP_I2S0_LRCK      (0x8UL<<SYS_GPE_MFPH_PE13MFP_Pos)   /*!< GPE_MFPH PE13 
1028:src/sys.h     **** #define SYS_GPE_MFPH_PE13MFP_PWM0_CH5       (0xAUL<<SYS_GPE_MFPH_PE13MFP_Pos)   /*!< GPE_MFPH PE13 
1029:src/sys.h     **** #define SYS_GPE_MFPH_PE13MFP_SC0_RST        (0x5UL<<SYS_GPE_MFPH_PE13MFP_Pos)   /*!< GPE_MFPH PE13 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 55


1030:src/sys.h     **** #define SYS_GPE_MFPH_PE13MFP_SD0_nCD        (0xBUL<<SYS_GPE_MFPH_PE13MFP_Pos)   /*!< GPE_MFPH PE13 
1031:src/sys.h     **** #define SYS_GPE_MFPH_PE13MFP_SPI0_CLK       (0x2UL<<SYS_GPE_MFPH_PE13MFP_Pos)   /*!< GPE_MFPH PE13 
1032:src/sys.h     **** #define SYS_GPE_MFPH_PE13MFP_SPI1_CLK       (0x1UL<<SYS_GPE_MFPH_PE13MFP_Pos)   /*!< GPE_MFPH PE13 
1033:src/sys.h     **** #define SYS_GPE_MFPH_PE13MFP_SPI5_MOSI      (0xEUL<<SYS_GPE_MFPH_PE13MFP_Pos)   /*!< GPE_MFPH PE13 
1034:src/sys.h     **** #define SYS_GPE_MFPH_PE13MFP_UART1_RXD      (0x3UL<<SYS_GPE_MFPH_PE13MFP_Pos)   /*!< GPE_MFPH PE13 
1035:src/sys.h     **** #define SYS_GPE_MFPH_PE13MFP_UART4_RXD      (0x6UL<<SYS_GPE_MFPH_PE13MFP_Pos)   /*!< GPE_MFPH PE13 
1036:src/sys.h     **** #define SYS_GPE_MFPH_PE13MFP_USCI1_CLK      (0xCUL<<SYS_GPE_MFPH_PE13MFP_Pos)   /*!< GPE_MFPH PE13 
1037:src/sys.h     **** 
1038:src/sys.h     **** //PF.0 MFP
1039:src/sys.h     **** #define SYS_GPF_MFPL_PF0MFP_GPIO            (0x0UL<<SYS_GPF_MFPL_PF0MFP_Pos)    /*!< GPF_MFPL PF0 s
1040:src/sys.h     **** #define SYS_GPF_MFPL_PF0MFP_INT5            (0x8UL<<SYS_GPF_MFPL_PF0MFP_Pos)    /*!< GPF_MFPL PF0 s
1041:src/sys.h     **** #define SYS_GPF_MFPL_PF0MFP_SPI1_SS         (0x2UL<<SYS_GPF_MFPL_PF0MFP_Pos)    /*!< GPF_MFPL PF0 s
1042:src/sys.h     **** #define SYS_GPF_MFPL_PF0MFP_TM3_EXT         (0x4UL<<SYS_GPF_MFPL_PF0MFP_Pos)    /*!< GPF_MFPL PF0 s
1043:src/sys.h     **** #define SYS_GPF_MFPL_PF0MFP_X32_OUT         (0x1UL<<SYS_GPF_MFPL_PF0MFP_Pos)    /*!< GPF_MFPL PF0 s
1044:src/sys.h     **** 
1045:src/sys.h     **** //PF.1 MFP
1046:src/sys.h     **** #define SYS_GPF_MFPL_PF1MFP_DSRC_TXON       (0x9UL<<SYS_GPF_MFPL_PF1MFP_Pos)    /*!< GPF_MFPL PF1 s
1047:src/sys.h     **** #define SYS_GPF_MFPL_PF1MFP_GPIO            (0x0UL<<SYS_GPF_MFPL_PF1MFP_Pos)    /*!< GPF_MFPL PF1 s
1048:src/sys.h     **** #define SYS_GPF_MFPL_PF1MFP_SPI1_MOSI       (0x2UL<<SYS_GPF_MFPL_PF1MFP_Pos)    /*!< GPF_MFPL PF1 s
1049:src/sys.h     **** #define SYS_GPF_MFPL_PF1MFP_TM3             (0x4UL<<SYS_GPF_MFPL_PF1MFP_Pos)    /*!< GPF_MFPL PF1 s
1050:src/sys.h     **** #define SYS_GPF_MFPL_PF1MFP_X32_IN          (0x1UL<<SYS_GPF_MFPL_PF1MFP_Pos)    /*!< GPF_MFPL PF1 s
1051:src/sys.h     **** 
1052:src/sys.h     **** //PF.2 MFP
1053:src/sys.h     **** #define SYS_GPF_MFPL_PF2MFP_DAC0_ST         (0x2UL<<SYS_GPF_MFPL_PF2MFP_Pos)    /*!< GPF_MFPL PF2 s
1054:src/sys.h     **** #define SYS_GPF_MFPL_PF2MFP_DAC1_ST         (0x3UL<<SYS_GPF_MFPL_PF2MFP_Pos)    /*!< GPF_MFPL PF2 s
1055:src/sys.h     **** #define SYS_GPF_MFPL_PF2MFP_DSRC_RXON       (0x9UL<<SYS_GPF_MFPL_PF2MFP_Pos)    /*!< GPF_MFPL PF2 s
1056:src/sys.h     **** #define SYS_GPF_MFPL_PF2MFP_EBI_nCS2        (0x7UL<<SYS_GPF_MFPL_PF2MFP_Pos)    /*!< GPF_MFPL PF2 s
1057:src/sys.h     **** #define SYS_GPF_MFPL_PF2MFP_ECAP1_IC2       (0xDUL<<SYS_GPF_MFPL_PF2MFP_Pos)    /*!< GPF_MFPL PF2 s
1058:src/sys.h     **** #define SYS_GPF_MFPL_PF2MFP_GPIO            (0x0UL<<SYS_GPF_MFPL_PF2MFP_Pos)    /*!< GPF_MFPL PF2 s
1059:src/sys.h     **** #define SYS_GPF_MFPL_PF2MFP_INT5            (0x8UL<<SYS_GPF_MFPL_PF2MFP_Pos)    /*!< GPF_MFPL PF2 s
1060:src/sys.h     **** #define SYS_GPF_MFPL_PF2MFP_PWM0_CH5        (0x6UL<<SYS_GPF_MFPL_PF2MFP_Pos)    /*!< GPF_MFPL PF2 s
1061:src/sys.h     **** #define SYS_GPF_MFPL_PF2MFP_QEI0_A          (0xCUL<<SYS_GPF_MFPL_PF2MFP_Pos)    /*!< GPF_MFPL PF2 s
1062:src/sys.h     **** #define SYS_GPF_MFPL_PF2MFP_SC0_nCD         (0xAUL<<SYS_GPF_MFPL_PF2MFP_Pos)    /*!< GPF_MFPL PF2 s
1063:src/sys.h     **** #define SYS_GPF_MFPL_PF2MFP_SC1_nCD         (0xBUL<<SYS_GPF_MFPL_PF2MFP_Pos)    /*!< GPF_MFPL PF2 s
1064:src/sys.h     **** #define SYS_GPF_MFPL_PF2MFP_SD1_DAT0        (0xEUL<<SYS_GPF_MFPL_PF2MFP_Pos)    /*!< GPF_MFPL PF2 s
1065:src/sys.h     **** #define SYS_GPF_MFPL_PF2MFP_SPI1_CLK        (0x5UL<<SYS_GPF_MFPL_PF2MFP_Pos)    /*!< GPF_MFPL PF2 s
1066:src/sys.h     **** #define SYS_GPF_MFPL_PF2MFP_TAMPER0         (0x1UL<<SYS_GPF_MFPL_PF2MFP_Pos)    /*!< GPF_MFPL PF2 s
1067:src/sys.h     **** #define SYS_GPF_MFPL_PF2MFP_TM2_EXT         (0x4UL<<SYS_GPF_MFPL_PF2MFP_Pos)    /*!< GPF_MFPL PF2 s
1068:src/sys.h     **** 
1069:src/sys.h     **** //PF.3 MFP
1070:src/sys.h     **** #define SYS_GPF_MFPL_PF3MFP_GPIO            (0x0UL<<SYS_GPF_MFPL_PF3MFP_Pos)    /*!< GPF_MFPL PF3 s
1071:src/sys.h     **** #define SYS_GPF_MFPL_PF3MFP_I2C1_SCL        (0x3UL<<SYS_GPF_MFPL_PF3MFP_Pos)    /*!< GPF_MFPL PF3 s
1072:src/sys.h     **** #define SYS_GPF_MFPL_PF3MFP_PWM1_CH4        (0x6UL<<SYS_GPF_MFPL_PF3MFP_Pos)    /*!< GPF_MFPL PF3 s
1073:src/sys.h     **** #define SYS_GPF_MFPL_PF3MFP_XT1_OUT         (0x1UL<<SYS_GPF_MFPL_PF3MFP_Pos)    /*!< GPF_MFPL PF3 s
1074:src/sys.h     **** 
1075:src/sys.h     **** //PF.4 MFP
1076:src/sys.h     **** #define SYS_GPF_MFPL_PF4MFP_GPIO            (0x0UL<<SYS_GPF_MFPL_PF4MFP_Pos)    /*!< GPF_MFPL PF4 s
1077:src/sys.h     **** #define SYS_GPF_MFPL_PF4MFP_I2C1_SDA        (0x3UL<<SYS_GPF_MFPL_PF4MFP_Pos)    /*!< GPF_MFPL PF4 s
1078:src/sys.h     **** #define SYS_GPF_MFPL_PF4MFP_PWM1_CH5        (0x6UL<<SYS_GPF_MFPL_PF4MFP_Pos)    /*!< GPF_MFPL PF4 s
1079:src/sys.h     **** #define SYS_GPF_MFPL_PF4MFP_XT1_IN          (0x1UL<<SYS_GPF_MFPL_PF4MFP_Pos)    /*!< GPF_MFPL PF4 s
1080:src/sys.h     **** 
1081:src/sys.h     **** //PF.5 MFP
1082:src/sys.h     **** #define SYS_GPF_MFPL_PF5MFP_BPWM1_CH0       (0xDUL<<SYS_GPF_MFPL_PF5MFP_Pos)    /*!< GPF_MFPL PF5 s
1083:src/sys.h     **** #define SYS_GPF_MFPL_PF5MFP_GPIO            (0x0UL<<SYS_GPF_MFPL_PF5MFP_Pos)    /*!< GPF_MFPL PF5 s
1084:src/sys.h     **** #define SYS_GPF_MFPL_PF5MFP_I2C0_SCL        (0x4UL<<SYS_GPF_MFPL_PF5MFP_Pos)    /*!< GPF_MFPL PF5 s
1085:src/sys.h     **** #define SYS_GPF_MFPL_PF5MFP_ICE_CLK         (0x1UL<<SYS_GPF_MFPL_PF5MFP_Pos)    /*!< GPF_MFPL PF5 s
1086:src/sys.h     **** #define SYS_GPF_MFPL_PF5MFP_SC0_DAT         (0x5UL<<SYS_GPF_MFPL_PF5MFP_Pos)    /*!< GPF_MFPL PF5 s
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 56


1087:src/sys.h     **** #define SYS_GPF_MFPL_PF5MFP_SD0_nCD         (0xBUL<<SYS_GPF_MFPL_PF5MFP_Pos)    /*!< GPF_MFPL PF5 s
1088:src/sys.h     **** #define SYS_GPF_MFPL_PF5MFP_UART0_RXD       (0x3UL<<SYS_GPF_MFPL_PF5MFP_Pos)    /*!< GPF_MFPL PF5 s
1089:src/sys.h     **** #define SYS_GPF_MFPL_PF5MFP_UART3_TXD       (0x2UL<<SYS_GPF_MFPL_PF5MFP_Pos)    /*!< GPF_MFPL PF5 s
1090:src/sys.h     **** 
1091:src/sys.h     **** //PF.6 MFP
1092:src/sys.h     **** #define SYS_GPF_MFPL_PF6MFP_BPWM1_CH1       (0xDUL<<SYS_GPF_MFPL_PF6MFP_Pos)    /*!< GPF_MFPL PF6 s
1093:src/sys.h     **** #define SYS_GPF_MFPL_PF6MFP_GPIO            (0x0UL<<SYS_GPF_MFPL_PF6MFP_Pos)    /*!< GPF_MFPL PF6 s
1094:src/sys.h     **** #define SYS_GPF_MFPL_PF6MFP_I2C0_SDA        (0x4UL<<SYS_GPF_MFPL_PF6MFP_Pos)    /*!< GPF_MFPL PF6 s
1095:src/sys.h     **** #define SYS_GPF_MFPL_PF6MFP_ICE_DAT         (0x1UL<<SYS_GPF_MFPL_PF6MFP_Pos)    /*!< GPF_MFPL PF6 s
1096:src/sys.h     **** #define SYS_GPF_MFPL_PF6MFP_SC0_CLK         (0x5UL<<SYS_GPF_MFPL_PF6MFP_Pos)    /*!< GPF_MFPL PF6 s
1097:src/sys.h     **** #define SYS_GPF_MFPL_PF6MFP_SD0_CMD         (0xBUL<<SYS_GPF_MFPL_PF6MFP_Pos)    /*!< GPF_MFPL PF6 s
1098:src/sys.h     **** #define SYS_GPF_MFPL_PF6MFP_UART0_TXD       (0x3UL<<SYS_GPF_MFPL_PF6MFP_Pos)    /*!< GPF_MFPL PF6 s
1099:src/sys.h     **** #define SYS_GPF_MFPL_PF6MFP_UART3_RXD       (0x2UL<<SYS_GPF_MFPL_PF6MFP_Pos)    /*!< GPF_MFPL PF6 s
1100:src/sys.h     **** 
1101:src/sys.h     **** //PF.7 MFP
1102:src/sys.h     **** #define SYS_GPF_MFPL_PF7MFP_EBI_ADR16       (0x7UL<<SYS_GPF_MFPL_PF7MFP_Pos)    /*!< GPF_MFPL PF7 s
1103:src/sys.h     **** #define SYS_GPF_MFPL_PF7MFP_EBI_ALE         (0x9UL<<SYS_GPF_MFPL_PF7MFP_Pos)    /*!< GPF_MFPL PF7 s
1104:src/sys.h     **** #define SYS_GPF_MFPL_PF7MFP_ECAP1_IC1       (0xDUL<<SYS_GPF_MFPL_PF7MFP_Pos)    /*!< GPF_MFPL PF7 s
1105:src/sys.h     **** #define SYS_GPF_MFPL_PF7MFP_GPIO            (0x0UL<<SYS_GPF_MFPL_PF7MFP_Pos)    /*!< GPF_MFPL PF7 s
1106:src/sys.h     **** #define SYS_GPF_MFPL_PF7MFP_INT4            (0x8UL<<SYS_GPF_MFPL_PF7MFP_Pos)    /*!< GPF_MFPL PF7 s
1107:src/sys.h     **** #define SYS_GPF_MFPL_PF7MFP_PWM1_CH0        (0x6UL<<SYS_GPF_MFPL_PF7MFP_Pos)    /*!< GPF_MFPL PF7 s
1108:src/sys.h     **** #define SYS_GPF_MFPL_PF7MFP_QEI0_B          (0xCUL<<SYS_GPF_MFPL_PF7MFP_Pos)    /*!< GPF_MFPL PF7 s
1109:src/sys.h     **** #define SYS_GPF_MFPL_PF7MFP_SC2_nCD         (0xAUL<<SYS_GPF_MFPL_PF7MFP_Pos)    /*!< GPF_MFPL PF7 s
1110:src/sys.h     **** #define SYS_GPF_MFPL_PF7MFP_SD0_DAT0        (0xEUL<<SYS_GPF_MFPL_PF7MFP_Pos)    /*!< GPF_MFPL PF7 s
1111:src/sys.h     **** #define SYS_GPF_MFPL_PF7MFP_SPI1_MISO       (0x5UL<<SYS_GPF_MFPL_PF7MFP_Pos)    /*!< GPF_MFPL PF7 s
1112:src/sys.h     **** #define SYS_GPF_MFPL_PF7MFP_SPI2_I2SMCLK    (0x2UL<<SYS_GPF_MFPL_PF7MFP_Pos)    /*!< GPF_MFPL PF7 s
1113:src/sys.h     **** #define SYS_GPF_MFPL_PF7MFP_TAMPER1         (0x1UL<<SYS_GPF_MFPL_PF7MFP_Pos)    /*!< GPF_MFPL PF7 s
1114:src/sys.h     **** #define SYS_GPF_MFPL_PF7MFP_TM1_EXT         (0x4UL<<SYS_GPF_MFPL_PF7MFP_Pos)    /*!< GPF_MFPL PF7 s
1115:src/sys.h     **** #define SYS_GPF_MFPL_PF7MFP_UART3_TXD       (0x3UL<<SYS_GPF_MFPL_PF7MFP_Pos)    /*!< GPF_MFPL PF7 s
1116:src/sys.h     **** #define SYS_GPF_MFPL_PF7MFP_USCI0_CLK       (0xBUL<<SYS_GPF_MFPL_PF7MFP_Pos)    /*!< GPF_MFPL PF7 s
1117:src/sys.h     **** 
1118:src/sys.h     **** //PF.8 MFP
1119:src/sys.h     **** #define SYS_GPF_MFPH_PF8MFP_ECAP1_IC0       (0xDUL<<SYS_GPF_MFPH_PF8MFP_Pos)    /*!< GPF_MFPH PF8 s
1120:src/sys.h     **** #define SYS_GPF_MFPH_PF8MFP_GPIO            (0x0UL<<SYS_GPF_MFPH_PF8MFP_Pos)    /*!< GPF_MFPH PF8 s
1121:src/sys.h     **** #define SYS_GPF_MFPH_PF8MFP_INT3            (0x8UL<<SYS_GPF_MFPH_PF8MFP_Pos)    /*!< GPF_MFPH PF8 s
1122:src/sys.h     **** #define SYS_GPF_MFPH_PF8MFP_PWM1_BRAKE1     (0x5UL<<SYS_GPF_MFPH_PF8MFP_Pos)    /*!< GPF_MFPH PF8 s
1123:src/sys.h     **** #define SYS_GPF_MFPH_PF8MFP_QEI0_INDEX      (0xCUL<<SYS_GPF_MFPH_PF8MFP_Pos)    /*!< GPF_MFPH PF8 s
1124:src/sys.h     **** #define SYS_GPF_MFPH_PF8MFP_SPI2_CLK        (0x2UL<<SYS_GPF_MFPH_PF8MFP_Pos)    /*!< GPF_MFPH PF8 s
1125:src/sys.h     **** #define SYS_GPF_MFPH_PF8MFP_TAMPER2         (0x1UL<<SYS_GPF_MFPH_PF8MFP_Pos)    /*!< GPF_MFPH PF8 s
1126:src/sys.h     **** #define SYS_GPF_MFPH_PF8MFP_TM0_EXT         (0x4UL<<SYS_GPF_MFPH_PF8MFP_Pos)    /*!< GPF_MFPH PF8 s
1127:src/sys.h     **** 
1128:src/sys.h     **** //PF.9 MFP
1129:src/sys.h     **** #define SYS_GPF_MFPH_PF9MFP_EADC0_ST        (0x9UL<<SYS_GPF_MFPH_PF9MFP_Pos)    /*!< GPF_MFPH PF9 s
1130:src/sys.h     **** #define SYS_GPF_MFPH_PF9MFP_EBI_ADR16       (0x7UL<<SYS_GPF_MFPH_PF9MFP_Pos)    /*!< GPF_MFPH PF9 s
1131:src/sys.h     **** #define SYS_GPF_MFPH_PF9MFP_ECAP0_IC2       (0xDUL<<SYS_GPF_MFPH_PF9MFP_Pos)    /*!< GPF_MFPH PF9 s
1132:src/sys.h     **** #define SYS_GPF_MFPH_PF9MFP_GPIO            (0x0UL<<SYS_GPF_MFPH_PF9MFP_Pos)    /*!< GPF_MFPH PF9 s
1133:src/sys.h     **** #define SYS_GPF_MFPH_PF9MFP_INT2            (0x8UL<<SYS_GPF_MFPH_PF9MFP_Pos)    /*!< GPF_MFPH PF9 s
1134:src/sys.h     **** #define SYS_GPF_MFPH_PF9MFP_PWM1_BRAKE0     (0x5UL<<SYS_GPF_MFPH_PF9MFP_Pos)    /*!< GPF_MFPH PF9 s
1135:src/sys.h     **** #define SYS_GPF_MFPH_PF9MFP_PWM1_CH0        (0x6UL<<SYS_GPF_MFPH_PF9MFP_Pos)    /*!< GPF_MFPH PF9 s
1136:src/sys.h     **** #define SYS_GPF_MFPH_PF9MFP_QEI1_INDEX      (0xCUL<<SYS_GPF_MFPH_PF9MFP_Pos)    /*!< GPF_MFPH PF9 s
1137:src/sys.h     **** #define SYS_GPF_MFPH_PF9MFP_SC1_RST         (0xBUL<<SYS_GPF_MFPH_PF9MFP_Pos)    /*!< GPF_MFPH PF9 s
1138:src/sys.h     **** #define SYS_GPF_MFPH_PF9MFP_SD0_DAT0        (0xEUL<<SYS_GPF_MFPH_PF9MFP_Pos)    /*!< GPF_MFPH PF9 s
1139:src/sys.h     **** #define SYS_GPF_MFPH_PF9MFP_SPI2_SS         (0x2UL<<SYS_GPF_MFPH_PF9MFP_Pos)    /*!< GPF_MFPH PF9 s
1140:src/sys.h     **** #define SYS_GPF_MFPH_PF9MFP_TAMPER3         (0x1UL<<SYS_GPF_MFPH_PF9MFP_Pos)    /*!< GPF_MFPH PF9 s
1141:src/sys.h     **** #define SYS_GPF_MFPH_PF9MFP_TM2             (0x4UL<<SYS_GPF_MFPH_PF9MFP_Pos)    /*!< GPF_MFPH PF9 s
1142:src/sys.h     **** #define SYS_GPF_MFPH_PF9MFP_UART3_TXD       (0x3UL<<SYS_GPF_MFPH_PF9MFP_Pos)    /*!< GPF_MFPH PF9 s
1143:src/sys.h     **** 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 57


1144:src/sys.h     **** //PF.10 MFP
1145:src/sys.h     **** #define SYS_GPF_MFPH_PF10MFP_EBI_ADR17      (0x7UL<<SYS_GPF_MFPH_PF10MFP_Pos)   /*!< GPF_MFPH PF10 
1146:src/sys.h     **** #define SYS_GPF_MFPH_PF10MFP_EBI_nRD        (0x9UL<<SYS_GPF_MFPH_PF10MFP_Pos)   /*!< GPF_MFPH PF10 
1147:src/sys.h     **** #define SYS_GPF_MFPH_PF10MFP_ECAP0_IC1      (0xDUL<<SYS_GPF_MFPH_PF10MFP_Pos)   /*!< GPF_MFPH PF10 
1148:src/sys.h     **** #define SYS_GPF_MFPH_PF10MFP_GPIO           (0x0UL<<SYS_GPF_MFPH_PF10MFP_Pos)   /*!< GPF_MFPH PF10 
1149:src/sys.h     **** #define SYS_GPF_MFPH_PF10MFP_I2C2_SCL       (0xAUL<<SYS_GPF_MFPH_PF10MFP_Pos)   /*!< GPF_MFPH PF10 
1150:src/sys.h     **** #define SYS_GPF_MFPH_PF10MFP_INT1           (0x8UL<<SYS_GPF_MFPH_PF10MFP_Pos)   /*!< GPF_MFPH PF10 
1151:src/sys.h     **** #define SYS_GPF_MFPH_PF10MFP_PWM0_BRAKE0    (0x5UL<<SYS_GPF_MFPH_PF10MFP_Pos)   /*!< GPF_MFPH PF10 
1152:src/sys.h     **** #define SYS_GPF_MFPH_PF10MFP_PWM1_CH1       (0x6UL<<SYS_GPF_MFPH_PF10MFP_Pos)   /*!< GPF_MFPH PF10 
1153:src/sys.h     **** #define SYS_GPF_MFPH_PF10MFP_QEI1_A         (0xCUL<<SYS_GPF_MFPH_PF10MFP_Pos)   /*!< GPF_MFPH PF10 
1154:src/sys.h     **** #define SYS_GPF_MFPH_PF10MFP_SC1_PWR        (0xBUL<<SYS_GPF_MFPH_PF10MFP_Pos)   /*!< GPF_MFPH PF10 
1155:src/sys.h     **** #define SYS_GPF_MFPH_PF10MFP_SPI2_MOSI      (0x2UL<<SYS_GPF_MFPH_PF10MFP_Pos)   /*!< GPF_MFPH PF10 
1156:src/sys.h     **** #define SYS_GPF_MFPH_PF10MFP_TAMPER4        (0x1UL<<SYS_GPF_MFPH_PF10MFP_Pos)   /*!< GPF_MFPH PF10 
1157:src/sys.h     **** #define SYS_GPF_MFPH_PF10MFP_TM1            (0x4UL<<SYS_GPF_MFPH_PF10MFP_Pos)   /*!< GPF_MFPH PF10 
1158:src/sys.h     **** #define SYS_GPF_MFPH_PF10MFP_UART3_RXD      (0x3UL<<SYS_GPF_MFPH_PF10MFP_Pos)   /*!< GPF_MFPH PF10 
1159:src/sys.h     **** 
1160:src/sys.h     **** //PF.11 MFP
1161:src/sys.h     **** #define SYS_GPF_MFPH_PF11MFP_EBI_ADR18      (0x7UL<<SYS_GPF_MFPH_PF11MFP_Pos)   /*!< GPF_MFPH PF11 
1162:src/sys.h     **** #define SYS_GPF_MFPH_PF11MFP_EBI_nWR        (0x9UL<<SYS_GPF_MFPH_PF11MFP_Pos)   /*!< GPF_MFPH PF11 
1163:src/sys.h     **** #define SYS_GPF_MFPH_PF11MFP_ECAP0_IC0      (0xDUL<<SYS_GPF_MFPH_PF11MFP_Pos)   /*!< GPF_MFPH PF11 
1164:src/sys.h     **** #define SYS_GPF_MFPH_PF11MFP_GPIO           (0x0UL<<SYS_GPF_MFPH_PF11MFP_Pos)   /*!< GPF_MFPH PF11 
1165:src/sys.h     **** #define SYS_GPF_MFPH_PF11MFP_I2C2_SDA       (0xAUL<<SYS_GPF_MFPH_PF11MFP_Pos)   /*!< GPF_MFPH PF11 
1166:src/sys.h     **** #define SYS_GPF_MFPH_PF11MFP_INT0           (0x8UL<<SYS_GPF_MFPH_PF11MFP_Pos)   /*!< GPF_MFPH PF11 
1167:src/sys.h     **** #define SYS_GPF_MFPH_PF11MFP_PWM0_BRAKE1    (0x5UL<<SYS_GPF_MFPH_PF11MFP_Pos)   /*!< GPF_MFPH PF11 
1168:src/sys.h     **** #define SYS_GPF_MFPH_PF11MFP_PWM1_CH2       (0x6UL<<SYS_GPF_MFPH_PF11MFP_Pos)   /*!< GPF_MFPH PF11 
1169:src/sys.h     **** #define SYS_GPF_MFPH_PF11MFP_QEI1_B         (0xCUL<<SYS_GPF_MFPH_PF11MFP_Pos)   /*!< GPF_MFPH PF11 
1170:src/sys.h     **** #define SYS_GPF_MFPH_PF11MFP_SC1_nCD        (0xBUL<<SYS_GPF_MFPH_PF11MFP_Pos)   /*!< GPF_MFPH PF11 
1171:src/sys.h     **** #define SYS_GPF_MFPH_PF11MFP_SPI2_MISO      (0x2UL<<SYS_GPF_MFPH_PF11MFP_Pos)   /*!< GPF_MFPH PF11 
1172:src/sys.h     **** #define SYS_GPF_MFPH_PF11MFP_TAMPER5        (0x1UL<<SYS_GPF_MFPH_PF11MFP_Pos)   /*!< GPF_MFPH PF11 
1173:src/sys.h     **** #define SYS_GPF_MFPH_PF11MFP_TM0            (0x4UL<<SYS_GPF_MFPH_PF11MFP_Pos)   /*!< GPF_MFPH PF11 
1174:src/sys.h     **** #define SYS_GPF_MFPH_PF11MFP_UART3_nCTS     (0x3UL<<SYS_GPF_MFPH_PF11MFP_Pos)   /*!< GPF_MFPH PF11 
1175:src/sys.h     **** 
1176:src/sys.h     **** //PF.12 MFP
1177:src/sys.h     **** #define SYS_GPF_MFPH_PF12MFP_CAN0_TXD       (0x5UL<<SYS_GPF_MFPH_PF12MFP_Pos)   /*!< GPF_MFPH PF12 
1178:src/sys.h     **** #define SYS_GPF_MFPH_PF12MFP_GPIO           (0x0UL<<SYS_GPF_MFPH_PF12MFP_Pos)   /*!< GPF_MFPH PF12 
1179:src/sys.h     **** #define SYS_GPF_MFPH_PF12MFP_I2C0_SCL       (0x4UL<<SYS_GPF_MFPH_PF12MFP_Pos)   /*!< GPF_MFPH PF12 
1180:src/sys.h     **** #define SYS_GPF_MFPH_PF12MFP_PWM1_BRAKE0    (0xDUL<<SYS_GPF_MFPH_PF12MFP_Pos)   /*!< GPF_MFPH PF12 
1181:src/sys.h     **** #define SYS_GPF_MFPH_PF12MFP_SPI1_MISO      (0x2UL<<SYS_GPF_MFPH_PF12MFP_Pos)   /*!< GPF_MFPH PF12 
1182:src/sys.h     **** #define SYS_GPF_MFPH_PF12MFP_UART5_RXD      (0x3UL<<SYS_GPF_MFPH_PF12MFP_Pos)   /*!< GPF_MFPH PF12 
1183:src/sys.h     **** #define SYS_GPF_MFPH_PF12MFP_USB_OTG_ID     (0x1UL<<SYS_GPF_MFPH_PF12MFP_Pos)   /*!< GPF_MFPH PF12 
1184:src/sys.h     **** #define SYS_GPF_MFPH_PF12MFP_USCI1_CTL0     (0xCUL<<SYS_GPF_MFPH_PF12MFP_Pos)   /*!< GPF_MFPH PF12 
1185:src/sys.h     **** 
1186:src/sys.h     **** //PF.13 MFP
1187:src/sys.h     **** #define SYS_GPF_MFPH_PF13MFP_CAN0_RXD       (0x5UL<<SYS_GPF_MFPH_PF13MFP_Pos)   /*!< GPF_MFPH PF13 
1188:src/sys.h     **** #define SYS_GPF_MFPH_PF13MFP_GPIO           (0x0UL<<SYS_GPF_MFPH_PF13MFP_Pos)   /*!< GPF_MFPH PF13 
1189:src/sys.h     **** #define SYS_GPF_MFPH_PF13MFP_I2C0_SDA       (0x4UL<<SYS_GPF_MFPH_PF13MFP_Pos)   /*!< GPF_MFPH PF13 
1190:src/sys.h     **** #define SYS_GPF_MFPH_PF13MFP_SPI1_MOSI      (0x2UL<<SYS_GPF_MFPH_PF13MFP_Pos)   /*!< GPF_MFPH PF13 
1191:src/sys.h     **** #define SYS_GPF_MFPH_PF13MFP_UART5_TXD      (0x3UL<<SYS_GPF_MFPH_PF13MFP_Pos)   /*!< GPF_MFPH PF13 
1192:src/sys.h     **** #define SYS_GPF_MFPH_PF13MFP_USB_D_P        (0x1UL<<SYS_GPF_MFPH_PF13MFP_Pos)   /*!< GPF_MFPH PF13 
1193:src/sys.h     **** #define SYS_GPF_MFPH_PF13MFP_USCI1_DAT0     (0xCUL<<SYS_GPF_MFPH_PF13MFP_Pos)   /*!< GPF_MFPH PF13 
1194:src/sys.h     **** 
1195:src/sys.h     **** //PF.14 MFP
1196:src/sys.h     **** #define SYS_GPF_MFPH_PF14MFP_GPIO           (0x0UL<<SYS_GPF_MFPH_PF14MFP_Pos)   /*!< GPF_MFPH PF14 
1197:src/sys.h     **** #define SYS_GPF_MFPH_PF14MFP_I2C1_SCL       (0x4UL<<SYS_GPF_MFPH_PF14MFP_Pos)   /*!< GPF_MFPH PF14 
1198:src/sys.h     **** #define SYS_GPF_MFPH_PF14MFP_SPI1_SS        (0x2UL<<SYS_GPF_MFPH_PF14MFP_Pos)   /*!< GPF_MFPH PF14 
1199:src/sys.h     **** #define SYS_GPF_MFPH_PF14MFP_UART5_nCTS     (0x3UL<<SYS_GPF_MFPH_PF14MFP_Pos)   /*!< GPF_MFPH PF14 
1200:src/sys.h     **** #define SYS_GPF_MFPH_PF14MFP_USB_D_N        (0x1UL<<SYS_GPF_MFPH_PF14MFP_Pos)   /*!< GPF_MFPH PF14 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 58


1201:src/sys.h     **** #define SYS_GPF_MFPH_PF14MFP_USCI1_DAT1     (0xCUL<<SYS_GPF_MFPH_PF14MFP_Pos)   /*!< GPF_MFPH PF14 
1202:src/sys.h     **** 
1203:src/sys.h     **** //PF.15 MFP
1204:src/sys.h     **** #define SYS_GPF_MFPH_PF15MFP_GPIO           (0x0UL<<SYS_GPF_MFPH_PF15MFP_Pos)   /*!< GPF_MFPH PF15 
1205:src/sys.h     **** #define SYS_GPF_MFPH_PF15MFP_I2C1_SDA       (0x4UL<<SYS_GPF_MFPH_PF15MFP_Pos)   /*!< GPF_MFPH PF15 
1206:src/sys.h     **** #define SYS_GPF_MFPH_PF15MFP_SPI1_CLK       (0x2UL<<SYS_GPF_MFPH_PF15MFP_Pos)   /*!< GPF_MFPH PF15 
1207:src/sys.h     **** #define SYS_GPF_MFPH_PF15MFP_UART5_nRTS     (0x3UL<<SYS_GPF_MFPH_PF15MFP_Pos)   /*!< GPF_MFPH PF15 
1208:src/sys.h     **** #define SYS_GPF_MFPH_PF15MFP_USB_VBUS       (0x1UL<<SYS_GPF_MFPH_PF15MFP_Pos)   /*!< GPF_MFPH PF15 
1209:src/sys.h     **** #define SYS_GPF_MFPH_PF15MFP_USCI1_CLK      (0xCUL<<SYS_GPF_MFPH_PF15MFP_Pos)   /*!< GPF_MFPH PF15 
1210:src/sys.h     **** 
1211:src/sys.h     **** //PG.1 MFP
1212:src/sys.h     **** #define SYS_GPG_MFPL_PG1MFP_EBI_AD7         (0x7UL<<SYS_GPG_MFPL_PG1MFP_Pos)    /*!< GPG_MFPL PG1 s
1213:src/sys.h     **** #define SYS_GPG_MFPL_PG1MFP_GPIO            (0x0UL<<SYS_GPG_MFPL_PG1MFP_Pos)    /*!< GPG_MFPL PG1 s
1214:src/sys.h     **** #define SYS_GPG_MFPL_PG1MFP_LCD_SEG23       (0xFUL<<SYS_GPG_MFPL_PG1MFP_Pos)    /*!< GPG_MFPL PG1 s
1215:src/sys.h     **** #define SYS_GPG_MFPL_PG1MFP_PWM1_CH2        (0x6UL<<SYS_GPG_MFPL_PG1MFP_Pos)    /*!< GPG_MFPL PG1 s
1216:src/sys.h     **** #define SYS_GPG_MFPL_PG1MFP_SPI0_MISO0      (0x2UL<<SYS_GPG_MFPL_PG1MFP_Pos)    /*!< GPG_MFPL PG1 s
1217:src/sys.h     **** #define SYS_GPG_MFPL_PG1MFP_TM2             (0xBUL<<SYS_GPG_MFPL_PG1MFP_Pos)    /*!< GPG_MFPL PG1 s
1218:src/sys.h     **** #define SYS_GPG_MFPL_PG1MFP_UART2_RXD       (0x3UL<<SYS_GPG_MFPL_PG1MFP_Pos)    /*!< GPG_MFPL PG1 s
1219:src/sys.h     **** 
1220:src/sys.h     **** //PG.2 MFP
1221:src/sys.h     **** #define SYS_GPG_MFPL_PG2MFP_EBI_AD6         (0x7UL<<SYS_GPG_MFPL_PG2MFP_Pos)    /*!< GPG_MFPL PG2 s
1222:src/sys.h     **** #define SYS_GPG_MFPL_PG2MFP_GPIO            (0x0UL<<SYS_GPG_MFPL_PG2MFP_Pos)    /*!< GPG_MFPL PG2 s
1223:src/sys.h     **** #define SYS_GPG_MFPL_PG2MFP_INT3            (0x8UL<<SYS_GPG_MFPL_PG2MFP_Pos)    /*!< GPG_MFPL PG2 s
1224:src/sys.h     **** #define SYS_GPG_MFPL_PG2MFP_LCD_SEG24       (0xFUL<<SYS_GPG_MFPL_PG2MFP_Pos)    /*!< GPG_MFPL PG2 s
1225:src/sys.h     **** #define SYS_GPG_MFPL_PG2MFP_PWM1_CH3        (0x6UL<<SYS_GPG_MFPL_PG2MFP_Pos)    /*!< GPG_MFPL PG2 s
1226:src/sys.h     **** #define SYS_GPG_MFPL_PG2MFP_SPI0_MOSI0      (0x2UL<<SYS_GPG_MFPL_PG2MFP_Pos)    /*!< GPG_MFPL PG2 s
1227:src/sys.h     **** #define SYS_GPG_MFPL_PG2MFP_TM3_EXT         (0xBUL<<SYS_GPG_MFPL_PG2MFP_Pos)    /*!< GPG_MFPL PG2 s
1228:src/sys.h     **** #define SYS_GPG_MFPL_PG2MFP_UART2_TXD       (0x3UL<<SYS_GPG_MFPL_PG2MFP_Pos)    /*!< GPG_MFPL PG2 s
1229:src/sys.h     **** 
1230:src/sys.h     **** //PG.3 MFP
1231:src/sys.h     **** #define SYS_GPG_MFPL_PG3MFP_EBI_AD5         (0x7UL<<SYS_GPG_MFPL_PG3MFP_Pos)    /*!< GPG_MFPL PG3 s
1232:src/sys.h     **** #define SYS_GPG_MFPL_PG3MFP_GPIO            (0x0UL<<SYS_GPG_MFPL_PG3MFP_Pos)    /*!< GPG_MFPL PG3 s
1233:src/sys.h     **** #define SYS_GPG_MFPL_PG3MFP_INT4            (0x8UL<<SYS_GPG_MFPL_PG3MFP_Pos)    /*!< GPG_MFPL PG3 s
1234:src/sys.h     **** #define SYS_GPG_MFPL_PG3MFP_PWM1_CH4        (0x6UL<<SYS_GPG_MFPL_PG3MFP_Pos)    /*!< GPG_MFPL PG3 s
1235:src/sys.h     **** #define SYS_GPG_MFPL_PG3MFP_SPI0_CLK        (0x2UL<<SYS_GPG_MFPL_PG3MFP_Pos)    /*!< GPG_MFPL PG3 s
1236:src/sys.h     **** #define SYS_GPG_MFPL_PG3MFP_TM3             (0xBUL<<SYS_GPG_MFPL_PG3MFP_Pos)    /*!< GPG_MFPL PG3 s
1237:src/sys.h     **** #define SYS_GPG_MFPL_PG3MFP_UART2_nCTS      (0x3UL<<SYS_GPG_MFPL_PG3MFP_Pos)    /*!< GPG_MFPL PG3 s
1238:src/sys.h     **** 
1239:src/sys.h     **** //PG.4 MFP
1240:src/sys.h     **** #define SYS_GPG_MFPL_PG4MFP_EBI_AD4         (0x7UL<<SYS_GPG_MFPL_PG4MFP_Pos)    /*!< GPG_MFPL PG4 s
1241:src/sys.h     **** #define SYS_GPG_MFPL_PG4MFP_GPIO            (0x0UL<<SYS_GPG_MFPL_PG4MFP_Pos)    /*!< GPG_MFPL PG4 s
1242:src/sys.h     **** #define SYS_GPG_MFPL_PG4MFP_INT5            (0x8UL<<SYS_GPG_MFPL_PG4MFP_Pos)    /*!< GPG_MFPL PG4 s
1243:src/sys.h     **** #define SYS_GPG_MFPL_PG4MFP_PWM1_CH5        (0x6UL<<SYS_GPG_MFPL_PG4MFP_Pos)    /*!< GPG_MFPL PG4 s
1244:src/sys.h     **** #define SYS_GPG_MFPL_PG4MFP_SPI0_SS         (0x2UL<<SYS_GPG_MFPL_PG4MFP_Pos)    /*!< GPG_MFPL PG4 s
1245:src/sys.h     **** #define SYS_GPG_MFPL_PG4MFP_UART2_nRTS      (0x3UL<<SYS_GPG_MFPL_PG4MFP_Pos)    /*!< GPG_MFPL PG4 s
1246:src/sys.h     **** 
1247:src/sys.h     **** //PG.5 MFP
1248:src/sys.h     **** #define SYS_GPG_MFPL_PG5MFP_GPIO            (0x0UL<<SYS_GPG_MFPL_PG5MFP_Pos)    /*!< GPG_MFPL PG5 s
1249:src/sys.h     **** 
1250:src/sys.h     **** //PG.7 MFP
1251:src/sys.h     **** #define SYS_GPG_MFPL_PG7MFP_EBI_nRD         (0x7UL<<SYS_GPG_MFPL_PG7MFP_Pos)    /*!< GPG_MFPL PG7 s
1252:src/sys.h     **** #define SYS_GPG_MFPL_PG7MFP_GPIO            (0x0UL<<SYS_GPG_MFPL_PG7MFP_Pos)    /*!< GPG_MFPL PG7 s
1253:src/sys.h     **** #define SYS_GPG_MFPL_PG7MFP_LCD_SEG0        (0xFUL<<SYS_GPG_MFPL_PG7MFP_Pos)    /*!< GPG_MFPL PG7 s
1254:src/sys.h     **** #define SYS_GPG_MFPL_PG7MFP_SC1_CLK         (0xBUL<<SYS_GPG_MFPL_PG7MFP_Pos)    /*!< GPG_MFPL PG7 s
1255:src/sys.h     **** #define SYS_GPG_MFPL_PG7MFP_SD0_CLK         (0xEUL<<SYS_GPG_MFPL_PG7MFP_Pos)    /*!< GPG_MFPL PG7 s
1256:src/sys.h     **** #define SYS_GPG_MFPL_PG7MFP_UART0_RXD       (0x3UL<<SYS_GPG_MFPL_PG7MFP_Pos)    /*!< GPG_MFPL PG7 s
1257:src/sys.h     **** #define SYS_GPG_MFPL_PG7MFP_USCI0_DAT0      (0xCUL<<SYS_GPG_MFPL_PG7MFP_Pos)    /*!< GPG_MFPL PG7 s
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 59


1258:src/sys.h     **** 
1259:src/sys.h     **** //PG.8 MFP
1260:src/sys.h     **** #define SYS_GPG_MFPH_PG8MFP_EBI_nWR         (0x7UL<<SYS_GPG_MFPH_PG8MFP_Pos)    /*!< GPG_MFPH PG8 s
1261:src/sys.h     **** #define SYS_GPG_MFPH_PG8MFP_GPIO            (0x0UL<<SYS_GPG_MFPH_PG8MFP_Pos)    /*!< GPG_MFPH PG8 s
1262:src/sys.h     **** #define SYS_GPG_MFPH_PG8MFP_LCD_SEG1        (0xFUL<<SYS_GPG_MFPH_PG8MFP_Pos)    /*!< GPG_MFPH PG8 s
1263:src/sys.h     **** #define SYS_GPG_MFPH_PG8MFP_SC1_DAT         (0xBUL<<SYS_GPG_MFPH_PG8MFP_Pos)    /*!< GPG_MFPH PG8 s
1264:src/sys.h     **** #define SYS_GPG_MFPH_PG8MFP_SD0_DAT3        (0xEUL<<SYS_GPG_MFPH_PG8MFP_Pos)    /*!< GPG_MFPH PG8 s
1265:src/sys.h     **** #define SYS_GPG_MFPH_PG8MFP_SPI1_SS         (0x1UL<<SYS_GPG_MFPH_PG8MFP_Pos)    /*!< GPG_MFPH PG8 s
1266:src/sys.h     **** #define SYS_GPG_MFPH_PG8MFP_UART0_TXD       (0x3UL<<SYS_GPG_MFPH_PG8MFP_Pos)    /*!< GPG_MFPH PG8 s
1267:src/sys.h     **** #define SYS_GPG_MFPH_PG8MFP_USCI0_DAT1      (0xCUL<<SYS_GPG_MFPH_PG8MFP_Pos)    /*!< GPG_MFPH PG8 s
1268:src/sys.h     **** 
1269:src/sys.h     **** //PG.9 MFP
1270:src/sys.h     **** #define SYS_GPG_MFPH_PG9MFP_GPIO            (0x0UL<<SYS_GPG_MFPH_PG9MFP_Pos)    /*!< GPG_MFPH PG9 s
1271:src/sys.h     **** #define SYS_GPG_MFPH_PG9MFP_LCD_SEG30       (0xFUL<<SYS_GPG_MFPH_PG9MFP_Pos)    /*!< GPG_MFPH PG9 s
1272:src/sys.h     **** #define SYS_GPG_MFPH_PG9MFP_QEI0_A          (0xCUL<<SYS_GPG_MFPH_PG9MFP_Pos)    /*!< GPG_MFPH PG9 s
1273:src/sys.h     **** #define SYS_GPG_MFPH_PG9MFP_UART5_RXD       (0x6UL<<SYS_GPG_MFPH_PG9MFP_Pos)    /*!< GPG_MFPH PG9 s
1274:src/sys.h     **** 
1275:src/sys.h     **** //PG.10 MFP
1276:src/sys.h     **** #define SYS_GPG_MFPH_PG10MFP_GPIO           (0x0UL<<SYS_GPG_MFPH_PG10MFP_Pos)   /*!< GPG_MFPH PG10 
1277:src/sys.h     **** #define SYS_GPG_MFPH_PG10MFP_LCD_SEG31      (0xFUL<<SYS_GPG_MFPH_PG10MFP_Pos)   /*!< GPG_MFPH PG10 
1278:src/sys.h     **** #define SYS_GPG_MFPH_PG10MFP_QEI0_B         (0xCUL<<SYS_GPG_MFPH_PG10MFP_Pos)   /*!< GPG_MFPH PG10 
1279:src/sys.h     **** #define SYS_GPG_MFPH_PG10MFP_UART5_TXD      (0x6UL<<SYS_GPG_MFPH_PG10MFP_Pos)   /*!< GPG_MFPH PG10 
1280:src/sys.h     **** 
1281:src/sys.h     **** //PG.11 MFP
1282:src/sys.h     **** #define SYS_GPG_MFPH_PG11MFP_GPIO           (0x0UL<<SYS_GPG_MFPH_PG11MFP_Pos)   /*!< GPG_MFPH PG11 
1283:src/sys.h     **** #define SYS_GPG_MFPH_PG11MFP_LCD_SEG32      (0xFUL<<SYS_GPG_MFPH_PG11MFP_Pos)   /*!< GPG_MFPH PG11 
1284:src/sys.h     **** #define SYS_GPG_MFPH_PG11MFP_QEI0_INDEX     (0xCUL<<SYS_GPG_MFPH_PG11MFP_Pos)   /*!< GPG_MFPH PG11 
1285:src/sys.h     **** #define SYS_GPG_MFPH_PG11MFP_UART5_nCTS     (0x6UL<<SYS_GPG_MFPH_PG11MFP_Pos)   /*!< GPG_MFPH PG11 
1286:src/sys.h     **** #define SYS_GPG_MFPH_PG11MFP_USB_VBUS_ST    (0xBUL<<SYS_GPG_MFPH_PG11MFP_Pos)   /*!< GPG_MFPH PG11 
1287:src/sys.h     **** 
1288:src/sys.h     **** //PG.12 MFP
1289:src/sys.h     **** #define SYS_GPG_MFPH_PG12MFP_GPIO           (0x0UL<<SYS_GPG_MFPH_PG12MFP_Pos)   /*!< GPG_MFPH PG12 
1290:src/sys.h     **** #define SYS_GPG_MFPH_PG12MFP_LCD_SEG33      (0xFUL<<SYS_GPG_MFPH_PG12MFP_Pos)   /*!< GPG_MFPH PG12 
1291:src/sys.h     **** #define SYS_GPG_MFPH_PG12MFP_UART5_nRTS     (0x6UL<<SYS_GPG_MFPH_PG12MFP_Pos)   /*!< GPG_MFPH PG12 
1292:src/sys.h     **** #define SYS_GPG_MFPH_PG12MFP_USB_VBUS_EN    (0xBUL<<SYS_GPG_MFPH_PG12MFP_Pos)   /*!< GPG_MFPH PG12 
1293:src/sys.h     **** 
1294:src/sys.h     **** 
1295:src/sys.h     **** 
1296:src/sys.h     **** 
1297:src/sys.h     **** /*@}*/ /* end of group SYS_EXPORTED_CONSTANTS */
1298:src/sys.h     **** 
1299:src/sys.h     **** /** @addtogroup SYS_EXPORTED_FUNCTIONS SYS Exported Functions
1300:src/sys.h     ****   @{
1301:src/sys.h     **** */
1302:src/sys.h     **** 
1303:src/sys.h     **** 
1304:src/sys.h     **** /**
1305:src/sys.h     ****   * @brief      Clear Brown-out detector interrupt flag
1306:src/sys.h     ****   * @param      None
1307:src/sys.h     ****   * @return     None
1308:src/sys.h     ****   * @details    This macro clear Brown-out detector interrupt flag.
1309:src/sys.h     ****   */
1310:src/sys.h     **** #define SYS_CLEAR_BOD_INT_FLAG()        (SYS->BODCTL |= SYS_BODCTL_BODIF_Msk)
1311:src/sys.h     **** 
1312:src/sys.h     **** /**
1313:src/sys.h     ****   * @brief      Set Brown-out detector function to normal mode
1314:src/sys.h     ****   * @param      None
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 60


1315:src/sys.h     ****   * @return     None
1316:src/sys.h     ****   * @details    This macro set Brown-out detector to normal mode.
1317:src/sys.h     ****   *             The register write-protection function should be disabled before using this macro.
1318:src/sys.h     ****   */
1319:src/sys.h     **** #define SYS_CLEAR_BOD_LPM()             (SYS->BODCTL &= ~SYS_BODCTL_BODLPM_Msk)
1320:src/sys.h     **** 
1321:src/sys.h     **** /**
1322:src/sys.h     ****   * @brief      Disable Brown-out detector function
1323:src/sys.h     ****   * @param      None
1324:src/sys.h     ****   * @return     None
1325:src/sys.h     ****   * @details    This macro disable Brown-out detector function.
1326:src/sys.h     ****   *             The register write-protection function should be disabled before using this macro.
1327:src/sys.h     ****   */
1328:src/sys.h     **** #define SYS_DISABLE_BOD()               (SYS->BODCTL &= ~SYS_BODCTL_BODEN_Msk)
1329:src/sys.h     **** 
1330:src/sys.h     **** /**
1331:src/sys.h     ****   * @brief      Enable Brown-out detector function
1332:src/sys.h     ****   * @param      None
1333:src/sys.h     ****   * @return     None
1334:src/sys.h     ****   * @details    This macro enable Brown-out detector function.
1335:src/sys.h     ****   *             The register write-protection function should be disabled before using this macro.
1336:src/sys.h     ****   */
1337:src/sys.h     **** #define SYS_ENABLE_BOD()                (SYS->BODCTL |= SYS_BODCTL_BODEN_Msk)
1338:src/sys.h     **** 
1339:src/sys.h     **** /**
1340:src/sys.h     ****   * @brief      Get Brown-out detector interrupt flag
1341:src/sys.h     ****   * @param      None
1342:src/sys.h     ****   * @retval     0   Brown-out detect interrupt flag is not set.
1343:src/sys.h     ****   * @retval     >=1 Brown-out detect interrupt flag is set.
1344:src/sys.h     ****   * @details    This macro get Brown-out detector interrupt flag.
1345:src/sys.h     ****   */
1346:src/sys.h     **** #define SYS_GET_BOD_INT_FLAG()          (SYS->BODCTL & SYS_BODCTL_BODIF_Msk)
1347:src/sys.h     **** 
1348:src/sys.h     **** /**
1349:src/sys.h     ****   * @brief      Get Brown-out detector status
1350:src/sys.h     ****   * @param      None
1351:src/sys.h     ****   * @retval     0   System voltage is higher than BOD threshold voltage setting or BOD function is 
1352:src/sys.h     ****   * @retval     >=1 System voltage is lower than BOD threshold voltage setting.
1353:src/sys.h     ****   * @details    This macro get Brown-out detector output status.
1354:src/sys.h     ****   *             If the BOD function is disabled, this function always return 0.
1355:src/sys.h     ****   */
1356:src/sys.h     **** #define SYS_GET_BOD_OUTPUT()            (SYS->BODCTL & SYS_BODCTL_BODOUT_Msk)
1357:src/sys.h     **** 
1358:src/sys.h     **** /**
1359:src/sys.h     ****   * @brief      Enable Brown-out detector interrupt function
1360:src/sys.h     ****   * @param      None
1361:src/sys.h     ****   * @return     None
1362:src/sys.h     ****   * @details    This macro enable Brown-out detector interrupt function.
1363:src/sys.h     ****   *             The register write-protection function should be disabled before using this macro.
1364:src/sys.h     ****   */
1365:src/sys.h     **** #define SYS_DISABLE_BOD_RST()           (SYS->BODCTL &= ~SYS_BODCTL_BODRSTEN_Msk)
1366:src/sys.h     **** 
1367:src/sys.h     **** /**
1368:src/sys.h     ****   * @brief      Enable Brown-out detector reset function
1369:src/sys.h     ****   * @param      None
1370:src/sys.h     ****   * @return     None
1371:src/sys.h     ****   * @details    This macro enable Brown-out detect reset function.
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 61


1372:src/sys.h     ****   *             The register write-protection function should be disabled before using this macro.
1373:src/sys.h     ****   */
1374:src/sys.h     **** #define SYS_ENABLE_BOD_RST()            (SYS->BODCTL |= SYS_BODCTL_BODRSTEN_Msk)
1375:src/sys.h     **** 
1376:src/sys.h     **** /**
1377:src/sys.h     ****   * @brief      Set Brown-out detector function low power mode
1378:src/sys.h     ****   * @param      None
1379:src/sys.h     ****   * @return     None
1380:src/sys.h     ****   * @details    This macro set Brown-out detector to low power mode.
1381:src/sys.h     ****   *             The register write-protection function should be disabled before using this macro.
1382:src/sys.h     ****   */
1383:src/sys.h     **** #define SYS_SET_BOD_LPM()               (SYS->BODCTL |= SYS_BODCTL_BODLPM_Msk)
1384:src/sys.h     **** 
1385:src/sys.h     **** /**
1386:src/sys.h     ****   * @brief      Set Brown-out detector voltage level
1387:src/sys.h     ****   * @param[in]  u32Level is Brown-out voltage level. Including :
1388:src/sys.h     ****   *             - \ref SYS_BODCTL_BODVL_4_5V
1389:src/sys.h     ****   *             - \ref SYS_BODCTL_BODVL_3_7V
1390:src/sys.h     ****   *             - \ref SYS_BODCTL_BODVL_2_7V
1391:src/sys.h     ****   *             - \ref SYS_BODCTL_BODVL_2_2V
1392:src/sys.h     ****   * @return     None
1393:src/sys.h     ****   * @details    This macro set Brown-out detector voltage level.
1394:src/sys.h     ****   *             The write-protection function should be disabled before using this macro.
1395:src/sys.h     ****   */
1396:src/sys.h     **** #define SYS_SET_BOD_LEVEL(u32Level)     (SYS->BODCTL = (SYS->BODCTL & ~SYS_BODCTL_BODVL_Msk) | (u32
1397:src/sys.h     **** 
1398:src/sys.h     **** /**
1399:src/sys.h     ****   * @brief      Get reset source is from Brown-out detector reset
1400:src/sys.h     ****   * @param      None
1401:src/sys.h     ****   * @retval     0   Previous reset source is not from Brown-out detector reset
1402:src/sys.h     ****   * @retval     >=1 Previous reset source is from Brown-out detector reset
1403:src/sys.h     ****   * @details    This macro get previous reset source is from Brown-out detect reset or not.
1404:src/sys.h     ****   */
1405:src/sys.h     **** #define SYS_IS_BOD_RST()                (SYS->RSTSTS & SYS_RSTSTS_BODRF_Msk)
1406:src/sys.h     **** 
1407:src/sys.h     **** /**
1408:src/sys.h     ****   * @brief      Get reset source is from CPU reset
1409:src/sys.h     ****   * @param      None
1410:src/sys.h     ****   * @retval     0   Previous reset source is not from CPU reset
1411:src/sys.h     ****   * @retval     >=1 Previous reset source is from CPU reset
1412:src/sys.h     ****   * @details    This macro get previous reset source is from CPU reset.
1413:src/sys.h     ****   */
1414:src/sys.h     **** #define SYS_IS_CPU_RST()                (SYS->RSTSTS & SYS_RSTSTS_CPURF_Msk)
1415:src/sys.h     **** 
1416:src/sys.h     **** /**
1417:src/sys.h     ****   * @brief      Get reset source is from LVR Reset
1418:src/sys.h     ****   * @param      None     
1419:src/sys.h     ****   * @retval     0   Previous reset source is not from Low-Voltage-Reset
1420:src/sys.h     ****   * @retval     >=1 Previous reset source is from Low-Voltage-Reset
1421:src/sys.h     ****   * @details    This macro get previous reset source is from Low-Voltage-Reset.   
1422:src/sys.h     ****   */
1423:src/sys.h     **** #define SYS_IS_LVR_RST()                (SYS->RSTSTS & SYS_RSTSTS_LVRF_Msk)
1424:src/sys.h     **** 
1425:src/sys.h     **** /**
1426:src/sys.h     ****   * @brief      Get reset source is from Power-on Reset
1427:src/sys.h     ****   * @param      None
1428:src/sys.h     ****   * @retval     0   Previous reset source is not from Power-on Reset
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 62


1429:src/sys.h     ****   * @retval     >=1 Previous reset source is from Power-on Reset
1430:src/sys.h     ****   * @details    This macro get previous reset source is from Power-on Reset.
1431:src/sys.h     ****   */
1432:src/sys.h     **** #define SYS_IS_POR_RST()                (SYS->RSTSTS & SYS_RSTSTS_PORF_Msk)
1433:src/sys.h     **** 
1434:src/sys.h     **** /**
1435:src/sys.h     ****   * @brief      Get reset source is from reset pin reset
1436:src/sys.h     ****   * @param      None
1437:src/sys.h     ****   * @retval     0   Previous reset source is not from reset pin reset
1438:src/sys.h     ****   * @retval     >=1 Previous reset source is from reset pin reset
1439:src/sys.h     ****   * @details    This macro get previous reset source is from reset pin reset.
1440:src/sys.h     ****   */
1441:src/sys.h     **** #define SYS_IS_RSTPIN_RST()             (SYS->RSTSTS & SYS_RSTSTS_PINRF_Msk)
1442:src/sys.h     **** 
1443:src/sys.h     **** /**
1444:src/sys.h     ****   * @brief      Get reset source is from system reset
1445:src/sys.h     ****   * @param      None
1446:src/sys.h     ****   * @retval     0   Previous reset source is not from system reset
1447:src/sys.h     ****   * @retval     >=1 Previous reset source is from system reset
1448:src/sys.h     ****   * @details    This macro get previous reset source is from system reset.
1449:src/sys.h     ****   */
1450:src/sys.h     **** #define SYS_IS_SYSTEM_RST()             (SYS->RSTSTS & SYS_RSTSTS_MCURF_Msk)
1451:src/sys.h     **** 
1452:src/sys.h     **** /**
1453:src/sys.h     ****   * @brief      Get reset source is from window watch dog reset
1454:src/sys.h     ****   * @param      None
1455:src/sys.h     ****   * @retval     0   Previous reset source is not from window watch dog reset
1456:src/sys.h     ****   * @retval     >=1 Previous reset source is from window watch dog reset
1457:src/sys.h     ****   * @details    This macro get previous reset source is from window watch dog reset.
1458:src/sys.h     ****   */
1459:src/sys.h     **** #define SYS_IS_WDT_RST()                (SYS->RSTSTS & SYS_RSTSTS_WDTRF_Msk)
1460:src/sys.h     **** 
1461:src/sys.h     **** /**
1462:src/sys.h     ****   * @brief      Disable Low-Voltage-Reset function
1463:src/sys.h     ****   * @param      None
1464:src/sys.h     ****   * @return     None
1465:src/sys.h     ****   * @details    This macro disable Low-Voltage-Reset function.
1466:src/sys.h     ****   *             The register write-protection function should be disabled before using this macro.
1467:src/sys.h     ****   */
1468:src/sys.h     **** #define SYS_DISABLE_LVR()               (SYS->BODCTL &= ~SYS_BODCTL_LVREN_Msk)
1469:src/sys.h     **** 
1470:src/sys.h     **** /**
1471:src/sys.h     ****   * @brief      Enable Low-Voltage-Reset function
1472:src/sys.h     ****   * @param      None
1473:src/sys.h     ****   * @return     None
1474:src/sys.h     ****   * @details    This macro enable Low-Voltage-Reset function.
1475:src/sys.h     ****   *             The register write-protection function should be disabled before using this macro.
1476:src/sys.h     ****   */
1477:src/sys.h     **** #define SYS_ENABLE_LVR()                (SYS->BODCTL |= SYS_BODCTL_LVREN_Msk)
1478:src/sys.h     **** 
1479:src/sys.h     **** /**
1480:src/sys.h     ****   * @brief      Disable Power-on Reset function
1481:src/sys.h     ****   * @param      None
1482:src/sys.h     ****   * @return     None
1483:src/sys.h     ****   * @details    This macro disable Power-on Reset function.
1484:src/sys.h     ****   *             The register write-protection function should be disabled before using this macro.
1485:src/sys.h     ****   */
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 63


1486:src/sys.h     **** #define SYS_DISABLE_POR()               (SYS->PORCTL = 0x5AA5)
1487:src/sys.h     **** 
1488:src/sys.h     **** /**
1489:src/sys.h     ****   * @brief      Enable Power-on Reset function
1490:src/sys.h     ****   * @param      None
1491:src/sys.h     ****   * @return     None
1492:src/sys.h     ****   * @details    This macro enable Power-on Reset function.
1493:src/sys.h     ****   *             The register write-protection function should be disabled before using this macro.
1494:src/sys.h     ****   */
1495:src/sys.h     **** #define SYS_ENABLE_POR()                (SYS->PORCTL = 0)
1496:src/sys.h     **** 
1497:src/sys.h     **** /**
1498:src/sys.h     ****   * @brief      Clear reset source flag
1499:src/sys.h     ****   * @param[in]  u32RstSrc is reset source. Including :
1500:src/sys.h     ****   *             - \ref SYS_RSTSTS_PORF_Msk
1501:src/sys.h     ****   *             - \ref SYS_RSTSTS_PINRF_Msk
1502:src/sys.h     ****   *             - \ref SYS_RSTSTS_WDTRF_Msk
1503:src/sys.h     ****   *             - \ref SYS_RSTSTS_LVRF_Msk
1504:src/sys.h     ****   *             - \ref SYS_RSTSTS_BODRF_Msk
1505:src/sys.h     ****   *             - \ref SYS_RSTSTS_MCURF_Msk
1506:src/sys.h     ****   *             - \ref SYS_RSTSTS_CPURF_Msk
1507:src/sys.h     ****   *             - \ref SYS_RSTSTS_CPULKRF_Msk  
1508:src/sys.h     ****   * @return     None
1509:src/sys.h     ****   * @details    This macro clear reset source flag.
1510:src/sys.h     ****   */
1511:src/sys.h     **** #define SYS_CLEAR_RST_SOURCE(u32RstSrc) ((SYS->RSTSTS) = (u32RstSrc) )
1512:src/sys.h     **** 
1513:src/sys.h     **** 
1514:src/sys.h     **** 
1515:src/sys.h     **** 
1516:src/sys.h     **** /**
1517:src/sys.h     ****   * @brief      Disable register write-protection function
1518:src/sys.h     ****   * @param      None
1519:src/sys.h     ****   * @return     None
1520:src/sys.h     ****   * @details    This function disable register write-protection function.
1521:src/sys.h     ****   *             To unlock the protected register to allow write access.
1522:src/sys.h     ****   */
1523:src/sys.h     **** __STATIC_INLINE void SYS_UnlockReg(void)
1524:src/sys.h     **** {
 241              		.loc 2 1524 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 1, uses_anonymous_args = 0
 245 0124 80B5     		push	{r7, lr}
 246              	.LCFI6:
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 7, -8
 249              		.cfi_offset 14, -4
 250 0126 00AF     		add	r7, sp, #0
 251              	.LCFI7:
 252              		.cfi_def_cfa_register 7
 253              	.L13:
1525:src/sys.h     ****     do
1526:src/sys.h     ****     {
1527:src/sys.h     ****         SYS->REGLCTL = 0x59;
 254              		.loc 2 1527 0 discriminator 1
 255 0128 8023     		movs	r3, #128
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 64


 256 012a DB05     		lsls	r3, r3, #23
 257 012c 40F20012 		movw	r2, #256
 258 0130 5921     		movs	r1, #89
 259 0132 9950     		str	r1, [r3, r2]
1528:src/sys.h     ****         SYS->REGLCTL = 0x16;
 260              		.loc 2 1528 0 discriminator 1
 261 0134 8023     		movs	r3, #128
 262 0136 DB05     		lsls	r3, r3, #23
 263 0138 40F20012 		movw	r2, #256
 264 013c 1621     		movs	r1, #22
 265 013e 9950     		str	r1, [r3, r2]
1529:src/sys.h     ****         SYS->REGLCTL = 0x88;
 266              		.loc 2 1529 0 discriminator 1
 267 0140 8023     		movs	r3, #128
 268 0142 DB05     		lsls	r3, r3, #23
 269 0144 40F20012 		movw	r2, #256
 270 0148 8821     		movs	r1, #136
 271 014a 9950     		str	r1, [r3, r2]
1530:src/sys.h     ****     }
1531:src/sys.h     ****     while(SYS->REGLCTL == 0);
 272              		.loc 2 1531 0 discriminator 1
 273 014c 8023     		movs	r3, #128
 274 014e DB05     		lsls	r3, r3, #23
 275 0150 40F20012 		movw	r2, #256
 276 0154 9B58     		ldr	r3, [r3, r2]
 277 0156 002B     		cmp	r3, #0
 278 0158 E6D0     		beq	.L13
1532:src/sys.h     **** }
 279              		.loc 2 1532 0
 280 015a C046     		nop
 281 015c BD46     		mov	sp, r7
 282              		@ sp needed
 283 015e 80BD     		pop	{r7, pc}
 284              		.cfi_endproc
 285              	.LFE64:
 286              		.size	SYS_UnlockReg, .-SYS_UnlockReg
 287              		.global	pfNonSecure_LED_On
 288              		.bss
 289              		.align	2
 290              		.type	pfNonSecure_LED_On, %object
 291              		.size	pfNonSecure_LED_On, 4
 292              	pfNonSecure_LED_On:
 293 0000 00000000 		.space	4
 294              		.global	pfNonSecure_LED_Off
 295              		.align	2
 296              		.type	pfNonSecure_LED_Off, %object
 297              		.size	pfNonSecure_LED_Off, 4
 298              	pfNonSecure_LED_Off:
 299 0004 00000000 		.space	4
 300              		.section	.rodata
 301              		.align	2
 302              	.LC0:
 303 0000 53656375 		.ascii	"Secure LED ON call by secure\000"
 303      7265204C 
 303      4544204F 
 303      4E206361 
 303      6C6C2062 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 65


 304              		.text
 305              		.align	2
 306              		.global	Secure_LED_On
 307              		.global	__acle_se_Secure_LED_On
 308              		.code	16
 309              		.thumb_func
 310              		.type	__acle_se_Secure_LED_On, %function
 311              		.code	16
 312              		.thumb_func
 313              		.type	Secure_LED_On, %function
 314              	Secure_LED_On:
 315              	__acle_se_Secure_LED_On:
 316              	.LFB72:
 317              		.file 3 "src/main.c"
   1:src/main.c    **** /*----------------------------------------------------------------------------
   2:src/main.c    ****  * Name:    main_s.c
   3:src/main.c    ****  * Purpose: Main function secure mode
   4:src/main.c    ****  *----------------------------------------------------------------------------*/
   5:src/main.c    **** 
   6:src/main.c    **** #include <arm_cmse.h>
   7:src/main.c    **** #include <stdio.h>
   8:src/main.c    **** #include <stdlib.h>
   9:src/main.c    **** #include <string.h>
  10:src/main.c    **** #include "TC8234.h"                      /* Device header */
  11:src/main.c    **** #include "partition_TC8234.h"
  12:src/main.c    **** 
  13:src/main.c    **** /* typedef for NonSecure callback functions */
  14:src/main.c    **** typedef __attribute__((cmse_nonsecure_call)) int32_t (*NonSecure_funcptr)(uint32_t);
  15:src/main.c    **** 
  16:src/main.c    **** #define FMC_SECURE_BOUNDARY     0x40000UL
  17:src/main.c    **** #define NON_SECURE_BASE         (0x10000000ul+FMC_SECURE_BOUNDARY) /* Base Address of Non-secure Im
  18:src/main.c    **** #define SRAM_SECURE_BOUNDARY    0x10000UL
  19:src/main.c    **** #define NON_SECURE_SRAM_BASE    (0x30000000UL+SRAM_SECURE_BOUNDARY)/* Base Address of Non-secure SR
  20:src/main.c    **** 
  21:src/main.c    ****  
  22:src/main.c    **** /*----------------------------------------------------------------------------
  23:src/main.c    ****   NonSecure callback functions
  24:src/main.c    ****  *----------------------------------------------------------------------------*/
  25:src/main.c    **** extern NonSecure_funcptr pfNonSecure_LED_On;
  26:src/main.c    **** NonSecure_funcptr pfNonSecure_LED_On  = (NonSecure_funcptr)NULL;
  27:src/main.c    **** extern NonSecure_funcptr pfNonSecure_LED_Off;
  28:src/main.c    **** NonSecure_funcptr pfNonSecure_LED_Off = (NonSecure_funcptr)NULL;
  29:src/main.c    **** 
  30:src/main.c    **** /*----------------------------------------------------------------------------
  31:src/main.c    ****   Secure functions exported to NonSecure application
  32:src/main.c    ****   Must place in Non-secure Callable
  33:src/main.c    ****  *----------------------------------------------------------------------------*/
  34:src/main.c    **** __attribute__((cmse_nonsecure_entry))
  35:src/main.c    **** int32_t Secure_LED_On(uint32_t num)
  36:src/main.c    **** {
 318              		.loc 3 36 0
 319              		.cfi_startproc
 320              		@ Non-secure entry function: called from non-secure code.
 321              		@ args = 0, pretend = 0, frame = 8
 322              		@ frame_needed = 1, uses_anonymous_args = 0
 323 0160 80B5     		push	{r7, lr}
 324              	.LCFI8:
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 66


 325              		.cfi_def_cfa_offset 8
 326              		.cfi_offset 7, -8
 327              		.cfi_offset 14, -4
 328 0162 82B0     		sub	sp, sp, #8
 329              	.LCFI9:
 330              		.cfi_def_cfa_offset 16
 331 0164 00AF     		add	r7, sp, #0
 332              	.LCFI10:
 333              		.cfi_def_cfa_register 7
 334 0166 7860     		str	r0, [r7, #4]
  37:src/main.c    ****     printf("Secure LED ON call by secure\n");
 335              		.loc 3 37 0
 336 0168 094B     		ldr	r3, .L16
 337 016a 1800     		movs	r0, r3
 338 016c FFF7FEFF 		bl	puts
  38:src/main.c    **** 
  39:src/main.c    ****     return num * 3;
 339              		.loc 3 39 0
 340 0170 7A68     		ldr	r2, [r7, #4]
 341 0172 1300     		movs	r3, r2
 342 0174 5B00     		lsls	r3, r3, #1
 343 0176 9B18     		adds	r3, r3, r2
  40:src/main.c    **** }
 344              		.loc 3 40 0
 345 0178 1800     		movs	r0, r3
 346 017a BD46     		mov	sp, r7
 347 017c 02B0     		add	sp, sp, #8
 348              		@ sp needed
 349 017e 7146     		mov	r1, lr
 350 0180 7246     		mov	r2, lr
 351 0182 7346     		mov	r3, lr
 352 0184 F446     		mov	ip, lr
 353 0186 80BC     		pop	{r7}
 354 0188 02BC     		pop	{r1}
 355 018a 81F30088 		msr	APSR_nzcvq, r1
 356 018e 0C47     		bxns	r1
 357              	.L17:
 358              		.align	2
 359              	.L16:
 360 0190 00000000 		.word	.LC0
 361              		.cfi_endproc
 362              	.LFE72:
 363              		.size	Secure_LED_On, .-Secure_LED_On
 364              		.section	.rodata
 365 001d 000000   		.align	2
 366              	.LC2:
 367 0020 53656375 		.ascii	"Secure LED OFF call by secure\000"
 367      7265204C 
 367      4544204F 
 367      46462063 
 367      616C6C20 
 368              		.text
 369              		.align	2
 370              		.global	Secure_LED_Off
 371              		.global	__acle_se_Secure_LED_Off
 372              		.code	16
 373              		.thumb_func
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 67


 374              		.type	__acle_se_Secure_LED_Off, %function
 375              		.code	16
 376              		.thumb_func
 377              		.type	Secure_LED_Off, %function
 378              	Secure_LED_Off:
 379              	__acle_se_Secure_LED_Off:
 380              	.LFB73:
  41:src/main.c    **** 
  42:src/main.c    **** __attribute__((cmse_nonsecure_entry))
  43:src/main.c    **** int32_t Secure_LED_Off(uint32_t num)
  44:src/main.c    **** {
 381              		.loc 3 44 0
 382              		.cfi_startproc
 383              		@ Non-secure entry function: called from non-secure code.
 384              		@ args = 0, pretend = 0, frame = 8
 385              		@ frame_needed = 1, uses_anonymous_args = 0
 386 0194 80B5     		push	{r7, lr}
 387              	.LCFI11:
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 7, -8
 390              		.cfi_offset 14, -4
 391 0196 82B0     		sub	sp, sp, #8
 392              	.LCFI12:
 393              		.cfi_def_cfa_offset 16
 394 0198 00AF     		add	r7, sp, #0
 395              	.LCFI13:
 396              		.cfi_def_cfa_register 7
 397 019a 7860     		str	r0, [r7, #4]
  45:src/main.c    ****     printf("Secure LED OFF call by secure\n");
 398              		.loc 3 45 0
 399 019c 094B     		ldr	r3, .L20
 400 019e 1800     		movs	r0, r3
 401 01a0 FFF7FEFF 		bl	puts
  46:src/main.c    ****     return num * 7;
 402              		.loc 3 46 0
 403 01a4 7A68     		ldr	r2, [r7, #4]
 404 01a6 1300     		movs	r3, r2
 405 01a8 DB00     		lsls	r3, r3, #3
 406 01aa 9B1A     		subs	r3, r3, r2
  47:src/main.c    **** }
 407              		.loc 3 47 0
 408 01ac 1800     		movs	r0, r3
 409 01ae BD46     		mov	sp, r7
 410 01b0 02B0     		add	sp, sp, #8
 411              		@ sp needed
 412 01b2 7146     		mov	r1, lr
 413 01b4 7246     		mov	r2, lr
 414 01b6 7346     		mov	r3, lr
 415 01b8 F446     		mov	ip, lr
 416 01ba 80BC     		pop	{r7}
 417 01bc 02BC     		pop	{r1}
 418 01be 81F30088 		msr	APSR_nzcvq, r1
 419 01c2 0C47     		bxns	r1
 420              	.L21:
 421              		.align	2
 422              	.L20:
 423 01c4 20000000 		.word	.LC2
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 68


 424              		.cfi_endproc
 425              	.LFE73:
 426              		.size	Secure_LED_Off, .-Secure_LED_Off
 427              		.align	2
 428              		.global	Secure_LED_On_callback
 429              		.global	__acle_se_Secure_LED_On_callback
 430              		.code	16
 431              		.thumb_func
 432              		.type	__acle_se_Secure_LED_On_callback, %function
 433              		.code	16
 434              		.thumb_func
 435              		.type	Secure_LED_On_callback, %function
 436              	Secure_LED_On_callback:
 437              	__acle_se_Secure_LED_On_callback:
 438              	.LFB74:
  48:src/main.c    **** 
  49:src/main.c    **** 
  50:src/main.c    **** /*----------------------------------------------------------------------------
  51:src/main.c    ****   Secure function for NonSecure callbacks exported to NonSecure application
  52:src/main.c    ****   Must place in Non-secure Callable
  53:src/main.c    ****  *----------------------------------------------------------------------------*/
  54:src/main.c    **** __attribute__((cmse_nonsecure_entry))
  55:src/main.c    **** int32_t Secure_LED_On_callback(NonSecure_funcptr *callback)
  56:src/main.c    **** {
 439              		.loc 3 56 0
 440              		.cfi_startproc
 441              		@ Non-secure entry function: called from non-secure code.
 442              		@ args = 0, pretend = 0, frame = 8
 443              		@ frame_needed = 1, uses_anonymous_args = 0
 444 01c8 80B5     		push	{r7, lr}
 445              	.LCFI14:
 446              		.cfi_def_cfa_offset 8
 447              		.cfi_offset 7, -8
 448              		.cfi_offset 14, -4
 449 01ca 82B0     		sub	sp, sp, #8
 450              	.LCFI15:
 451              		.cfi_def_cfa_offset 16
 452 01cc 00AF     		add	r7, sp, #0
 453              	.LCFI16:
 454              		.cfi_def_cfa_register 7
 455 01ce 7860     		str	r0, [r7, #4]
  57:src/main.c    ****     pfNonSecure_LED_On = (NonSecure_funcptr)cmse_nsfptr_create(callback);
 456              		.loc 3 57 0
 457 01d0 7B68     		ldr	r3, [r7, #4]
 458 01d2 0122     		movs	r2, #1
 459 01d4 9343     		bics	r3, r2
 460 01d6 1A00     		movs	r2, r3
 461 01d8 074B     		ldr	r3, .L24
 462 01da 1A60     		str	r2, [r3]
  58:src/main.c    ****     return 0;
 463              		.loc 3 58 0
 464 01dc 0023     		movs	r3, #0
  59:src/main.c    **** }
 465              		.loc 3 59 0
 466 01de 1800     		movs	r0, r3
 467 01e0 BD46     		mov	sp, r7
 468 01e2 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 69


 469              		@ sp needed
 470 01e4 7146     		mov	r1, lr
 471 01e6 7246     		mov	r2, lr
 472 01e8 7346     		mov	r3, lr
 473 01ea F446     		mov	ip, lr
 474 01ec 80BC     		pop	{r7}
 475 01ee 02BC     		pop	{r1}
 476 01f0 81F30088 		msr	APSR_nzcvq, r1
 477 01f4 0C47     		bxns	r1
 478              	.L25:
 479 01f6 C046     		.align	2
 480              	.L24:
 481 01f8 00000000 		.word	pfNonSecure_LED_On
 482              		.cfi_endproc
 483              	.LFE74:
 484              		.size	Secure_LED_On_callback, .-Secure_LED_On_callback
 485              		.align	2
 486              		.global	Secure_LED_Off_callback
 487              		.global	__acle_se_Secure_LED_Off_callback
 488              		.code	16
 489              		.thumb_func
 490              		.type	__acle_se_Secure_LED_Off_callback, %function
 491              		.code	16
 492              		.thumb_func
 493              		.type	Secure_LED_Off_callback, %function
 494              	Secure_LED_Off_callback:
 495              	__acle_se_Secure_LED_Off_callback:
 496              	.LFB75:
  60:src/main.c    **** 
  61:src/main.c    **** __attribute__((cmse_nonsecure_entry))
  62:src/main.c    **** int32_t Secure_LED_Off_callback(NonSecure_funcptr *callback)
  63:src/main.c    **** {
 497              		.loc 3 63 0
 498              		.cfi_startproc
 499              		@ Non-secure entry function: called from non-secure code.
 500              		@ args = 0, pretend = 0, frame = 8
 501              		@ frame_needed = 1, uses_anonymous_args = 0
 502 01fc 80B5     		push	{r7, lr}
 503              	.LCFI17:
 504              		.cfi_def_cfa_offset 8
 505              		.cfi_offset 7, -8
 506              		.cfi_offset 14, -4
 507 01fe 82B0     		sub	sp, sp, #8
 508              	.LCFI18:
 509              		.cfi_def_cfa_offset 16
 510 0200 00AF     		add	r7, sp, #0
 511              	.LCFI19:
 512              		.cfi_def_cfa_register 7
 513 0202 7860     		str	r0, [r7, #4]
  64:src/main.c    ****     pfNonSecure_LED_Off = (NonSecure_funcptr)cmse_nsfptr_create(callback);
 514              		.loc 3 64 0
 515 0204 7B68     		ldr	r3, [r7, #4]
 516 0206 0122     		movs	r2, #1
 517 0208 9343     		bics	r3, r2
 518 020a 1A00     		movs	r2, r3
 519 020c 074B     		ldr	r3, .L28
 520 020e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 70


  65:src/main.c    ****     return 0;
 521              		.loc 3 65 0
 522 0210 0023     		movs	r3, #0
  66:src/main.c    **** }
 523              		.loc 3 66 0
 524 0212 1800     		movs	r0, r3
 525 0214 BD46     		mov	sp, r7
 526 0216 02B0     		add	sp, sp, #8
 527              		@ sp needed
 528 0218 7146     		mov	r1, lr
 529 021a 7246     		mov	r2, lr
 530 021c 7346     		mov	r3, lr
 531 021e F446     		mov	ip, lr
 532 0220 80BC     		pop	{r7}
 533 0222 02BC     		pop	{r1}
 534 0224 81F30088 		msr	APSR_nzcvq, r1
 535 0228 0C47     		bxns	r1
 536              	.L29:
 537 022a C046     		.align	2
 538              	.L28:
 539 022c 00000000 		.word	pfNonSecure_LED_Off
 540              		.cfi_endproc
 541              	.LFE75:
 542              		.size	Secure_LED_Off_callback, .-Secure_LED_Off_callback
 543              		.align	2
 544              		.global	GetSystemCoreClock
 545              		.global	__acle_se_GetSystemCoreClock
 546              		.code	16
 547              		.thumb_func
 548              		.type	__acle_se_GetSystemCoreClock, %function
 549              		.code	16
 550              		.thumb_func
 551              		.type	GetSystemCoreClock, %function
 552              	GetSystemCoreClock:
 553              	__acle_se_GetSystemCoreClock:
 554              	.LFB76:
  67:src/main.c    **** 
  68:src/main.c    **** __attribute__((cmse_nonsecure_entry))
  69:src/main.c    **** uint32_t GetSystemCoreClock(void)
  70:src/main.c    **** {
 555              		.loc 3 70 0
 556              		.cfi_startproc
 557              		@ Non-secure entry function: called from non-secure code.
 558              		@ args = 0, pretend = 0, frame = 0
 559              		@ frame_needed = 1, uses_anonymous_args = 0
 560 0230 80B5     		push	{r7, lr}
 561              	.LCFI20:
 562              		.cfi_def_cfa_offset 8
 563              		.cfi_offset 7, -8
 564              		.cfi_offset 14, -4
 565 0232 00AF     		add	r7, sp, #0
 566              	.LCFI21:
 567              		.cfi_def_cfa_register 7
  71:src/main.c    ****     return 5566; //SystemCoreClock;
 568              		.loc 3 71 0
 569 0234 41F2BE53 		movw	r3, #5566
  72:src/main.c    **** }
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 71


 570              		.loc 3 72 0
 571 0238 1800     		movs	r0, r3
 572 023a BD46     		mov	sp, r7
 573              		@ sp needed
 574 023c 7146     		mov	r1, lr
 575 023e 7246     		mov	r2, lr
 576 0240 7346     		mov	r3, lr
 577 0242 F446     		mov	ip, lr
 578 0244 80BC     		pop	{r7}
 579 0246 02BC     		pop	{r1}
 580 0248 81F30088 		msr	APSR_nzcvq, r1
 581 024c 0C47     		bxns	r1
 582              		.cfi_endproc
 583              	.LFE76:
 584              		.size	GetSystemCoreClock, .-GetSystemCoreClock
 585 024e C046     		.align	2
 586              		.global	SysTick_Handler
 587              		.code	16
 588              		.thumb_func
 589              		.type	SysTick_Handler, %function
 590              	SysTick_Handler:
 591              	.LFB77:
  73:src/main.c    **** 
  74:src/main.c    **** 
  75:src/main.c    **** 
  76:src/main.c    **** /*----------------------------------------------------------------------------
  77:src/main.c    ****   SysTick IRQ Handler
  78:src/main.c    ****  *----------------------------------------------------------------------------*/
  79:src/main.c    **** void SysTick_Handler(void)
  80:src/main.c    **** {
 592              		.loc 3 80 0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 1, uses_anonymous_args = 0
 596 0250 B0B5     		push	{r4, r5, r7, lr}
 597              	.LCFI22:
 598              		.cfi_def_cfa_offset 16
 599              		.cfi_offset 4, -16
 600              		.cfi_offset 5, -12
 601              		.cfi_offset 7, -8
 602              		.cfi_offset 14, -4
 603 0252 00AF     		add	r7, sp, #0
 604              	.LCFI23:
 605              		.cfi_def_cfa_register 7
  81:src/main.c    ****     static uint32_t ticks;
  82:src/main.c    **** 
  83:src/main.c    ****     switch(ticks++)
 606              		.loc 3 83 0
 607 0254 284B     		ldr	r3, .L48
 608 0256 1B68     		ldr	r3, [r3]
 609 0258 591C     		adds	r1, r3, #1
 610 025a 274A     		ldr	r2, .L48
 611 025c 1160     		str	r1, [r2]
 612 025e 40F22C12 		movw	r2, #300
 613 0262 9342     		cmp	r3, r2
 614 0264 11D0     		beq	.L34
 615 0266 40F22C12 		movw	r2, #300
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 72


 616 026a 9342     		cmp	r3, r2
 617 026c 04D8     		bhi	.L35
 618 026e 002B     		cmp	r3, #0
 619 0270 37D0     		beq	.L43
 620 0272 C82B     		cmp	r3, #200
 621 0274 37D0     		beq	.L44
 622 0276 2AE0     		b	.L33
 623              	.L35:
 624 0278 40F2F412 		movw	r2, #500
 625 027c 9342     		cmp	r3, r2
 626 027e 13D0     		beq	.L38
 627 0280 40F25822 		movw	r2, #600
 628 0284 9342     		cmp	r3, r2
 629 0286 1ED0     		beq	.L39
 630 0288 21E0     		b	.L33
 631              	.L34:
  84:src/main.c    ****     {
  85:src/main.c    ****         case   0:
  86:src/main.c    ****             //LED_On (0u);
  87:src/main.c    ****             //printf("Secure LED On in secure systick\n");
  88:src/main.c    ****             break;
  89:src/main.c    ****         case 200:
  90:src/main.c    ****             //LED_Off(0u);
  91:src/main.c    ****             //printf("Secure LED Off in secure systick\n");
  92:src/main.c    ****             break;
  93:src/main.c    ****         case 300:
  94:src/main.c    ****             if(pfNonSecure_LED_On != NULL)
 632              		.loc 3 94 0
 633 028a 1C4B     		ldr	r3, .L48+4
 634 028c 1B68     		ldr	r3, [r3]
 635 028e 63B3     		cbz	r3, .L45
  95:src/main.c    ****             {
  96:src/main.c    ****                 pfNonSecure_LED_On(1u);
 636              		.loc 3 96 0
 637 0290 1A4B     		ldr	r3, .L48+4
 638 0292 1B68     		ldr	r3, [r3]
 639 0294 0120     		movs	r0, #1
 640 0296 1C00     		movs	r4, r3
 641 0298 6408     		lsrs	r4, r4, #1
 642 029a 6400     		lsls	r4, r4, #1
 643 029c 2100     		movs	r1, r4
 644 029e 2200     		movs	r2, r4
 645 02a0 2300     		movs	r3, r4
 646 02a2 FFF7FEFF 		bl	__gnu_cmse_nonsecure_call
  97:src/main.c    ****             }
  98:src/main.c    ****             break;
 647              		.loc 3 98 0
 648 02a6 20E0     		b	.L45
 649              	.L38:
  99:src/main.c    ****         case 500:
 100:src/main.c    ****             if(pfNonSecure_LED_Off != NULL)
 650              		.loc 3 100 0
 651 02a8 154B     		ldr	r3, .L48+8
 652 02aa 1B68     		ldr	r3, [r3]
 653 02ac FBB1     		cbz	r3, .L46
 101:src/main.c    ****             {
 102:src/main.c    ****                 pfNonSecure_LED_Off(1u);
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 73


 654              		.loc 3 102 0
 655 02ae 144B     		ldr	r3, .L48+8
 656 02b0 1B68     		ldr	r3, [r3]
 657 02b2 0120     		movs	r0, #1
 658 02b4 1C00     		movs	r4, r3
 659 02b6 6408     		lsrs	r4, r4, #1
 660 02b8 6400     		lsls	r4, r4, #1
 661 02ba 2100     		movs	r1, r4
 662 02bc 2200     		movs	r2, r4
 663 02be 2300     		movs	r3, r4
 664 02c0 FFF7FEFF 		bl	__gnu_cmse_nonsecure_call
 103:src/main.c    ****             }
 104:src/main.c    ****             break;
 665              		.loc 3 104 0
 666 02c4 13E0     		b	.L46
 667              	.L39:
 105:src/main.c    ****         case 600:
 106:src/main.c    ****             ticks = 0;
 668              		.loc 3 106 0
 669 02c6 0C4B     		ldr	r3, .L48
 670 02c8 0022     		movs	r2, #0
 671 02ca 1A60     		str	r2, [r3]
 107:src/main.c    ****             break;
 672              		.loc 3 107 0
 673 02cc 10E0     		b	.L40
 674              	.L33:
 108:src/main.c    **** 
 109:src/main.c    ****         default:
 110:src/main.c    ****             if(ticks > 600)
 675              		.loc 3 110 0
 676 02ce 0A4B     		ldr	r3, .L48
 677 02d0 1B68     		ldr	r3, [r3]
 678 02d2 40F25822 		movw	r2, #600
 679 02d6 9342     		cmp	r3, r2
 680 02d8 0AD9     		bls	.L47
 111:src/main.c    ****             {
 112:src/main.c    ****                 ticks = 0;
 681              		.loc 3 112 0
 682 02da 074B     		ldr	r3, .L48
 683 02dc 0022     		movs	r2, #0
 684 02de 1A60     		str	r2, [r3]
 113:src/main.c    ****             }
 114:src/main.c    ****     }
 115:src/main.c    **** }
 685              		.loc 3 115 0
 686 02e0 06E0     		b	.L47
 687              	.L43:
  88:src/main.c    ****         case 200:
 688              		.loc 3 88 0
 689 02e2 C046     		nop
 690 02e4 04E0     		b	.L47
 691              	.L44:
  92:src/main.c    ****         case 300:
 692              		.loc 3 92 0
 693 02e6 C046     		nop
 694 02e8 02E0     		b	.L47
 695              	.L45:
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 74


  98:src/main.c    ****         case 500:
 696              		.loc 3 98 0
 697 02ea C046     		nop
 698 02ec 00E0     		b	.L47
 699              	.L46:
 104:src/main.c    ****         case 600:
 700              		.loc 3 104 0
 701 02ee C046     		nop
 702              	.L40:
 703              	.L47:
 704              		.loc 3 115 0
 705 02f0 C046     		nop
 706 02f2 BD46     		mov	sp, r7
 707              		@ sp needed
 708 02f4 B0BD     		pop	{r4, r5, r7, pc}
 709              	.L49:
 710 02f6 C046     		.align	2
 711              	.L48:
 712 02f8 08000000 		.word	ticks.7522
 713 02fc 00000000 		.word	pfNonSecure_LED_On
 714 0300 00000000 		.word	pfNonSecure_LED_Off
 715              		.cfi_endproc
 716              	.LFE77:
 717              		.size	SysTick_Handler, .-SysTick_Handler
 718              		.comm	tests1,50,4
 719              		.global	tests2
 720              		.data
 721              		.align	2
 722              		.type	tests2, %object
 723              		.size	tests2, 20
 724              	tests2:
 725 0000 62626C61 		.ascii	"bblala\000"
 725      6C6100
 726 0007 00000000 		.space	13
 726      00000000 
 726      00000000 
 726      00
 727              		.global	tests3
 728              		.align	2
 729              		.type	tests3, %object
 730              		.size	tests3, 20
 731              	tests3:
 732 0014 63636861 		.ascii	"cchaha\000"
 732      686100
 733 001b 00000000 		.space	13
 733      00000000 
 733      00000000 
 733      00
 734              		.section	.rodata
 735 003e 0000     		.align	2
 736              		.type	atest, %object
 737              		.size	atest, 4
 738              	atest:
 739 0040 9F0F0000 		.word	3999
 740              		.align	2
 741              	.LC9:
 742 0044 31202564 		.ascii	"1 %d\012\000"
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 75


 742      0A00
 743 004a 0000     		.align	2
 744              	.LC12:
 745 004c 32202578 		.ascii	"2 %x\012\000"
 745      0A00
 746 0052 0000     		.align	2
 747              	.LC14:
 748 0054 464E5341 		.ascii	"FNSADDR = 0x%08x\012\000"
 748      44445220 
 748      3D203078 
 748      25303878 
 748      0A00
 749 0066 0000     		.align	2
 750              	.LC16:
 751 0068 53656375 		.ascii	"Secure Region Code Stack: MSP(0x%08x) PSP(0x%08x)\012"
 751      72652052 
 751      6567696F 
 751      6E20436F 
 751      64652053 
 752 009a 00       		.ascii	"\000"
 753 009b 00       		.align	2
 754              	.LC18:
 755 009c 4E6F6E2D 		.ascii	"Non-secure Region Code Stack: MSP(0x%08x) PSP(0x%08"
 755      73656375 
 755      72652052 
 755      6567696F 
 755      6E20436F 
 756 00cf 78290A00 		.ascii	"x)\012\000"
 757              		.text
 758              		.align	2
 759              		.global	main
 760              		.code	16
 761              		.thumb_func
 762              		.type	main, %function
 763              	main:
 764              	.LFB78:
 116:src/main.c    **** 
 117:src/main.c    **** extern void SecureAttrib(void);
 118:src/main.c    **** 
 119:src/main.c    **** void SYS_Init(void);
 120:src/main.c    **** void UART0_Init(void);
 121:src/main.c    **** void Nonsecure_Init(void);
 122:src/main.c    **** 
 123:src/main.c    **** /*----------------------------------------------------------------------------
 124:src/main.c    ****   Main function
 125:src/main.c    ****  *----------------------------------------------------------------------------
 126:src/main.c    ****   
 127:src/main.c    **** Secure Region Config of the Template:
 128:src/main.c    ****   [0x00000000:0x00003FFF] Secure. APROM for Secure. (16KB)
 129:src/main.c    ****   [0x00004000:0x0003FFFF] Secure Nonsecure Callable. APROM for secure & API (240KB)
 130:src/main.c    ****   [0x00800000:0x00807BFF] Secure. MKROM (31KB)
 131:src/main.c    ****   [0x00807C00:0x00807FFF] Secure Nonsecure Callable. API table of MKROM (1KB)
 132:src/main.c    ****   [0x10040000:0x1007FFFF] Nonsecure. APROM for Nonsecure (256KB)
 133:src/main.c    ****   [0x20000000:0x2000FBFF] Secure. SRAM (63KB)
 134:src/main.c    ****   [0x2000FC00:0x2000FFFF] Secure Nonesecure Callable. SRAM for NSC API (1KB)
 135:src/main.c    ****   [0x30010000:0x3001FFFF] Nonsecure. SRAM for Nonsecure.
 136:src/main.c    ****   [0x40000000:0x00000000] Secure. For Secure IP.
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 76


 137:src/main.c    ****   [0x50000000:0x00000000] Nonsecure. For Nonsecure IP.
 138:src/main.c    **** 
 139:src/main.c    **** FMC.NSCBOND must be 0x40000 (256KB). The code will set it to 0x40000.
 140:src/main.c    **** (NOTE: It don't do erase, thus the setting may fail if NSCBOND!=0xffffffff)
 141:src/main.c    **** 
 142:src/main.c    **** SRAM secure setting in SCU must be 64KB secure/64KB nonsecure
 143:src/main.c    **** 
 144:src/main.c    **** All secure settings is located in partition_TC8234.h, except FMC.NSCBOND.
 145:src/main.c    **** 
 146:src/main.c    **** 
 147:src/main.c    **** 
 148:src/main.c    **** SecureAttrib() could be used to show all region settings of SAU and IDAU.
 149:src/main.c    **** 
 150:src/main.c    **** The secure code will call nonsecure code by callback function.
 151:src/main.c    **** The secure code will keep secure systick timer interrupt, even the nonsecure code is running.
 152:src/main.c    **** The Secure Nonsecure Callable API will be located at SRAM 0x2000FC00 by scatter loading file.
 153:src/main.c    **** The secure code will execute nonsecure code.
 154:src/main.c    **** The nonsecure code will do a while loop and show messages.
 155:src/main.c    **** The nonsecure code will call secure funcitons by NSC at SRAM.
 156:src/main.c    **** 
 157:src/main.c    **** UART0 is configured as Nonsecure for debug message in both secure and nonsecure.
 158:src/main.c    **** 
 159:src/main.c    **** The flash download algorithm of keil for secure is "TC8234 8M Flash"
 160:src/main.c    **** The flash download algorithm of keil for nonsecure is "TC8234_NS 8M Flash"
 161:src/main.c    **** 
 162:src/main.c    **** Build & Debug flow:
 163:src/main.c    ****  1. Build secure project
 164:src/main.c    ****  2. Build nonsecure project
 165:src/main.c    ****  3. Download nonsecure code
 166:src/main.c    ****  4. Do debug with ICE in secure project. Both secure & nonsecure code can be debug. 
 167:src/main.c    **** 
 168:src/main.c    **** 
 169:src/main.c    **** 
 170:src/main.c    **** *----------------------------------------------------------------------------*/
 171:src/main.c    **** 		char tests1[50], tests2[20]="bblala", tests3[20]="cchaha";
 172:src/main.c    **** static const int atest=3999 ;
 173:src/main.c    **** 
 174:src/main.c    **** int main(void)
 175:src/main.c    **** {
 765              		.loc 3 175 0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 40
 768              		@ frame_needed = 1, uses_anonymous_args = 0
 769 0304 90B5     		push	{r4, r7, lr}
 770              	.LCFI24:
 771              		.cfi_def_cfa_offset 12
 772              		.cfi_offset 4, -12
 773              		.cfi_offset 7, -8
 774              		.cfi_offset 14, -4
 775 0306 8BB0     		sub	sp, sp, #44
 776              	.LCFI25:
 777              		.cfi_def_cfa_offset 56
 778 0308 00AF     		add	r7, sp, #0
 779              	.LCFI26:
 780              		.cfi_def_cfa_register 7
 176:src/main.c    ****     uint32_t u32MSP_s, u32PSP_s;
 177:src/main.c    ****     uint32_t u32MSP_ns, u32PSP_ns;
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 77


 178:src/main.c    ****     volatile uint32_t NonSecure_ResetHandler;
 179:src/main.c    ****     NonSecure_funcptr fp;
 180:src/main.c    **** 
 181:src/main.c    **** 	
 182:src/main.c    **** 		//int testnum, test2;
 183:src/main.c    **** 	
 184:src/main.c    ****     SYS_UnlockReg();
 781              		.loc 3 184 0
 782 030a FFF70BFF 		bl	SYS_UnlockReg
 185:src/main.c    ****     SYS_Init();
 783              		.loc 3 185 0
 784 030e FFF7FEFF 		bl	SYS_Init
 186:src/main.c    **** 
 187:src/main.c    ****     /* UART0 is configured as Nonsecure for debug in both secure and nonsecure region */
 188:src/main.c    ****     UART0_Init();
 785              		.loc 3 188 0
 786 0312 FFF7FEFF 		bl	UART0_Init
 189:src/main.c    **** 
 190:src/main.c    **** 		printf("1 %d\n", atest);
 787              		.loc 3 190 0
 788 0316 40F69F72 		movw	r2, #3999
 789 031a 294B     		ldr	r3, .L58
 790 031c 1100     		movs	r1, r2
 791 031e 1800     		movs	r0, r3
 792 0320 FFF7FEFF 		bl	printf
 191:src/main.c    **** 		printf("2 %x\n", tests2);
 793              		.loc 3 191 0
 794 0324 274A     		ldr	r2, .L58+4
 795 0326 284B     		ldr	r3, .L58+8
 796 0328 1100     		movs	r1, r2
 797 032a 1800     		movs	r0, r3
 798 032c FFF7FEFF 		bl	printf
 192:src/main.c    **** //		printf("3 %x\n", tests3);
 193:src/main.c    **** //	
 194:src/main.c    **** //    strcpy (tests1, "abc:def:ghi:jkl:haha");
 195:src/main.c    **** //    strcpy (tests2,  strtok(tests1, ":"));
 196:src/main.c    **** //    strcpy (tests2,  strtok(NULL, ":"));
 197:src/main.c    **** //    strcpy (tests2,  strtok(NULL, ":"));
 198:src/main.c    **** //    strcpy (tests2,  strtok(NULL, ":"));
 199:src/main.c    **** //		strcpy (tests1, "abc:def:ghi:jkl:haha");
 200:src/main.c    **** //    strcpy (tests2,  "ghi");
 201:src/main.c    **** //    strcpy (tests3,  strstr(tests1, tests2));
 202:src/main.c    **** //    strcpy (tests3,  tests3);
 203:src/main.c    ****     
 204:src/main.c    ****     //scanf("%s %d %x", teststring, &testnum, &test2);
 205:src/main.c    ****     //printf("%s, %d, %d\n", teststring, testnum, test2);
 206:src/main.c    ****     /* The setting of FNSADDR must be the same as SAU setting. If it is different to SAU,
 207:src/main.c    ****        We need to set FMC NSCBOND configuration */
 208:src/main.c    ****     printf("FNSADDR = 0x%08x\n", SCU->FNSADDR);
 799              		.loc 3 208 0
 800 0330 264B     		ldr	r3, .L58+12
 801 0332 9A6A     		ldr	r2, [r3, #40]
 802 0334 264B     		ldr	r3, .L58+16
 803 0336 1100     		movs	r1, r2
 804 0338 1800     		movs	r0, r3
 805 033a FFF7FEFF 		bl	printf
 806              	.LBB18:
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 78


 807              	.LBB19:
 808              		.file 4 "src/cmsis_gcc.h"
   1:src/cmsis_gcc.h **** /**************************************************************************//**
   2:src/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:src/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:src/cmsis_gcc.h ****  * @version  V4.30
   5:src/cmsis_gcc.h ****  * @date     20. October 2015
   6:src/cmsis_gcc.h ****  ******************************************************************************/
   7:src/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:src/cmsis_gcc.h **** 
   9:src/cmsis_gcc.h ****    All rights reserved.
  10:src/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:src/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:src/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:src/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:src/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:src/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:src/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:src/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:src/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:src/cmsis_gcc.h ****      specific prior written permission.
  20:src/cmsis_gcc.h ****    *
  21:src/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:src/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:src/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:src/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:src/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:src/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:src/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:src/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:src/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:src/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:src/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:src/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:src/cmsis_gcc.h **** 
  34:src/cmsis_gcc.h **** 
  35:src/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:src/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:src/cmsis_gcc.h **** 
  38:src/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:src/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:src/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:src/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:src/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:src/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:src/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wmissing-field-initializers"
  45:src/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wmissing-braces"
  46:src/cmsis_gcc.h **** #endif
  47:src/cmsis_gcc.h **** 
  48:src/cmsis_gcc.h **** 
  49:src/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  50:src/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  51:src/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  52:src/cmsis_gcc.h ****   @{
  53:src/cmsis_gcc.h ****  */
  54:src/cmsis_gcc.h **** 
  55:src/cmsis_gcc.h **** /**
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 79


  56:src/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  57:src/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  58:src/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  59:src/cmsis_gcc.h ****  */
  60:src/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  61:src/cmsis_gcc.h **** {
  62:src/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  63:src/cmsis_gcc.h **** }
  64:src/cmsis_gcc.h **** 
  65:src/cmsis_gcc.h **** 
  66:src/cmsis_gcc.h **** /**
  67:src/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  68:src/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  69:src/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  70:src/cmsis_gcc.h ****  */
  71:src/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  72:src/cmsis_gcc.h **** {
  73:src/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  74:src/cmsis_gcc.h **** }
  75:src/cmsis_gcc.h **** 
  76:src/cmsis_gcc.h **** 
  77:src/cmsis_gcc.h **** /**
  78:src/cmsis_gcc.h ****   \brief   Get Control Register
  79:src/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  80:src/cmsis_gcc.h ****   \return               Control Register value
  81:src/cmsis_gcc.h ****  */
  82:src/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  83:src/cmsis_gcc.h **** {
  84:src/cmsis_gcc.h ****   uint32_t result;
  85:src/cmsis_gcc.h **** 
  86:src/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  87:src/cmsis_gcc.h ****   return(result);
  88:src/cmsis_gcc.h **** }
  89:src/cmsis_gcc.h **** 
  90:src/cmsis_gcc.h **** 
  91:src/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
  92:src/cmsis_gcc.h **** {
  93:src/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0\n" : : "r" (topOfMainStack) : "sp");
  94:src/cmsis_gcc.h **** }
  95:src/cmsis_gcc.h **** 
  96:src/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
  97:src/cmsis_gcc.h **** {
  98:src/cmsis_gcc.h ****   uint32_t result;
  99:src/cmsis_gcc.h **** 
 100:src/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns\n" : "=r" (result) );
 101:src/cmsis_gcc.h ****   return(result);
 102:src/cmsis_gcc.h **** }
 103:src/cmsis_gcc.h **** 
 104:src/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 105:src/cmsis_gcc.h **** {
 106:src/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0\n" : : "r" (topOfProcStack) : "sp");
 107:src/cmsis_gcc.h **** }
 108:src/cmsis_gcc.h **** 
 109:src/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 110:src/cmsis_gcc.h **** {
 111:src/cmsis_gcc.h ****   uint32_t result;
 112:src/cmsis_gcc.h **** 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 80


 113:src/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns\n" : "=r" (result) );
 114:src/cmsis_gcc.h ****   return(result);
 115:src/cmsis_gcc.h **** }
 116:src/cmsis_gcc.h **** 
 117:src/cmsis_gcc.h **** /**
 118:src/cmsis_gcc.h ****   \brief   Set Control Register
 119:src/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 120:src/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 121:src/cmsis_gcc.h ****  */
 122:src/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 123:src/cmsis_gcc.h **** {
 124:src/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 125:src/cmsis_gcc.h **** }
 126:src/cmsis_gcc.h **** 
 127:src/cmsis_gcc.h **** 
 128:src/cmsis_gcc.h **** /**
 129:src/cmsis_gcc.h ****   \brief   Get IPSR Register
 130:src/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 131:src/cmsis_gcc.h ****   \return               IPSR Register value
 132:src/cmsis_gcc.h ****  */
 133:src/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 134:src/cmsis_gcc.h **** {
 135:src/cmsis_gcc.h ****   uint32_t result;
 136:src/cmsis_gcc.h **** 
 137:src/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 138:src/cmsis_gcc.h ****   return(result);
 139:src/cmsis_gcc.h **** }
 140:src/cmsis_gcc.h **** 
 141:src/cmsis_gcc.h **** 
 142:src/cmsis_gcc.h **** /**
 143:src/cmsis_gcc.h ****   \brief   Get APSR Register
 144:src/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 145:src/cmsis_gcc.h ****   \return               APSR Register value
 146:src/cmsis_gcc.h ****  */
 147:src/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 148:src/cmsis_gcc.h **** {
 149:src/cmsis_gcc.h ****   uint32_t result;
 150:src/cmsis_gcc.h **** 
 151:src/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 152:src/cmsis_gcc.h ****   return(result);
 153:src/cmsis_gcc.h **** }
 154:src/cmsis_gcc.h **** 
 155:src/cmsis_gcc.h **** 
 156:src/cmsis_gcc.h **** /**
 157:src/cmsis_gcc.h ****   \brief   Get xPSR Register
 158:src/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 159:src/cmsis_gcc.h **** 
 160:src/cmsis_gcc.h ****     \return               xPSR Register value
 161:src/cmsis_gcc.h ****  */
 162:src/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 163:src/cmsis_gcc.h **** {
 164:src/cmsis_gcc.h ****   uint32_t result;
 165:src/cmsis_gcc.h **** 
 166:src/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 167:src/cmsis_gcc.h ****   return(result);
 168:src/cmsis_gcc.h **** }
 169:src/cmsis_gcc.h **** 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 81


 170:src/cmsis_gcc.h **** 
 171:src/cmsis_gcc.h **** /**
 172:src/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 173:src/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 174:src/cmsis_gcc.h ****   \return               PSP Register value
 175:src/cmsis_gcc.h ****  */
 176:src/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 177:src/cmsis_gcc.h **** {
 178:src/cmsis_gcc.h ****   register uint32_t result;
 179:src/cmsis_gcc.h **** 
 180:src/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 181:src/cmsis_gcc.h ****   return(result);
 182:src/cmsis_gcc.h **** }
 183:src/cmsis_gcc.h **** 
 184:src/cmsis_gcc.h **** 
 185:src/cmsis_gcc.h **** /**
 186:src/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 187:src/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 188:src/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 189:src/cmsis_gcc.h ****  */
 190:src/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 191:src/cmsis_gcc.h **** {
 192:src/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 193:src/cmsis_gcc.h **** }
 194:src/cmsis_gcc.h **** 
 195:src/cmsis_gcc.h **** 
 196:src/cmsis_gcc.h **** /**
 197:src/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 198:src/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 199:src/cmsis_gcc.h ****   \return               MSP Register value
 200:src/cmsis_gcc.h ****  */
 201:src/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 202:src/cmsis_gcc.h **** {
 203:src/cmsis_gcc.h ****   register uint32_t result;
 204:src/cmsis_gcc.h **** 
 205:src/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 809              		.loc 4 205 0
 810              		.syntax divided
 811              	@ 205 "src/cmsis_gcc.h" 1
 812 033e EFF30883 		MRS r3, msp
 813              	
 814              	@ 0 "" 2
 815              		.thumb
 816              		.syntax unified
 817 0342 1C00     		movs	r4, r3
 206:src/cmsis_gcc.h ****   return(result);
 818              		.loc 4 206 0
 819 0344 2300     		movs	r3, r4
 820              	.LBE19:
 821              	.LBE18:
 209:src/main.c    ****     /* Check the non-secure settting of FMC */
 210:src/main.c    **** #if 0
 211:src/main.c    ****     if(SCU->FNSADDR > FMC_SECURE_BOUNDARY)
 212:src/main.c    ****     {
 213:src/main.c    ****         //printf("Set NSCBOND to 0x40000\n");
 214:src/main.c    ****         FMC->ISPCTL = 0x7d;
 215:src/main.c    ****         FMC->ISPADDR = 0x200800; /* Non-secure boundary config */
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 82


 216:src/main.c    ****         FMC->ISPDAT = FMC_SECURE_BOUNDARY;
 217:src/main.c    ****         FMC->ISPCMD = 0x21; /* Word program */
 218:src/main.c    ****         FMC->ISPTRG = 1;   
 219:src/main.c    ****         while(FMC->ISPTRG);
 220:src/main.c    **** 
 221:src/main.c    ****         printf("Press any key to reboot ...\n");
 222:src/main.c    ****         getchar();
 223:src/main.c    ****         SYS->IPRST0 = 1;
 224:src/main.c    ****     }
 225:src/main.c    **** #endif
 226:src/main.c    **** 
 227:src/main.c    **** #if 0 /* Scan all SAU & IDAU region and read/write attribution by TT instruction. */
 228:src/main.c    ****     SecureAttrib();
 229:src/main.c    ****     while(1);
 230:src/main.c    **** #endif
 231:src/main.c    **** 
 232:src/main.c    ****     /* exercise some core register from Secure Mode */
 233:src/main.c    ****     u32MSP_s = __get_MSP();
 822              		.loc 3 233 0
 823 0346 7B62     		str	r3, [r7, #36]
 824              	.LBB20:
 825              	.LBB21:
 180:src/cmsis_gcc.h ****   return(result);
 826              		.loc 4 180 0
 827              		.syntax divided
 828              	@ 180 "src/cmsis_gcc.h" 1
 829 0348 EFF30983 		MRS r3, psp
 830              	
 831              	@ 0 "" 2
 832              		.thumb
 833              		.syntax unified
 834 034c 1C00     		movs	r4, r3
 181:src/cmsis_gcc.h **** }
 835              		.loc 4 181 0
 836 034e 2300     		movs	r3, r4
 837              	.LBE21:
 838              	.LBE20:
 234:src/main.c    ****     u32PSP_s = __get_PSP();
 839              		.loc 3 234 0
 840 0350 3B62     		str	r3, [r7, #32]
 235:src/main.c    **** 
 236:src/main.c    ****     printf("Secure Region Code Stack: MSP(0x%08x) PSP(0x%08x)\n", u32MSP_s, u32PSP_s);
 841              		.loc 3 236 0
 842 0352 3A6A     		ldr	r2, [r7, #32]
 843 0354 796A     		ldr	r1, [r7, #36]
 844 0356 1F4B     		ldr	r3, .L58+20
 845 0358 1800     		movs	r0, r3
 846 035a FFF7FEFF 		bl	printf
 237:src/main.c    **** 
 238:src/main.c    ****     /* Get the stack of Non-secure region */
 239:src/main.c    ****     __TZ_set_MSP_NS(M32(NON_SECURE_SRAM_BASE));
 847              		.loc 3 239 0
 848 035e 1E4B     		ldr	r3, .L58+24
 849 0360 1B68     		ldr	r3, [r3]
 850 0362 FB61     		str	r3, [r7, #28]
 851              	.LBB22:
 852              	.LBB23:
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 83


  93:src/cmsis_gcc.h **** }
 853              		.loc 4 93 0
 854 0364 FB69     		ldr	r3, [r7, #28]
 855              		.syntax divided
 856              	@ 93 "src/cmsis_gcc.h" 1
 857 0366 83F38888 		MSR msp_ns, r3
 858              	
 859              	@ 0 "" 2
 860              		.thumb
 861              		.syntax unified
 862              	.LBE23:
 863              	.LBE22:
 864              	.LBB24:
 865              	.LBB25:
 100:src/cmsis_gcc.h ****   return(result);
 866              		.loc 4 100 0
 867              		.syntax divided
 868              	@ 100 "src/cmsis_gcc.h" 1
 869 036a EFF38883 		MRS r3, msp_ns
 870              	
 871              	@ 0 "" 2
 872              		.thumb
 873              		.syntax unified
 874 036e 7B61     		str	r3, [r7, #20]
 101:src/cmsis_gcc.h **** }
 875              		.loc 4 101 0
 876 0370 7B69     		ldr	r3, [r7, #20]
 877              	.LBE25:
 878              	.LBE24:
 240:src/main.c    ****     u32MSP_ns = __TZ_get_MSP_NS();
 879              		.loc 3 240 0
 880 0372 BB61     		str	r3, [r7, #24]
 241:src/main.c    ****     __TZ_set_PSP_NS(M32(NON_SECURE_SRAM_BASE));
 881              		.loc 3 241 0
 882 0374 184B     		ldr	r3, .L58+24
 883 0376 1B68     		ldr	r3, [r3]
 884 0378 3B61     		str	r3, [r7, #16]
 885              	.LBB26:
 886              	.LBB27:
 106:src/cmsis_gcc.h **** }
 887              		.loc 4 106 0
 888 037a 3B69     		ldr	r3, [r7, #16]
 889              		.syntax divided
 890              	@ 106 "src/cmsis_gcc.h" 1
 891 037c 83F38988 		MSR psp_ns, r3
 892              	
 893              	@ 0 "" 2
 894              		.thumb
 895              		.syntax unified
 896              	.LBE27:
 897              	.LBE26:
 898              	.LBB28:
 899              	.LBB29:
 113:src/cmsis_gcc.h ****   return(result);
 900              		.loc 4 113 0
 901              		.syntax divided
 902              	@ 113 "src/cmsis_gcc.h" 1
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 84


 903 0380 EFF38983 		MRS r3, psp_ns
 904              	
 905              	@ 0 "" 2
 906              		.thumb
 907              		.syntax unified
 908 0384 BB60     		str	r3, [r7, #8]
 114:src/cmsis_gcc.h **** }
 909              		.loc 4 114 0
 910 0386 BB68     		ldr	r3, [r7, #8]
 911              	.LBE29:
 912              	.LBE28:
 242:src/main.c    ****     u32PSP_ns = __TZ_get_PSP_NS();
 913              		.loc 3 242 0
 914 0388 FB60     		str	r3, [r7, #12]
 243:src/main.c    **** 
 244:src/main.c    ****     printf("Non-secure Region Code Stack: MSP(0x%08x) PSP(0x%08x)\n", u32MSP_ns, u32PSP_ns);
 915              		.loc 3 244 0
 916 038a FA68     		ldr	r2, [r7, #12]
 917 038c B969     		ldr	r1, [r7, #24]
 918 038e 134B     		ldr	r3, .L58+28
 919 0390 1800     		movs	r0, r3
 920 0392 FFF7FEFF 		bl	printf
 245:src/main.c    **** 
 246:src/main.c    ****     SystemCoreClockUpdate();
 921              		.loc 3 246 0
 922 0396 FFF7FEFF 		bl	SystemCoreClockUpdate
 247:src/main.c    ****     //SysTick_Config(SystemCoreClock / 100); /* Generate interrupt each 10 ms */
 248:src/main.c    **** 	SysTick_Config(120000); /* Generate interrupt each 10 ms */
 923              		.loc 3 248 0
 924 039a 114B     		ldr	r3, .L58+32
 925 039c 1800     		movs	r0, r3
 926 039e FFF79DFE 		bl	SysTick_Config
 249:src/main.c    ****     
 250:src/main.c    **** 	Nonsecure_Init();
 927              		.loc 3 250 0
 928 03a2 FFF7FEFF 		bl	Nonsecure_Init
 251:src/main.c    ****     while(SYS->PDID)__WFI();
 929              		.loc 3 251 0
 930 03a6 00E0     		b	.L55
 931              	.L56:
 932              	.LBB30:
 933              	.LBB31:
 207:src/cmsis_gcc.h **** }
 208:src/cmsis_gcc.h **** 
 209:src/cmsis_gcc.h **** 
 210:src/cmsis_gcc.h **** /**
 211:src/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 212:src/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 213:src/cmsis_gcc.h **** 
 214:src/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 215:src/cmsis_gcc.h ****  */
 216:src/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 217:src/cmsis_gcc.h **** {
 218:src/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 219:src/cmsis_gcc.h **** }
 220:src/cmsis_gcc.h **** 
 221:src/cmsis_gcc.h **** 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 85


 222:src/cmsis_gcc.h **** /**
 223:src/cmsis_gcc.h ****   \brief   Get Priority Mask
 224:src/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 225:src/cmsis_gcc.h ****   \return               Priority Mask value
 226:src/cmsis_gcc.h ****  */
 227:src/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 228:src/cmsis_gcc.h **** {
 229:src/cmsis_gcc.h ****   uint32_t result;
 230:src/cmsis_gcc.h **** 
 231:src/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 232:src/cmsis_gcc.h ****   return(result);
 233:src/cmsis_gcc.h **** }
 234:src/cmsis_gcc.h **** 
 235:src/cmsis_gcc.h **** 
 236:src/cmsis_gcc.h **** /**
 237:src/cmsis_gcc.h ****   \brief   Set Priority Mask
 238:src/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 239:src/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 240:src/cmsis_gcc.h ****  */
 241:src/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 242:src/cmsis_gcc.h **** {
 243:src/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 244:src/cmsis_gcc.h **** }
 245:src/cmsis_gcc.h **** 
 246:src/cmsis_gcc.h **** 
 247:src/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 248:src/cmsis_gcc.h **** 
 249:src/cmsis_gcc.h **** /**
 250:src/cmsis_gcc.h ****   \brief   Enable FIQ
 251:src/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 252:src/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 253:src/cmsis_gcc.h ****  */
 254:src/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 255:src/cmsis_gcc.h **** {
 256:src/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 257:src/cmsis_gcc.h **** }
 258:src/cmsis_gcc.h **** 
 259:src/cmsis_gcc.h **** 
 260:src/cmsis_gcc.h **** /**
 261:src/cmsis_gcc.h ****   \brief   Disable FIQ
 262:src/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 263:src/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 264:src/cmsis_gcc.h ****  */
 265:src/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 266:src/cmsis_gcc.h **** {
 267:src/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 268:src/cmsis_gcc.h **** }
 269:src/cmsis_gcc.h **** 
 270:src/cmsis_gcc.h **** 
 271:src/cmsis_gcc.h **** /**
 272:src/cmsis_gcc.h ****   \brief   Get Base Priority
 273:src/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 274:src/cmsis_gcc.h ****   \return               Base Priority register value
 275:src/cmsis_gcc.h ****  */
 276:src/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 277:src/cmsis_gcc.h **** {
 278:src/cmsis_gcc.h ****   uint32_t result;
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 86


 279:src/cmsis_gcc.h **** 
 280:src/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 281:src/cmsis_gcc.h ****   return(result);
 282:src/cmsis_gcc.h **** }
 283:src/cmsis_gcc.h **** 
 284:src/cmsis_gcc.h **** 
 285:src/cmsis_gcc.h **** /**
 286:src/cmsis_gcc.h ****   \brief   Set Base Priority
 287:src/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 288:src/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 289:src/cmsis_gcc.h ****  */
 290:src/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 291:src/cmsis_gcc.h **** {
 292:src/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 293:src/cmsis_gcc.h **** }
 294:src/cmsis_gcc.h **** 
 295:src/cmsis_gcc.h **** 
 296:src/cmsis_gcc.h **** /**
 297:src/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 298:src/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 299:src/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 300:src/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 301:src/cmsis_gcc.h ****  */
 302:src/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 303:src/cmsis_gcc.h **** {
 304:src/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 305:src/cmsis_gcc.h **** }
 306:src/cmsis_gcc.h **** 
 307:src/cmsis_gcc.h **** 
 308:src/cmsis_gcc.h **** /**
 309:src/cmsis_gcc.h ****   \brief   Get Fault Mask
 310:src/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 311:src/cmsis_gcc.h ****   \return               Fault Mask register value
 312:src/cmsis_gcc.h ****  */
 313:src/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 314:src/cmsis_gcc.h **** {
 315:src/cmsis_gcc.h ****   uint32_t result;
 316:src/cmsis_gcc.h **** 
 317:src/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 318:src/cmsis_gcc.h ****   return(result);
 319:src/cmsis_gcc.h **** }
 320:src/cmsis_gcc.h **** 
 321:src/cmsis_gcc.h **** 
 322:src/cmsis_gcc.h **** /**
 323:src/cmsis_gcc.h ****   \brief   Set Fault Mask
 324:src/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 325:src/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 326:src/cmsis_gcc.h ****  */
 327:src/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 328:src/cmsis_gcc.h **** {
 329:src/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 330:src/cmsis_gcc.h **** }
 331:src/cmsis_gcc.h **** 
 332:src/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 333:src/cmsis_gcc.h **** 
 334:src/cmsis_gcc.h **** 
 335:src/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 87


 336:src/cmsis_gcc.h **** 
 337:src/cmsis_gcc.h **** /**
 338:src/cmsis_gcc.h ****   \brief   Get FPSCR
 339:src/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 340:src/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 341:src/cmsis_gcc.h ****  */
 342:src/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 343:src/cmsis_gcc.h **** {
 344:src/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 345:src/cmsis_gcc.h ****   uint32_t result;
 346:src/cmsis_gcc.h **** 
 347:src/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 348:src/cmsis_gcc.h ****   __ASM volatile ("");
 349:src/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 350:src/cmsis_gcc.h ****   __ASM volatile ("");
 351:src/cmsis_gcc.h ****   return(result);
 352:src/cmsis_gcc.h **** #else
 353:src/cmsis_gcc.h ****    return(0);
 354:src/cmsis_gcc.h **** #endif
 355:src/cmsis_gcc.h **** }
 356:src/cmsis_gcc.h **** 
 357:src/cmsis_gcc.h **** 
 358:src/cmsis_gcc.h **** /**
 359:src/cmsis_gcc.h ****   \brief   Set FPSCR
 360:src/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 361:src/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 362:src/cmsis_gcc.h ****  */
 363:src/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 364:src/cmsis_gcc.h **** {
 365:src/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 366:src/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 367:src/cmsis_gcc.h ****   __ASM volatile ("");
 368:src/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 369:src/cmsis_gcc.h ****   __ASM volatile ("");
 370:src/cmsis_gcc.h **** #endif
 371:src/cmsis_gcc.h **** }
 372:src/cmsis_gcc.h **** 
 373:src/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 374:src/cmsis_gcc.h **** 
 375:src/cmsis_gcc.h **** 
 376:src/cmsis_gcc.h **** 
 377:src/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 378:src/cmsis_gcc.h **** 
 379:src/cmsis_gcc.h **** 
 380:src/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 381:src/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 382:src/cmsis_gcc.h ****   Access to dedicated instructions
 383:src/cmsis_gcc.h ****   @{
 384:src/cmsis_gcc.h **** */
 385:src/cmsis_gcc.h **** 
 386:src/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 387:src/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 388:src/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 389:src/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 390:src/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 391:src/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 392:src/cmsis_gcc.h **** #else
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 88


 393:src/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 394:src/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 395:src/cmsis_gcc.h **** #endif
 396:src/cmsis_gcc.h **** 
 397:src/cmsis_gcc.h **** /**
 398:src/cmsis_gcc.h ****   \brief   No Operation
 399:src/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 400:src/cmsis_gcc.h ****  */
 401:src/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 402:src/cmsis_gcc.h **** {
 403:src/cmsis_gcc.h ****   __ASM volatile ("nop");
 404:src/cmsis_gcc.h **** }
 405:src/cmsis_gcc.h **** 
 406:src/cmsis_gcc.h **** 
 407:src/cmsis_gcc.h **** /**
 408:src/cmsis_gcc.h ****   \brief   Wait For Interrupt
 409:src/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 410:src/cmsis_gcc.h ****  */
 411:src/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 412:src/cmsis_gcc.h **** {
 413:src/cmsis_gcc.h ****   __ASM volatile ("wfi");
 934              		.loc 4 413 0 discriminator 2
 935              		.syntax divided
 936              	@ 413 "src/cmsis_gcc.h" 1
 937 03a8 30BF     		wfi
 938              	@ 0 "" 2
 939              		.thumb
 940              		.syntax unified
 941              	.L55:
 942              	.LBE31:
 943              	.LBE30:
 944              		.loc 3 251 0 discriminator 1
 945 03aa 8023     		movs	r3, #128
 946 03ac DB05     		lsls	r3, r3, #23
 947 03ae 1B68     		ldr	r3, [r3]
 948 03b0 002B     		cmp	r3, #0
 949 03b2 F9D1     		bne	.L56
 252:src/main.c    **** 
 253:src/main.c    ****     return 0;
 950              		.loc 3 253 0
 951 03b4 0023     		movs	r3, #0
 254:src/main.c    **** }
 952              		.loc 3 254 0
 953 03b6 1800     		movs	r0, r3
 954 03b8 BD46     		mov	sp, r7
 955 03ba 0BB0     		add	sp, sp, #44
 956              		@ sp needed
 957 03bc 90BD     		pop	{r4, r7, pc}
 958              	.L59:
 959 03be C046     		.align	2
 960              	.L58:
 961 03c0 44000000 		.word	.LC9
 962 03c4 00000000 		.word	tests2
 963 03c8 4C000000 		.word	.LC12
 964 03cc 00F00240 		.word	1073934336
 965 03d0 54000000 		.word	.LC14
 966 03d4 68000000 		.word	.LC16
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 89


 967 03d8 00000130 		.word	805371904
 968 03dc 9C000000 		.word	.LC18
 969 03e0 C0D40100 		.word	120000
 970              		.cfi_endproc
 971              	.LFE78:
 972              		.size	main, .-main
 973              		.align	2
 974              		.global	Nonsecure_Init
 975              		.code	16
 976              		.thumb_func
 977              		.type	Nonsecure_Init, %function
 978              	Nonsecure_Init:
 979              	.LFB79:
 255:src/main.c    **** 
 256:src/main.c    **** 
 257:src/main.c    **** void Nonsecure_Init(void)
 258:src/main.c    **** {
 980              		.loc 3 258 0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 8
 983              		@ frame_needed = 1, uses_anonymous_args = 0
 984 03e4 90B5     		push	{r4, r7, lr}
 985              	.LCFI27:
 986              		.cfi_def_cfa_offset 12
 987              		.cfi_offset 4, -12
 988              		.cfi_offset 7, -8
 989              		.cfi_offset 14, -4
 990 03e6 83B0     		sub	sp, sp, #12
 991              	.LCFI28:
 992              		.cfi_def_cfa_offset 24
 993 03e8 00AF     		add	r7, sp, #0
 994              	.LCFI29:
 995              		.cfi_def_cfa_register 7
 259:src/main.c    **** 	NonSecure_funcptr fp;
 260:src/main.c    **** 
 261:src/main.c    ****     /* SCB_NS.VTOR points to the Non-secure vector table base address. */
 262:src/main.c    ****     SCB_NS->VTOR = NON_SECURE_BASE;
 996              		.loc 3 262 0
 997 03ea 134B     		ldr	r3, .L64
 998 03ec 134A     		ldr	r2, .L64+4
 999 03ee 9A60     		str	r2, [r3, #8]
 263:src/main.c    **** 
 264:src/main.c    ****     /* 1st Entry in the vector table is the Non-secure Main Stack Pointer. */
 265:src/main.c    ****     __TZ_set_MSP_NS(*((uint32_t *)SCB_NS->VTOR));      /* Set up MSP in Non-secure code */
 1000              		.loc 3 265 0
 1001 03f0 114B     		ldr	r3, .L64
 1002 03f2 9B68     		ldr	r3, [r3, #8]
 1003 03f4 1B68     		ldr	r3, [r3]
 1004 03f6 3B60     		str	r3, [r7]
 1005              	.LBB32:
 1006              	.LBB33:
  93:src/cmsis_gcc.h **** }
 1007              		.loc 4 93 0
 1008 03f8 3B68     		ldr	r3, [r7]
 1009              		.syntax divided
 1010              	@ 93 "src/cmsis_gcc.h" 1
 1011 03fa 83F38888 		MSR msp_ns, r3
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 90


 1012              	
 1013              	@ 0 "" 2
 1014              		.thumb
 1015              		.syntax unified
 1016              	.LBE33:
 1017              	.LBE32:
 266:src/main.c    **** 
 267:src/main.c    ****     /* 2nd entry contains the address of the Reset_Handler (CMSIS-CORE) function */
 268:src/main.c    ****     fp = ((NonSecure_funcptr)(*(((uint32_t *)SCB_NS->VTOR) + 1)));
 1018              		.loc 3 268 0
 1019 03fe 0E4B     		ldr	r3, .L64
 1020 0400 9B68     		ldr	r3, [r3, #8]
 1021 0402 0433     		adds	r3, r3, #4
 1022 0404 1B68     		ldr	r3, [r3]
 1023 0406 7B60     		str	r3, [r7, #4]
 269:src/main.c    **** 
 270:src/main.c    ****     /* Clear the LSB of the function address to indicate the function-call
 271:src/main.c    ****        will cause a state switch from Secure to Non-secure */
 272:src/main.c    ****     fp = cmse_nsfptr_create(fp);
 1024              		.loc 3 272 0
 1025 0408 7B68     		ldr	r3, [r7, #4]
 1026 040a 0122     		movs	r2, #1
 1027 040c 9343     		bics	r3, r2
 1028 040e 7B60     		str	r3, [r7, #4]
 273:src/main.c    **** 
 274:src/main.c    ****     /* Check if the Reset_Handler address is in Non-secure space */
 275:src/main.c    ****     if(cmse_is_nsfptr(fp))
 1029              		.loc 3 275 0
 1030 0410 7B68     		ldr	r3, [r7, #4]
 1031 0412 0122     		movs	r2, #1
 1032 0414 1340     		ands	r3, r2
 1033 0416 53B9     		cbnz	r3, .L61
 276:src/main.c    ****     {
 277:src/main.c    ****         fp(0);                             /* Non-secure function call */
 1034              		.loc 3 277 0
 1035 0418 7B68     		ldr	r3, [r7, #4]
 1036 041a 0020     		movs	r0, #0
 1037 041c 1C00     		movs	r4, r3
 1038 041e 6408     		lsrs	r4, r4, #1
 1039 0420 6400     		lsls	r4, r4, #1
 1040 0422 2100     		movs	r1, r4
 1041 0424 2200     		movs	r2, r4
 1042 0426 2300     		movs	r3, r4
 1043 0428 FFF7FEFF 		bl	__gnu_cmse_nonsecure_call
 278:src/main.c    ****     }
 279:src/main.c    ****     else
 280:src/main.c    ****     {
 281:src/main.c    ****         /* Something went wrong */
 282:src/main.c    ****         while(1);
 283:src/main.c    ****     }
 284:src/main.c    **** }
 1044              		.loc 3 284 0
 1045 042c 00E0     		b	.L63
 1046              	.L61:
 282:src/main.c    ****     }
 1047              		.loc 3 282 0 discriminator 1
 1048 042e FEE7     		b	.L61
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 91


 1049              	.L63:
 1050              		.loc 3 284 0
 1051 0430 BD46     		mov	sp, r7
 1052 0432 03B0     		add	sp, sp, #12
 1053              		@ sp needed
 1054 0434 90BD     		pop	{r4, r7, pc}
 1055              	.L65:
 1056 0436 C046     		.align	2
 1057              	.L64:
 1058 0438 00ED02E0 		.word	-536679168
 1059 043c 00000410 		.word	268697600
 1060              		.cfi_endproc
 1061              	.LFE79:
 1062              		.size	Nonsecure_Init, .-Nonsecure_Init
 1063              		.align	2
 1064              		.global	SYS_Init
 1065              		.code	16
 1066              		.thumb_func
 1067              		.type	SYS_Init, %function
 1068              	SYS_Init:
 1069              	.LFB80:
 285:src/main.c    **** 
 286:src/main.c    **** 
 287:src/main.c    **** 
 288:src/main.c    **** void SYS_Init(void)
 289:src/main.c    **** {
 1070              		.loc 3 289 0
 1071              		.cfi_startproc
 1072              		@ args = 0, pretend = 0, frame = 0
 1073              		@ frame_needed = 1, uses_anonymous_args = 0
 1074 0440 80B5     		push	{r7, lr}
 1075              	.LCFI30:
 1076              		.cfi_def_cfa_offset 8
 1077              		.cfi_offset 7, -8
 1078              		.cfi_offset 14, -4
 1079 0442 00AF     		add	r7, sp, #0
 1080              	.LCFI31:
 1081              		.cfi_def_cfa_register 7
 290:src/main.c    ****     int32_t i;
 291:src/main.c    ****     /*---------------------------------------------------------------------------------------------
 292:src/main.c    ****     /* Init System Clock                                                                           
 293:src/main.c    ****     /*---------------------------------------------------------------------------------------------
 294:src/main.c    **** 
 295:src/main.c    ****     /* Enable External XTAL (4~24 MHz) */
 296:src/main.c    ****     CLK->PWRCTL |= CLK_PWRCTL_HXTEN_Msk;
 1082              		.loc 3 296 0
 1083 0444 134B     		ldr	r3, .L67
 1084 0446 134A     		ldr	r2, .L67
 1085 0448 1268     		ldr	r2, [r2]
 1086 044a 0121     		movs	r1, #1
 1087 044c 0A43     		orrs	r2, r1
 1088 044e 1A60     		str	r2, [r3]
 297:src/main.c    **** 
 298:src/main.c    ****     //CLK->PLLCTL = PLLCON_SETTING;
 299:src/main.c    **** 
 300:src/main.c    ****     /* Waiting for clock ready */
 301:src/main.c    **** //    i = 2200; // For timeout
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 92


 302:src/main.c    **** //    while(i-- > 0)
 303:src/main.c    **** //    {
 304:src/main.c    **** //        if((CLK->STATUS & (CLK_STATUS_PLLSTB_Msk | CLK_STATUS_HXTSTB_Msk)) ==
 305:src/main.c    **** //                (CLK_STATUS_PLLSTB_Msk | CLK_STATUS_HXTSTB_Msk))
 306:src/main.c    **** //            break;
 307:src/main.c    **** //    }
 308:src/main.c    **** 
 309:src/main.c    ****     /* Switch HCLK clock source to PLL */
 310:src/main.c    ****     CLK->CLKSEL0 = CLK_CLKSEL0_HCLKSEL_HXT;
 1089              		.loc 3 310 0
 1090 0450 104B     		ldr	r3, .L67
 1091 0452 0022     		movs	r2, #0
 1092 0454 1A61     		str	r2, [r3, #16]
 311:src/main.c    **** 
 312:src/main.c    ****     /* Enable IP clock */
 313:src/main.c    ****     CLK->APBCLK0 |= CLK_APBCLK0_UART0CKEN_Msk | CLK_APBCLK0_UART1CKEN_Msk | CLK_APBCLK0_UART2CKEN_M
 1093              		.loc 3 313 0
 1094 0456 0F4B     		ldr	r3, .L67
 1095 0458 0E4A     		ldr	r2, .L67
 1096 045a 9268     		ldr	r2, [r2, #8]
 1097 045c E021     		movs	r1, #224
 1098 045e C902     		lsls	r1, r1, #11
 1099 0460 0A43     		orrs	r2, r1
 1100 0462 9A60     		str	r2, [r3, #8]
 314:src/main.c    ****     CLK->APBCLK1 |= CLK_APBCLK1_OPACKEN_Msk;
 1101              		.loc 3 314 0
 1102 0464 0B4B     		ldr	r3, .L67
 1103 0466 0B4A     		ldr	r2, .L67
 1104 0468 D268     		ldr	r2, [r2, #12]
 1105 046a 8021     		movs	r1, #128
 1106 046c C905     		lsls	r1, r1, #23
 1107 046e 0A43     		orrs	r2, r1
 1108 0470 DA60     		str	r2, [r3, #12]
 315:src/main.c    **** 
 316:src/main.c    ****     /* Select IP clock source */
 317:src/main.c    ****     CLK->CLKSEL1 = CLK_CLKSEL1_UART0SEL_HIRC;//CLK_CLKSEL1_UARTSEL_HXT;
 1109              		.loc 3 317 0
 1110 0472 084B     		ldr	r3, .L67
 1111 0474 C022     		movs	r2, #192
 1112 0476 9204     		lsls	r2, r2, #18
 1113 0478 5A61     		str	r2, [r3, #20]
 318:src/main.c    **** 
 319:src/main.c    ****     /* Update System Core Clock */
 320:src/main.c    ****     /* User can use SystemCoreClockUpdate() to calculate PllClock, SystemCoreClock and CycylesPerUs
 321:src/main.c    ****     //SystemCoreClockUpdate();
 322:src/main.c    ****     //PllClock        = 12000000;            // PLL
 323:src/main.c    ****     //SystemCoreClock = 12000000 / 1;        // HCLK
 324:src/main.c    ****     //CyclesPerUs     = 12000000 / 1000000;  // For SYS_SysTickDelay()
 325:src/main.c    **** 
 326:src/main.c    ****     /*---------------------------------------------------------------------------------------------
 327:src/main.c    ****     /* Init I/O Multi-function                                                                     
 328:src/main.c    ****     /*---------------------------------------------------------------------------------------------
 329:src/main.c    ****     /* Set P3 multi-function pins for UART0 RXD and TXD */
 330:src/main.c    ****     //SYS->GPD_MFPL = SYS_GPD_MFPL_PD0MFP_UART0_RXD | SYS_GPD_MFPL_PD1MFP_UART0_TXD;
 331:src/main.c    ****     //SYS->GPA_MFPL = SYS_GPA_MFPL_PA1MFP_UART1_RXD | SYS_GPA_MFPL_PA0MFP_UART1_TXD;
 332:src/main.c    ****     //SYS->GPA_MFPH = SYS_GPA_MFPH_PA12MFP_UART2_RXD | SYS_GPA_MFPH_PA13MFP_UART2_TXD;
 333:src/main.c    ****     //SYS->GPA_MFPH = SYS_GPA_MFPH_PA12MFP_UART1_RXD | SYS_GPA_MFPH_PA13MFP_UART1_TXD;
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 93


 334:src/main.c    ****     //SYS->GPE_MFPL = SYS_GPE_MFPH_PE8MFP_UART1_TXD | SYS_GPE_MFPH_PE9MFP_UART1_RXD;
 335:src/main.c    ****     
 336:src/main.c    ****     /* 
 337:src/main.c    ****        UART0 I/O
 338:src/main.c    ****        PG7 - UART0_RXD - CON37.39, 
 339:src/main.c    ****        PG8 - UART0_TXD - CON37.15 
 340:src/main.c    ****     */
 341:src/main.c    ****     SYS->GPG_MFPL = 0x30000000;
 1114              		.loc 3 341 0
 1115 047a 8023     		movs	r3, #128
 1116 047c DB05     		lsls	r3, r3, #23
 1117 047e C022     		movs	r2, #192
 1118 0480 9205     		lsls	r2, r2, #22
 1119 0482 1A66     		str	r2, [r3, #96]
 342:src/main.c    ****     SYS->GPG_MFPH = 0x00000003;
 1120              		.loc 3 342 0
 1121 0484 8023     		movs	r3, #128
 1122 0486 DB05     		lsls	r3, r3, #23
 1123 0488 0322     		movs	r2, #3
 1124 048a 5A66     		str	r2, [r3, #100]
 343:src/main.c    **** 
 344:src/main.c    **** }
 1125              		.loc 3 344 0
 1126 048c C046     		nop
 1127 048e BD46     		mov	sp, r7
 1128              		@ sp needed
 1129 0490 80BD     		pop	{r7, pc}
 1130              	.L68:
 1131 0492 C046     		.align	2
 1132              	.L67:
 1133 0494 00020040 		.word	1073742336
 1134              		.cfi_endproc
 1135              	.LFE80:
 1136              		.size	SYS_Init, .-SYS_Init
 1137              		.align	2
 1138              		.global	UART0_Init
 1139              		.code	16
 1140              		.thumb_func
 1141              		.type	UART0_Init, %function
 1142              	UART0_Init:
 1143              	.LFB81:
 345:src/main.c    **** 
 346:src/main.c    **** void UART0_Init(void)
 347:src/main.c    **** {
 1144              		.loc 3 347 0
 1145              		.cfi_startproc
 1146              		@ args = 0, pretend = 0, frame = 0
 1147              		@ frame_needed = 1, uses_anonymous_args = 0
 1148 0498 80B5     		push	{r7, lr}
 1149              	.LCFI32:
 1150              		.cfi_def_cfa_offset 8
 1151              		.cfi_offset 7, -8
 1152              		.cfi_offset 14, -4
 1153 049a 00AF     		add	r7, sp, #0
 1154              	.LCFI33:
 1155              		.cfi_def_cfa_register 7
 348:src/main.c    ****     /*---------------------------------------------------------------------------------------------
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 94


 349:src/main.c    ****     /* Init UART                                                                                   
 350:src/main.c    ****     /*---------------------------------------------------------------------------------------------
 351:src/main.c    ****     /* Reset IP */
 352:src/main.c    **** 
 353:src/main.c    ****     /* Configure UART0 and set UART0 Baudrate */
 354:src/main.c    ****     UART0_NS->BAUD = UART_BAUD_MODE2 | UART_BAUD_MODE2_DIVIDER(__HXT, 115200);
 1156              		.loc 3 354 0
 1157 049c 044B     		ldr	r3, .L70
 1158 049e 054A     		ldr	r2, .L70+4
 1159 04a0 5A62     		str	r2, [r3, #36]
 355:src/main.c    ****     UART0_NS->LINE = UART_WORD_LEN_8 | UART_PARITY_NONE | UART_STOP_BIT_1;
 1160              		.loc 3 355 0
 1161 04a2 034B     		ldr	r3, .L70
 1162 04a4 0322     		movs	r2, #3
 1163 04a6 DA60     		str	r2, [r3, #12]
 356:src/main.c    **** }
 1164              		.loc 3 356 0
 1165 04a8 C046     		nop
 1166 04aa BD46     		mov	sp, r7
 1167              		@ sp needed
 1168 04ac 80BD     		pop	{r7, pc}
 1169              	.L71:
 1170 04ae C046     		.align	2
 1171              	.L70:
 1172 04b0 00000750 		.word	1342636032
 1173 04b4 66000030 		.word	805306470
 1174              		.cfi_endproc
 1175              	.LFE81:
 1176              		.size	UART0_Init, .-UART0_Init
 1177              		.bss
 1178              		.align	2
 1179              	ticks.7522:
 1180 0008 00000000 		.space	4
 1181              		.text
 1182              	.Letext0:
 1183              		.file 5 "c:\\program files\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\machine\\_
 1184              		.file 6 "c:\\program files\\gnu tools arm embedded\\5.4 2016q3\\arm-none-eabi\\include\\sys\\_stdi
 1185              		.file 7 "src/TC8234.h"
 1186              		.file 8 "src/system_TC8234.h"
 1187              		.section	.debug_info,"",%progbits
 1188              	.Ldebug_info0:
 1189 0000 E9140000 		.4byte	0x14e9
 1190 0004 0200     		.2byte	0x2
 1191 0006 00000000 		.4byte	.Ldebug_abbrev0
 1192 000a 04       		.byte	0x4
 1193 000b 01       		.uleb128 0x1
 1194 000c F0000000 		.4byte	.LASF312
 1195 0010 0C       		.byte	0xc
 1196 0011 3F030000 		.4byte	.LASF313
 1197 0015 D3050000 		.4byte	.LASF314
 1198 0019 00000000 		.4byte	.Ltext0
 1199 001d B8040000 		.4byte	.Letext0
 1200 0021 00000000 		.4byte	.Ldebug_line0
 1201 0025 02       		.uleb128 0x2
 1202 0026 04       		.byte	0x4
 1203 0027 05       		.byte	0x5
 1204 0028 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 95


 1205 002c 03       		.uleb128 0x3
 1206 002d 04       		.byte	0x4
 1207 002e 07       		.byte	0x7
 1208 002f 90070000 		.4byte	.LASF0
 1209 0033 03       		.uleb128 0x3
 1210 0034 08       		.byte	0x8
 1211 0035 05       		.byte	0x5
 1212 0036 BA060000 		.4byte	.LASF1
 1213 003a 03       		.uleb128 0x3
 1214 003b 08       		.byte	0x8
 1215 003c 04       		.byte	0x4
 1216 003d C7080000 		.4byte	.LASF2
 1217 0041 03       		.uleb128 0x3
 1218 0042 01       		.byte	0x1
 1219 0043 06       		.byte	0x6
 1220 0044 CB020000 		.4byte	.LASF3
 1221 0048 03       		.uleb128 0x3
 1222 0049 01       		.byte	0x1
 1223 004a 08       		.byte	0x8
 1224 004b 09030000 		.4byte	.LASF4
 1225 004f 03       		.uleb128 0x3
 1226 0050 02       		.byte	0x2
 1227 0051 05       		.byte	0x5
 1228 0052 8F0A0000 		.4byte	.LASF5
 1229 0056 03       		.uleb128 0x3
 1230 0057 02       		.byte	0x2
 1231 0058 07       		.byte	0x7
 1232 0059 960B0000 		.4byte	.LASF6
 1233 005d 04       		.uleb128 0x4
 1234 005e EB0B0000 		.4byte	.LASF8
 1235 0062 05       		.byte	0x5
 1236 0063 3F       		.byte	0x3f
 1237 0064 68000000 		.4byte	0x68
 1238 0068 03       		.uleb128 0x3
 1239 0069 04       		.byte	0x4
 1240 006a 05       		.byte	0x5
 1241 006b 0A020000 		.4byte	.LASF7
 1242 006f 04       		.uleb128 0x4
 1243 0070 AF060000 		.4byte	.LASF9
 1244 0074 05       		.byte	0x5
 1245 0075 41       		.byte	0x41
 1246 0076 7A000000 		.4byte	0x7a
 1247 007a 03       		.uleb128 0x3
 1248 007b 04       		.byte	0x4
 1249 007c 07       		.byte	0x7
 1250 007d 8B050000 		.4byte	.LASF10
 1251 0081 03       		.uleb128 0x3
 1252 0082 08       		.byte	0x8
 1253 0083 07       		.byte	0x7
 1254 0084 47090000 		.4byte	.LASF11
 1255 0088 04       		.uleb128 0x4
 1256 0089 69060000 		.4byte	.LASF12
 1257 008d 05       		.byte	0x5
 1258 008e C8       		.byte	0xc8
 1259 008f 25000000 		.4byte	0x25
 1260 0093 04       		.uleb128 0x4
 1261 0094 85000000 		.4byte	.LASF13
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 96


 1262 0098 06       		.byte	0x6
 1263 0099 2C       		.byte	0x2c
 1264 009a 5D000000 		.4byte	0x5d
 1265 009e 04       		.uleb128 0x4
 1266 009f 540B0000 		.4byte	.LASF14
 1267 00a3 06       		.byte	0x6
 1268 00a4 30       		.byte	0x30
 1269 00a5 6F000000 		.4byte	0x6f
 1270 00a9 04       		.uleb128 0x4
 1271 00aa AC070000 		.4byte	.LASF15
 1272 00ae 06       		.byte	0x6
 1273 00af 43       		.byte	0x43
 1274 00b0 88000000 		.4byte	0x88
 1275 00b4 03       		.uleb128 0x3
 1276 00b5 04       		.byte	0x4
 1277 00b6 07       		.byte	0x7
 1278 00b7 2F000000 		.4byte	.LASF16
 1279 00bb 03       		.uleb128 0x3
 1280 00bc 01       		.byte	0x1
 1281 00bd 08       		.byte	0x8
 1282 00be B3030000 		.4byte	.LASF17
 1283 00c2 05       		.uleb128 0x5
 1284 00c3 66020000 		.4byte	.LASF288
 1285 00c7 01       		.byte	0x1
 1286 00c8 41000000 		.4byte	0x41
 1287 00cc 07       		.byte	0x7
 1288 00cd 3B       		.byte	0x3b
 1289 00ce D7020000 		.4byte	0x2d7
 1290 00d2 06       		.uleb128 0x6
 1291 00d3 65050000 		.4byte	.LASF18
 1292 00d7 72       		.sleb128 -14
 1293 00d8 06       		.uleb128 0x6
 1294 00d9 320C0000 		.4byte	.LASF19
 1295 00dd 73       		.sleb128 -13
 1296 00de 06       		.uleb128 0x6
 1297 00df 05070000 		.4byte	.LASF20
 1298 00e3 7B       		.sleb128 -5
 1299 00e4 06       		.uleb128 0x6
 1300 00e5 CA0B0000 		.4byte	.LASF21
 1301 00e9 7E       		.sleb128 -2
 1302 00ea 06       		.uleb128 0x6
 1303 00eb A8020000 		.4byte	.LASF22
 1304 00ef 7F       		.sleb128 -1
 1305 00f0 07       		.uleb128 0x7
 1306 00f1 EF0A0000 		.4byte	.LASF23
 1307 00f5 00       		.byte	0
 1308 00f6 07       		.uleb128 0x7
 1309 00f7 E00A0000 		.4byte	.LASF24
 1310 00fb 01       		.byte	0x1
 1311 00fc 07       		.uleb128 0x7
 1312 00fd 5D040000 		.4byte	.LASF25
 1313 0101 02       		.byte	0x2
 1314 0102 07       		.uleb128 0x7
 1315 0103 340A0000 		.4byte	.LASF26
 1316 0107 03       		.byte	0x3
 1317 0108 07       		.uleb128 0x7
 1318 0109 E1020000 		.4byte	.LASF27
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 97


 1319 010d 04       		.byte	0x4
 1320 010e 07       		.uleb128 0x7
 1321 010f 750C0000 		.4byte	.LASF28
 1322 0113 06       		.byte	0x6
 1323 0114 07       		.uleb128 0x7
 1324 0115 3E020000 		.4byte	.LASF29
 1325 0119 07       		.byte	0x7
 1326 011a 07       		.uleb128 0x7
 1327 011b 15060000 		.4byte	.LASF30
 1328 011f 08       		.byte	0x8
 1329 0120 07       		.uleb128 0x7
 1330 0121 77090000 		.4byte	.LASF31
 1331 0125 09       		.byte	0x9
 1332 0126 07       		.uleb128 0x7
 1333 0127 80020000 		.4byte	.LASF32
 1334 012b 0A       		.byte	0xa
 1335 012c 07       		.uleb128 0x7
 1336 012d 570A0000 		.4byte	.LASF33
 1337 0131 0B       		.byte	0xb
 1338 0132 07       		.uleb128 0x7
 1339 0133 9D050000 		.4byte	.LASF34
 1340 0137 0C       		.byte	0xc
 1341 0138 07       		.uleb128 0x7
 1342 0139 E6040000 		.4byte	.LASF35
 1343 013d 0D       		.byte	0xd
 1344 013e 07       		.uleb128 0x7
 1345 013f 410C0000 		.4byte	.LASF36
 1346 0143 0E       		.byte	0xe
 1347 0144 07       		.uleb128 0x7
 1348 0145 F3070000 		.4byte	.LASF37
 1349 0149 0F       		.byte	0xf
 1350 014a 07       		.uleb128 0x7
 1351 014b 6E0B0000 		.4byte	.LASF38
 1352 014f 10       		.byte	0x10
 1353 0150 07       		.uleb128 0x7
 1354 0151 D5060000 		.4byte	.LASF39
 1355 0155 11       		.byte	0x11
 1356 0156 07       		.uleb128 0x7
 1357 0157 43060000 		.4byte	.LASF40
 1358 015b 12       		.byte	0x12
 1359 015c 07       		.uleb128 0x7
 1360 015d CD000000 		.4byte	.LASF41
 1361 0161 13       		.byte	0x13
 1362 0162 07       		.uleb128 0x7
 1363 0163 51000000 		.4byte	.LASF42
 1364 0167 14       		.byte	0x14
 1365 0168 07       		.uleb128 0x7
 1366 0169 B6080000 		.4byte	.LASF43
 1367 016d 15       		.byte	0x15
 1368 016e 07       		.uleb128 0x7
 1369 016f 4A0B0000 		.4byte	.LASF44
 1370 0173 16       		.byte	0x16
 1371 0174 07       		.uleb128 0x7
 1372 0175 DE060000 		.4byte	.LASF45
 1373 0179 17       		.byte	0x17
 1374 017a 07       		.uleb128 0x7
 1375 017b 170B0000 		.4byte	.LASF46
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 98


 1376 017f 18       		.byte	0x18
 1377 0180 07       		.uleb128 0x7
 1378 0181 E3000000 		.4byte	.LASF47
 1379 0185 19       		.byte	0x19
 1380 0186 07       		.uleb128 0x7
 1381 0187 81090000 		.4byte	.LASF48
 1382 018b 1A       		.byte	0x1a
 1383 018c 07       		.uleb128 0x7
 1384 018d 50040000 		.4byte	.LASF49
 1385 0191 1B       		.byte	0x1b
 1386 0192 07       		.uleb128 0x7
 1387 0193 93060000 		.4byte	.LASF50
 1388 0197 1C       		.byte	0x1c
 1389 0198 07       		.uleb128 0x7
 1390 0199 1E040000 		.4byte	.LASF51
 1391 019d 1D       		.byte	0x1d
 1392 019e 07       		.uleb128 0x7
 1393 019f B30B0000 		.4byte	.LASF52
 1394 01a3 1E       		.byte	0x1e
 1395 01a4 07       		.uleb128 0x7
 1396 01a5 78070000 		.4byte	.LASF53
 1397 01a9 1F       		.byte	0x1f
 1398 01aa 07       		.uleb128 0x7
 1399 01ab DF080000 		.4byte	.LASF54
 1400 01af 20       		.byte	0x20
 1401 01b0 07       		.uleb128 0x7
 1402 01b1 BE030000 		.4byte	.LASF55
 1403 01b5 21       		.byte	0x21
 1404 01b6 07       		.uleb128 0x7
 1405 01b7 330B0000 		.4byte	.LASF56
 1406 01bb 22       		.byte	0x22
 1407 01bc 07       		.uleb128 0x7
 1408 01bd B90A0000 		.4byte	.LASF57
 1409 01c1 23       		.byte	0x23
 1410 01c2 07       		.uleb128 0x7
 1411 01c3 B8090000 		.4byte	.LASF58
 1412 01c7 24       		.byte	0x24
 1413 01c8 07       		.uleb128 0x7
 1414 01c9 11050000 		.4byte	.LASF59
 1415 01cd 25       		.byte	0x25
 1416 01ce 07       		.uleb128 0x7
 1417 01cf 850C0000 		.4byte	.LASF60
 1418 01d3 26       		.byte	0x26
 1419 01d4 07       		.uleb128 0x7
 1420 01d5 47080000 		.4byte	.LASF61
 1421 01d9 27       		.byte	0x27
 1422 01da 07       		.uleb128 0x7
 1423 01db FF0A0000 		.4byte	.LASF62
 1424 01df 28       		.byte	0x28
 1425 01e0 07       		.uleb128 0x7
 1426 01e1 9F060000 		.4byte	.LASF63
 1427 01e5 29       		.byte	0x29
 1428 01e6 07       		.uleb128 0x7
 1429 01e7 85070000 		.4byte	.LASF64
 1430 01eb 2A       		.byte	0x2a
 1431 01ec 07       		.uleb128 0x7
 1432 01ed 6B020000 		.4byte	.LASF65
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 99


 1433 01f1 2B       		.byte	0x2b
 1434 01f2 07       		.uleb128 0x7
 1435 01f3 00000000 		.4byte	.LASF66
 1436 01f7 2C       		.byte	0x2c
 1437 01f8 07       		.uleb128 0x7
 1438 01f9 4C0A0000 		.4byte	.LASF67
 1439 01fd 2E       		.byte	0x2e
 1440 01fe 07       		.uleb128 0x7
 1441 01ff 93090000 		.4byte	.LASF68
 1442 0203 2F       		.byte	0x2f
 1443 0204 07       		.uleb128 0x7
 1444 0205 FE030000 		.4byte	.LASF69
 1445 0209 30       		.byte	0x30
 1446 020a 07       		.uleb128 0x7
 1447 020b 7E0B0000 		.4byte	.LASF70
 1448 020f 31       		.byte	0x31
 1449 0210 07       		.uleb128 0x7
 1450 0211 D2010000 		.4byte	.LASF71
 1451 0215 33       		.byte	0x33
 1452 0216 07       		.uleb128 0x7
 1453 0217 9B000000 		.4byte	.LASF72
 1454 021b 34       		.byte	0x34
 1455 021c 07       		.uleb128 0x7
 1456 021d 13020000 		.4byte	.LASF73
 1457 0221 35       		.byte	0x35
 1458 0222 07       		.uleb128 0x7
 1459 0223 C00B0000 		.4byte	.LASF74
 1460 0227 36       		.byte	0x36
 1461 0228 07       		.uleb128 0x7
 1462 0229 E8060000 		.4byte	.LASF75
 1463 022d 37       		.byte	0x37
 1464 022e 07       		.uleb128 0x7
 1465 022f 81050000 		.4byte	.LASF76
 1466 0233 38       		.byte	0x38
 1467 0234 07       		.uleb128 0x7
 1468 0235 7B000000 		.4byte	.LASF77
 1469 0239 39       		.byte	0x39
 1470 023a 07       		.uleb128 0x7
 1471 023b F9010000 		.4byte	.LASF78
 1472 023f 3A       		.byte	0x3a
 1473 0240 07       		.uleb128 0x7
 1474 0241 CF090000 		.4byte	.LASF79
 1475 0245 3B       		.byte	0x3b
 1476 0246 07       		.uleb128 0x7
 1477 0247 1C050000 		.4byte	.LASF80
 1478 024b 3C       		.byte	0x3c
 1479 024c 07       		.uleb128 0x7
 1480 024d 1D090000 		.4byte	.LASF81
 1481 0251 3E       		.byte	0x3e
 1482 0252 07       		.uleb128 0x7
 1483 0253 A2070000 		.4byte	.LASF82
 1484 0257 40       		.byte	0x40
 1485 0258 07       		.uleb128 0x7
 1486 0259 BE010000 		.4byte	.LASF83
 1487 025d 44       		.byte	0x44
 1488 025e 07       		.uleb128 0x7
 1489 025f 3F040000 		.4byte	.LASF84
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 100


 1490 0263 46       		.byte	0x46
 1491 0264 07       		.uleb128 0x7
 1492 0265 5A000000 		.4byte	.LASF85
 1493 0269 47       		.byte	0x47
 1494 026a 07       		.uleb128 0x7
 1495 026b 93030000 		.4byte	.LASF86
 1496 026f 48       		.byte	0x48
 1497 0270 07       		.uleb128 0x7
 1498 0271 19070000 		.4byte	.LASF87
 1499 0275 49       		.byte	0x49
 1500 0276 07       		.uleb128 0x7
 1501 0277 3E070000 		.4byte	.LASF88
 1502 027b 4A       		.byte	0x4a
 1503 027c 07       		.uleb128 0x7
 1504 027d 74060000 		.4byte	.LASF89
 1505 0281 4B       		.byte	0x4b
 1506 0282 07       		.uleb128 0x7
 1507 0283 08090000 		.4byte	.LASF90
 1508 0287 4C       		.byte	0x4c
 1509 0288 07       		.uleb128 0x7
 1510 0289 24080000 		.4byte	.LASF91
 1511 028d 4D       		.byte	0x4d
 1512 028e 07       		.uleb128 0x7
 1513 028f 520C0000 		.4byte	.LASF92
 1514 0293 4E       		.byte	0x4e
 1515 0294 07       		.uleb128 0x7
 1516 0295 0A080000 		.4byte	.LASF93
 1517 0299 4F       		.byte	0x4f
 1518 029a 07       		.uleb128 0x7
 1519 029b 35030000 		.4byte	.LASF94
 1520 029f 52       		.byte	0x52
 1521 02a0 07       		.uleb128 0x7
 1522 02a1 620A0000 		.4byte	.LASF95
 1523 02a5 54       		.byte	0x54
 1524 02a6 07       		.uleb128 0x7
 1525 02a7 AE090000 		.4byte	.LASF96
 1526 02ab 55       		.byte	0x55
 1527 02ac 07       		.uleb128 0x7
 1528 02ad A3090000 		.4byte	.LASF97
 1529 02b1 56       		.byte	0x56
 1530 02b2 07       		.uleb128 0x7
 1531 02b3 F1040000 		.4byte	.LASF98
 1532 02b7 57       		.byte	0x57
 1533 02b8 07       		.uleb128 0x7
 1534 02b9 76020000 		.4byte	.LASF99
 1535 02bd 5A       		.byte	0x5a
 1536 02be 07       		.uleb128 0x7
 1537 02bf EC030000 		.4byte	.LASF100
 1538 02c3 60       		.byte	0x60
 1539 02c4 07       		.uleb128 0x7
 1540 02c5 7F060000 		.4byte	.LASF101
 1541 02c9 62       		.byte	0x62
 1542 02ca 07       		.uleb128 0x7
 1543 02cb 8A060000 		.4byte	.LASF102
 1544 02cf 63       		.byte	0x63
 1545 02d0 07       		.uleb128 0x7
 1546 02d1 51080000 		.4byte	.LASF103
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 101


 1547 02d5 64       		.byte	0x64
 1548 02d6 00       		.byte	0
 1549 02d7 04       		.uleb128 0x4
 1550 02d8 C9050000 		.4byte	.LASF104
 1551 02dc 07       		.byte	0x7
 1552 02dd 99       		.byte	0x99
 1553 02de C2000000 		.4byte	0xc2
 1554 02e2 08       		.uleb128 0x8
 1555 02e3 F004     		.2byte	0x4f0
 1556 02e5 01       		.byte	0x1
 1557 02e6 B401     		.2byte	0x1b4
 1558 02e8 BB030000 		.4byte	0x3bb
 1559 02ec 09       		.uleb128 0x9
 1560 02ed 270C0000 		.4byte	.LASF105
 1561 02f1 01       		.byte	0x1
 1562 02f2 B601     		.2byte	0x1b6
 1563 02f4 D0030000 		.4byte	0x3d0
 1564 02f8 02       		.byte	0x2
 1565 02f9 23       		.byte	0x23
 1566 02fa 00       		.uleb128 0
 1567 02fb 09       		.uleb128 0x9
 1568 02fc F5020000 		.4byte	.LASF106
 1569 0300 01       		.byte	0x1
 1570 0301 B701     		.2byte	0x1b7
 1571 0303 D5030000 		.4byte	0x3d5
 1572 0307 02       		.byte	0x2
 1573 0308 23       		.byte	0x23
 1574 0309 40       		.uleb128 0x40
 1575 030a 09       		.uleb128 0x9
 1576 030b 9E090000 		.4byte	.LASF107
 1577 030f 01       		.byte	0x1
 1578 0310 B801     		.2byte	0x1b8
 1579 0312 E5030000 		.4byte	0x3e5
 1580 0316 03       		.byte	0x3
 1581 0317 23       		.byte	0x23
 1582 0318 8001     		.uleb128 0x80
 1583 031a 09       		.uleb128 0x9
 1584 031b 1A000000 		.4byte	.LASF108
 1585 031f 01       		.byte	0x1
 1586 0320 B901     		.2byte	0x1b9
 1587 0322 D5030000 		.4byte	0x3d5
 1588 0326 03       		.byte	0x3
 1589 0327 23       		.byte	0x23
 1590 0328 C001     		.uleb128 0xc0
 1591 032a 09       		.uleb128 0x9
 1592 032b 31040000 		.4byte	.LASF109
 1593 032f 01       		.byte	0x1
 1594 0330 BA01     		.2byte	0x1ba
 1595 0332 EA030000 		.4byte	0x3ea
 1596 0336 03       		.byte	0x3
 1597 0337 23       		.byte	0x23
 1598 0338 8002     		.uleb128 0x100
 1599 033a 09       		.uleb128 0x9
 1600 033b 9C030000 		.4byte	.LASF110
 1601 033f 01       		.byte	0x1
 1602 0340 BB01     		.2byte	0x1bb
 1603 0342 D5030000 		.4byte	0x3d5
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 102


 1604 0346 03       		.byte	0x3
 1605 0347 23       		.byte	0x23
 1606 0348 C002     		.uleb128 0x140
 1607 034a 09       		.uleb128 0x9
 1608 034b 10060000 		.4byte	.LASF111
 1609 034f 01       		.byte	0x1
 1610 0350 BC01     		.2byte	0x1bc
 1611 0352 EF030000 		.4byte	0x3ef
 1612 0356 03       		.byte	0x3
 1613 0357 23       		.byte	0x23
 1614 0358 8003     		.uleb128 0x180
 1615 035a 09       		.uleb128 0x9
 1616 035b 17030000 		.4byte	.LASF112
 1617 035f 01       		.byte	0x1
 1618 0360 BD01     		.2byte	0x1bd
 1619 0362 D5030000 		.4byte	0x3d5
 1620 0366 03       		.byte	0x3
 1621 0367 23       		.byte	0x23
 1622 0368 C003     		.uleb128 0x1c0
 1623 036a 09       		.uleb128 0x9
 1624 036b 4A030000 		.4byte	.LASF113
 1625 036f 01       		.byte	0x1
 1626 0370 BE01     		.2byte	0x1be
 1627 0372 F4030000 		.4byte	0x3f4
 1628 0376 03       		.byte	0x3
 1629 0377 23       		.byte	0x23
 1630 0378 8004     		.uleb128 0x200
 1631 037a 09       		.uleb128 0x9
 1632 037b 21030000 		.4byte	.LASF114
 1633 037f 01       		.byte	0x1
 1634 0380 BF01     		.2byte	0x1bf
 1635 0382 D5030000 		.4byte	0x3d5
 1636 0386 03       		.byte	0x3
 1637 0387 23       		.byte	0x23
 1638 0388 C004     		.uleb128 0x240
 1639 038a 09       		.uleb128 0x9
 1640 038b 1E060000 		.4byte	.LASF115
 1641 038f 01       		.byte	0x1
 1642 0390 C001     		.2byte	0x1c0
 1643 0392 F9030000 		.4byte	0x3f9
 1644 0396 03       		.byte	0x3
 1645 0397 23       		.byte	0x23
 1646 0398 8005     		.uleb128 0x280
 1647 039a 09       		.uleb128 0x9
 1648 039b 2B030000 		.4byte	.LASF116
 1649 039f 01       		.byte	0x1
 1650 03a0 C101     		.2byte	0x1c1
 1651 03a2 D5030000 		.4byte	0x3d5
 1652 03a6 03       		.byte	0x3
 1653 03a7 23       		.byte	0x23
 1654 03a8 C005     		.uleb128 0x2c0
 1655 03aa 0A       		.uleb128 0xa
 1656 03ab 49505200 		.ascii	"IPR\000"
 1657 03af 01       		.byte	0x1
 1658 03b0 C201     		.2byte	0x1c2
 1659 03b2 0E040000 		.4byte	0x40e
 1660 03b6 03       		.byte	0x3
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 103


 1661 03b7 23       		.byte	0x23
 1662 03b8 8006     		.uleb128 0x300
 1663 03ba 00       		.byte	0
 1664 03bb 0B       		.uleb128 0xb
 1665 03bc CB030000 		.4byte	0x3cb
 1666 03c0 CB030000 		.4byte	0x3cb
 1667 03c4 0C       		.uleb128 0xc
 1668 03c5 B4000000 		.4byte	0xb4
 1669 03c9 0F       		.byte	0xf
 1670 03ca 00       		.byte	0
 1671 03cb 0D       		.uleb128 0xd
 1672 03cc 9E000000 		.4byte	0x9e
 1673 03d0 0D       		.uleb128 0xd
 1674 03d1 BB030000 		.4byte	0x3bb
 1675 03d5 0B       		.uleb128 0xb
 1676 03d6 9E000000 		.4byte	0x9e
 1677 03da E5030000 		.4byte	0x3e5
 1678 03de 0C       		.uleb128 0xc
 1679 03df B4000000 		.4byte	0xb4
 1680 03e3 0F       		.byte	0xf
 1681 03e4 00       		.byte	0
 1682 03e5 0D       		.uleb128 0xd
 1683 03e6 BB030000 		.4byte	0x3bb
 1684 03ea 0D       		.uleb128 0xd
 1685 03eb BB030000 		.4byte	0x3bb
 1686 03ef 0D       		.uleb128 0xd
 1687 03f0 BB030000 		.4byte	0x3bb
 1688 03f4 0D       		.uleb128 0xd
 1689 03f5 BB030000 		.4byte	0x3bb
 1690 03f9 0D       		.uleb128 0xd
 1691 03fa BB030000 		.4byte	0x3bb
 1692 03fe 0B       		.uleb128 0xb
 1693 03ff CB030000 		.4byte	0x3cb
 1694 0403 0E040000 		.4byte	0x40e
 1695 0407 0C       		.uleb128 0xc
 1696 0408 B4000000 		.4byte	0xb4
 1697 040c 7B       		.byte	0x7b
 1698 040d 00       		.byte	0
 1699 040e 0D       		.uleb128 0xd
 1700 040f FE030000 		.4byte	0x3fe
 1701 0413 0E       		.uleb128 0xe
 1702 0414 13090000 		.4byte	.LASF117
 1703 0418 01       		.byte	0x1
 1704 0419 C301     		.2byte	0x1c3
 1705 041b E2020000 		.4byte	0x2e2
 1706 041f 0F       		.uleb128 0xf
 1707 0420 28       		.byte	0x28
 1708 0421 01       		.byte	0x1
 1709 0422 D201     		.2byte	0x1d2
 1710 0424 B0040000 		.4byte	0x4b0
 1711 0428 09       		.uleb128 0x9
 1712 0429 23020000 		.4byte	.LASF118
 1713 042d 01       		.byte	0x1
 1714 042e D401     		.2byte	0x1d4
 1715 0430 B0040000 		.4byte	0x4b0
 1716 0434 02       		.byte	0x2
 1717 0435 23       		.byte	0x23
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 104


 1718 0436 00       		.uleb128 0
 1719 0437 09       		.uleb128 0x9
 1720 0438 B5020000 		.4byte	.LASF119
 1721 043c 01       		.byte	0x1
 1722 043d D501     		.2byte	0x1d5
 1723 043f CB030000 		.4byte	0x3cb
 1724 0443 02       		.byte	0x2
 1725 0444 23       		.byte	0x23
 1726 0445 04       		.uleb128 0x4
 1727 0446 09       		.uleb128 0x9
 1728 0447 96000000 		.4byte	.LASF120
 1729 044b 01       		.byte	0x1
 1730 044c D701     		.2byte	0x1d7
 1731 044e CB030000 		.4byte	0x3cb
 1732 0452 02       		.byte	0x2
 1733 0453 23       		.byte	0x23
 1734 0454 08       		.uleb128 0x8
 1735 0455 09       		.uleb128 0x9
 1736 0456 F3010000 		.4byte	.LASF121
 1737 045a 01       		.byte	0x1
 1738 045b DB01     		.2byte	0x1db
 1739 045d CB030000 		.4byte	0x3cb
 1740 0461 02       		.byte	0x2
 1741 0462 23       		.byte	0x23
 1742 0463 0C       		.uleb128 0xc
 1743 0464 0A       		.uleb128 0xa
 1744 0465 53435200 		.ascii	"SCR\000"
 1745 0469 01       		.byte	0x1
 1746 046a DC01     		.2byte	0x1dc
 1747 046c CB030000 		.4byte	0x3cb
 1748 0470 02       		.byte	0x2
 1749 0471 23       		.byte	0x23
 1750 0472 10       		.uleb128 0x10
 1751 0473 0A       		.uleb128 0xa
 1752 0474 43435200 		.ascii	"CCR\000"
 1753 0478 01       		.byte	0x1
 1754 0479 DD01     		.2byte	0x1dd
 1755 047b CB030000 		.4byte	0x3cb
 1756 047f 02       		.byte	0x2
 1757 0480 23       		.byte	0x23
 1758 0481 14       		.uleb128 0x14
 1759 0482 09       		.uleb128 0x9
 1760 0483 FF020000 		.4byte	.LASF122
 1761 0487 01       		.byte	0x1
 1762 0488 DE01     		.2byte	0x1de
 1763 048a 9E000000 		.4byte	0x9e
 1764 048e 02       		.byte	0x2
 1765 048f 23       		.byte	0x23
 1766 0490 18       		.uleb128 0x18
 1767 0491 09       		.uleb128 0x9
 1768 0492 29020000 		.4byte	.LASF123
 1769 0496 01       		.byte	0x1
 1770 0497 DF01     		.2byte	0x1df
 1771 0499 C5040000 		.4byte	0x4c5
 1772 049d 02       		.byte	0x2
 1773 049e 23       		.byte	0x23
 1774 049f 1C       		.uleb128 0x1c
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 105


 1775 04a0 09       		.uleb128 0x9
 1776 04a1 68040000 		.4byte	.LASF124
 1777 04a5 01       		.byte	0x1
 1778 04a6 E001     		.2byte	0x1e0
 1779 04a8 CB030000 		.4byte	0x3cb
 1780 04ac 02       		.byte	0x2
 1781 04ad 23       		.byte	0x23
 1782 04ae 24       		.uleb128 0x24
 1783 04af 00       		.byte	0
 1784 04b0 10       		.uleb128 0x10
 1785 04b1 CB030000 		.4byte	0x3cb
 1786 04b5 0B       		.uleb128 0xb
 1787 04b6 CB030000 		.4byte	0x3cb
 1788 04ba C5040000 		.4byte	0x4c5
 1789 04be 0C       		.uleb128 0xc
 1790 04bf B4000000 		.4byte	0xb4
 1791 04c3 01       		.byte	0x1
 1792 04c4 00       		.byte	0
 1793 04c5 0D       		.uleb128 0xd
 1794 04c6 B5040000 		.4byte	0x4b5
 1795 04ca 0E       		.uleb128 0xe
 1796 04cb C8030000 		.4byte	.LASF125
 1797 04cf 01       		.byte	0x1
 1798 04d0 E101     		.2byte	0x1e1
 1799 04d2 1F040000 		.4byte	0x41f
 1800 04d6 0F       		.uleb128 0xf
 1801 04d7 10       		.byte	0x10
 1802 04d8 01       		.byte	0x1
 1803 04d9 8002     		.2byte	0x280
 1804 04db 1C050000 		.4byte	0x51c
 1805 04df 09       		.uleb128 0x9
 1806 04e0 9D070000 		.4byte	.LASF126
 1807 04e4 01       		.byte	0x1
 1808 04e5 8202     		.2byte	0x282
 1809 04e7 CB030000 		.4byte	0x3cb
 1810 04eb 02       		.byte	0x2
 1811 04ec 23       		.byte	0x23
 1812 04ed 00       		.uleb128 0
 1813 04ee 09       		.uleb128 0x9
 1814 04ef 2B070000 		.4byte	.LASF127
 1815 04f3 01       		.byte	0x1
 1816 04f4 8302     		.2byte	0x283
 1817 04f6 CB030000 		.4byte	0x3cb
 1818 04fa 02       		.byte	0x2
 1819 04fb 23       		.byte	0x23
 1820 04fc 04       		.uleb128 0x4
 1821 04fd 0A       		.uleb128 0xa
 1822 04fe 56414C00 		.ascii	"VAL\000"
 1823 0502 01       		.byte	0x1
 1824 0503 8402     		.2byte	0x284
 1825 0505 CB030000 		.4byte	0x3cb
 1826 0509 02       		.byte	0x2
 1827 050a 23       		.byte	0x23
 1828 050b 08       		.uleb128 0x8
 1829 050c 09       		.uleb128 0x9
 1830 050d 030A0000 		.4byte	.LASF128
 1831 0511 01       		.byte	0x1
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 106


 1832 0512 8502     		.2byte	0x285
 1833 0514 B0040000 		.4byte	0x4b0
 1834 0518 02       		.byte	0x2
 1835 0519 23       		.byte	0x23
 1836 051a 0C       		.uleb128 0xc
 1837 051b 00       		.byte	0
 1838 051c 0E       		.uleb128 0xe
 1839 051d 7D080000 		.4byte	.LASF129
 1840 0521 01       		.byte	0x1
 1841 0522 8602     		.2byte	0x286
 1842 0524 D6040000 		.4byte	0x4d6
 1843 0528 0B       		.uleb128 0xb
 1844 0529 B0040000 		.4byte	0x4b0
 1845 052d 38050000 		.4byte	0x538
 1846 0531 0C       		.uleb128 0xc
 1847 0532 B4000000 		.4byte	0xb4
 1848 0536 04       		.byte	0x4
 1849 0537 00       		.byte	0
 1850 0538 0B       		.uleb128 0xb
 1851 0539 B0040000 		.4byte	0x4b0
 1852 053d 48050000 		.4byte	0x548
 1853 0541 0C       		.uleb128 0xc
 1854 0542 B4000000 		.4byte	0xb4
 1855 0546 00       		.byte	0
 1856 0547 00       		.byte	0
 1857 0548 0B       		.uleb128 0xb
 1858 0549 B0040000 		.4byte	0x4b0
 1859 054d 58050000 		.4byte	0x558
 1860 0551 0C       		.uleb128 0xc
 1861 0552 B4000000 		.4byte	0xb4
 1862 0556 02       		.byte	0x2
 1863 0557 00       		.byte	0
 1864 0558 0B       		.uleb128 0xb
 1865 0559 B0040000 		.4byte	0x4b0
 1866 055d 68050000 		.4byte	0x568
 1867 0561 0C       		.uleb128 0xc
 1868 0562 B4000000 		.4byte	0xb4
 1869 0566 03       		.byte	0x3
 1870 0567 00       		.byte	0
 1871 0568 0F       		.uleb128 0xf
 1872 0569 F4       		.byte	0xf4
 1873 056a 07       		.byte	0x7
 1874 056b 220A     		.2byte	0xa22
 1875 056d AA070000 		.4byte	0x7aa
 1876 0571 09       		.uleb128 0x9
 1877 0572 7C030000 		.4byte	.LASF130
 1878 0576 07       		.byte	0x7
 1879 0577 250C     		.2byte	0xc25
 1880 0579 CB030000 		.4byte	0x3cb
 1881 057d 02       		.byte	0x2
 1882 057e 23       		.byte	0x23
 1883 057f 00       		.uleb128 0
 1884 0580 09       		.uleb128 0x9
 1885 0581 25050000 		.4byte	.LASF131
 1886 0585 07       		.byte	0x7
 1887 0586 260C     		.2byte	0xc26
 1888 0588 CB030000 		.4byte	0x3cb
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 107


 1889 058c 02       		.byte	0x2
 1890 058d 23       		.byte	0x23
 1891 058e 04       		.uleb128 0x4
 1892 058f 09       		.uleb128 0x9
 1893 0590 A5000000 		.4byte	.LASF132
 1894 0594 07       		.byte	0x7
 1895 0595 270C     		.2byte	0xc27
 1896 0597 CB030000 		.4byte	0x3cb
 1897 059b 02       		.byte	0x2
 1898 059c 23       		.byte	0x23
 1899 059d 08       		.uleb128 0x8
 1900 059e 09       		.uleb128 0x9
 1901 059f AD000000 		.4byte	.LASF133
 1902 05a3 07       		.byte	0x7
 1903 05a4 280C     		.2byte	0xc28
 1904 05a6 CB030000 		.4byte	0x3cb
 1905 05aa 02       		.byte	0x2
 1906 05ab 23       		.byte	0x23
 1907 05ac 0C       		.uleb128 0xc
 1908 05ad 09       		.uleb128 0x9
 1909 05ae 2F090000 		.4byte	.LASF134
 1910 05b2 07       		.byte	0x7
 1911 05b3 290C     		.2byte	0xc29
 1912 05b5 CB030000 		.4byte	0x3cb
 1913 05b9 02       		.byte	0x2
 1914 05ba 23       		.byte	0x23
 1915 05bb 10       		.uleb128 0x10
 1916 05bc 09       		.uleb128 0x9
 1917 05bd 37090000 		.4byte	.LASF135
 1918 05c1 07       		.byte	0x7
 1919 05c2 2A0C     		.2byte	0xc2a
 1920 05c4 CB030000 		.4byte	0x3cb
 1921 05c8 02       		.byte	0x2
 1922 05c9 23       		.byte	0x23
 1923 05ca 14       		.uleb128 0x14
 1924 05cb 09       		.uleb128 0x9
 1925 05cc 3F090000 		.4byte	.LASF136
 1926 05d0 07       		.byte	0x7
 1927 05d1 2B0C     		.2byte	0xc2b
 1928 05d3 CB030000 		.4byte	0x3cb
 1929 05d7 02       		.byte	0x2
 1930 05d8 23       		.byte	0x23
 1931 05d9 18       		.uleb128 0x18
 1932 05da 09       		.uleb128 0x9
 1933 05db E9080000 		.4byte	.LASF137
 1934 05df 07       		.byte	0x7
 1935 05e0 2C0C     		.2byte	0xc2c
 1936 05e2 CB030000 		.4byte	0x3cb
 1937 05e6 02       		.byte	0x2
 1938 05e7 23       		.byte	0x23
 1939 05e8 1C       		.uleb128 0x1c
 1940 05e9 09       		.uleb128 0x9
 1941 05ea 5C030000 		.4byte	.LASF138
 1942 05ee 07       		.byte	0x7
 1943 05ef 2D0C     		.2byte	0xc2d
 1944 05f1 CB030000 		.4byte	0x3cb
 1945 05f5 02       		.byte	0x2
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 108


 1946 05f6 23       		.byte	0x23
 1947 05f7 20       		.uleb128 0x20
 1948 05f8 09       		.uleb128 0x9
 1949 05f9 64030000 		.4byte	.LASF139
 1950 05fd 07       		.byte	0x7
 1951 05fe 2E0C     		.2byte	0xc2e
 1952 0600 CB030000 		.4byte	0x3cb
 1953 0604 02       		.byte	0x2
 1954 0605 23       		.byte	0x23
 1955 0606 24       		.uleb128 0x24
 1956 0607 09       		.uleb128 0x9
 1957 0608 6C030000 		.4byte	.LASF140
 1958 060c 07       		.byte	0x7
 1959 060d 2F0C     		.2byte	0xc2f
 1960 060f CB030000 		.4byte	0x3cb
 1961 0613 02       		.byte	0x2
 1962 0614 23       		.byte	0x23
 1963 0615 28       		.uleb128 0x28
 1964 0616 09       		.uleb128 0x9
 1965 0617 95040000 		.4byte	.LASF141
 1966 061b 07       		.byte	0x7
 1967 061c 330C     		.2byte	0xc33
 1968 061e AF070000 		.4byte	0x7af
 1969 0622 02       		.byte	0x2
 1970 0623 23       		.byte	0x23
 1971 0624 2C       		.uleb128 0x2c
 1972 0625 09       		.uleb128 0x9
 1973 0626 74030000 		.4byte	.LASF142
 1974 062a 07       		.byte	0x7
 1975 062b 340C     		.2byte	0xc34
 1976 062d CB030000 		.4byte	0x3cb
 1977 0631 02       		.byte	0x2
 1978 0632 23       		.byte	0x23
 1979 0633 30       		.uleb128 0x30
 1980 0634 09       		.uleb128 0x9
 1981 0635 9E040000 		.4byte	.LASF143
 1982 0639 07       		.byte	0x7
 1983 063a 360C     		.2byte	0xc36
 1984 063c B9070000 		.4byte	0x7b9
 1985 0640 02       		.byte	0x2
 1986 0641 23       		.byte	0x23
 1987 0642 34       		.uleb128 0x34
 1988 0643 09       		.uleb128 0x9
 1989 0644 770B0000 		.4byte	.LASF144
 1990 0648 07       		.byte	0x7
 1991 0649 370C     		.2byte	0xc37
 1992 064b CB030000 		.4byte	0x3cb
 1993 064f 02       		.byte	0x2
 1994 0650 23       		.byte	0x23
 1995 0651 40       		.uleb128 0x40
 1996 0652 09       		.uleb128 0x9
 1997 0653 A7040000 		.4byte	.LASF145
 1998 0657 07       		.byte	0x7
 1999 0658 380C     		.2byte	0xc38
 2000 065a C3070000 		.4byte	0x7c3
 2001 065e 02       		.byte	0x2
 2002 065f 23       		.byte	0x23
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 109


 2003 0660 44       		.uleb128 0x44
 2004 0661 09       		.uleb128 0x9
 2005 0662 EF090000 		.4byte	.LASF146
 2006 0666 07       		.byte	0x7
 2007 0667 390C     		.2byte	0xc39
 2008 0669 B0040000 		.4byte	0x4b0
 2009 066d 02       		.byte	0x2
 2010 066e 23       		.byte	0x23
 2011 066f 50       		.uleb128 0x50
 2012 0670 09       		.uleb128 0x9
 2013 0671 B0040000 		.4byte	.LASF147
 2014 0675 07       		.byte	0x7
 2015 0676 3A0C     		.2byte	0xc3a
 2016 0678 CD070000 		.4byte	0x7cd
 2017 067c 02       		.byte	0x2
 2018 067d 23       		.byte	0x23
 2019 067e 54       		.uleb128 0x54
 2020 067f 09       		.uleb128 0x9
 2021 0680 49070000 		.4byte	.LASF148
 2022 0684 07       		.byte	0x7
 2023 0685 3B0C     		.2byte	0xc3b
 2024 0687 CB030000 		.4byte	0x3cb
 2025 068b 02       		.byte	0x2
 2026 068c 23       		.byte	0x23
 2027 068d 60       		.uleb128 0x60
 2028 068e 09       		.uleb128 0x9
 2029 068f B9040000 		.4byte	.LASF149
 2030 0693 07       		.byte	0x7
 2031 0694 3C0C     		.2byte	0xc3c
 2032 0696 D7070000 		.4byte	0x7d7
 2033 069a 02       		.byte	0x2
 2034 069b 23       		.byte	0x23
 2035 069c 64       		.uleb128 0x64
 2036 069d 09       		.uleb128 0x9
 2037 069e 650C0000 		.4byte	.LASF150
 2038 06a2 07       		.byte	0x7
 2039 06a3 3D0C     		.2byte	0xc3d
 2040 06a5 CB030000 		.4byte	0x3cb
 2041 06a9 02       		.byte	0x2
 2042 06aa 23       		.byte	0x23
 2043 06ab 70       		.uleb128 0x70
 2044 06ac 09       		.uleb128 0x9
 2045 06ad ED020000 		.4byte	.LASF151
 2046 06b1 07       		.byte	0x7
 2047 06b2 3E0C     		.2byte	0xc3e
 2048 06b4 CB030000 		.4byte	0x3cb
 2049 06b8 02       		.byte	0x2
 2050 06b9 23       		.byte	0x23
 2051 06ba 74       		.uleb128 0x74
 2052 06bb 09       		.uleb128 0x9
 2053 06bc 2B040000 		.4byte	.LASF152
 2054 06c0 07       		.byte	0x7
 2055 06c1 3F0C     		.2byte	0xc3f
 2056 06c3 CB030000 		.4byte	0x3cb
 2057 06c7 02       		.byte	0x2
 2058 06c8 23       		.byte	0x23
 2059 06c9 78       		.uleb128 0x78
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 110


 2060 06ca 09       		.uleb128 0x9
 2061 06cb 2C050000 		.4byte	.LASF153
 2062 06cf 07       		.byte	0x7
 2063 06d0 400C     		.2byte	0xc40
 2064 06d2 CB030000 		.4byte	0x3cb
 2065 06d6 02       		.byte	0x2
 2066 06d7 23       		.byte	0x23
 2067 06d8 7C       		.uleb128 0x7c
 2068 06d9 09       		.uleb128 0x9
 2069 06da C2040000 		.4byte	.LASF154
 2070 06de 07       		.byte	0x7
 2071 06df 410C     		.2byte	0xc41
 2072 06e1 E1070000 		.4byte	0x7e1
 2073 06e5 03       		.byte	0x3
 2074 06e6 23       		.byte	0x23
 2075 06e7 8001     		.uleb128 0x80
 2076 06e9 09       		.uleb128 0x9
 2077 06ea 12040000 		.4byte	.LASF155
 2078 06ee 07       		.byte	0x7
 2079 06ef 420C     		.2byte	0xc42
 2080 06f1 CB030000 		.4byte	0x3cb
 2081 06f5 03       		.byte	0x3
 2082 06f6 23       		.byte	0x23
 2083 06f7 9001     		.uleb128 0x90
 2084 06f9 09       		.uleb128 0x9
 2085 06fa 51070000 		.4byte	.LASF156
 2086 06fe 07       		.byte	0x7
 2087 06ff 430C     		.2byte	0xc43
 2088 0701 CB030000 		.4byte	0x3cb
 2089 0705 03       		.byte	0x3
 2090 0706 23       		.byte	0x23
 2091 0707 9401     		.uleb128 0x94
 2092 0709 09       		.uleb128 0x9
 2093 070a 430B0000 		.4byte	.LASF157
 2094 070e 07       		.byte	0x7
 2095 070f 440C     		.2byte	0xc44
 2096 0711 CB030000 		.4byte	0x3cb
 2097 0715 03       		.byte	0x3
 2098 0716 23       		.byte	0x23
 2099 0717 9801     		.uleb128 0x98
 2100 0719 09       		.uleb128 0x9
 2101 071a 3C050000 		.4byte	.LASF158
 2102 071e 07       		.byte	0x7
 2103 071f 450C     		.2byte	0xc45
 2104 0721 CB030000 		.4byte	0x3cb
 2105 0725 03       		.byte	0x3
 2106 0726 23       		.byte	0x23
 2107 0727 9C01     		.uleb128 0x9c
 2108 0729 09       		.uleb128 0x9
 2109 072a 72000000 		.4byte	.LASF159
 2110 072e 07       		.byte	0x7
 2111 072f 460C     		.2byte	0xc46
 2112 0731 CB030000 		.4byte	0x3cb
 2113 0735 03       		.byte	0x3
 2114 0736 23       		.byte	0x23
 2115 0737 A001     		.uleb128 0xa0
 2116 0739 09       		.uleb128 0x9
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 111


 2117 073a D1030000 		.4byte	.LASF160
 2118 073e 07       		.byte	0x7
 2119 073f 470C     		.2byte	0xc47
 2120 0741 CB030000 		.4byte	0x3cb
 2121 0745 03       		.byte	0x3
 2122 0746 23       		.byte	0x23
 2123 0747 A401     		.uleb128 0xa4
 2124 0749 09       		.uleb128 0x9
 2125 074a 36040000 		.4byte	.LASF161
 2126 074e 07       		.byte	0x7
 2127 074f 480C     		.2byte	0xc48
 2128 0751 CB030000 		.4byte	0x3cb
 2129 0755 03       		.byte	0x3
 2130 0756 23       		.byte	0x23
 2131 0757 A801     		.uleb128 0xa8
 2132 0759 09       		.uleb128 0x9
 2133 075a 33050000 		.4byte	.LASF162
 2134 075e 07       		.byte	0x7
 2135 075f 490C     		.2byte	0xc49
 2136 0761 CB030000 		.4byte	0x3cb
 2137 0765 03       		.byte	0x3
 2138 0766 23       		.byte	0x23
 2139 0767 AC01     		.uleb128 0xac
 2140 0769 09       		.uleb128 0x9
 2141 076a 02020000 		.4byte	.LASF163
 2142 076e 07       		.byte	0x7
 2143 076f 4A0C     		.2byte	0xc4a
 2144 0771 CB030000 		.4byte	0x3cb
 2145 0775 03       		.byte	0x3
 2146 0776 23       		.byte	0x23
 2147 0777 B001     		.uleb128 0xb0
 2148 0779 09       		.uleb128 0x9
 2149 077a AB030000 		.4byte	.LASF164
 2150 077e 07       		.byte	0x7
 2151 077f 4B0C     		.2byte	0xc4b
 2152 0781 CB030000 		.4byte	0x3cb
 2153 0785 03       		.byte	0x3
 2154 0786 23       		.byte	0x23
 2155 0787 B401     		.uleb128 0xb4
 2156 0789 09       		.uleb128 0x9
 2157 078a CB040000 		.4byte	.LASF165
 2158 078e 07       		.byte	0x7
 2159 078f 4C0C     		.2byte	0xc4c
 2160 0791 FB070000 		.4byte	0x7fb
 2161 0795 03       		.byte	0x3
 2162 0796 23       		.byte	0x23
 2163 0797 B801     		.uleb128 0xb8
 2164 0799 09       		.uleb128 0x9
 2165 079a 260A0000 		.4byte	.LASF166
 2166 079e 07       		.byte	0x7
 2167 079f 4D0C     		.2byte	0xc4d
 2168 07a1 CB030000 		.4byte	0x3cb
 2169 07a5 03       		.byte	0x3
 2170 07a6 23       		.byte	0x23
 2171 07a7 F001     		.uleb128 0xf0
 2172 07a9 00       		.byte	0
 2173 07aa 0D       		.uleb128 0xd
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 112


 2174 07ab 38050000 		.4byte	0x538
 2175 07af 10       		.uleb128 0x10
 2176 07b0 AA070000 		.4byte	0x7aa
 2177 07b4 0D       		.uleb128 0xd
 2178 07b5 48050000 		.4byte	0x548
 2179 07b9 10       		.uleb128 0x10
 2180 07ba B4070000 		.4byte	0x7b4
 2181 07be 0D       		.uleb128 0xd
 2182 07bf 48050000 		.4byte	0x548
 2183 07c3 10       		.uleb128 0x10
 2184 07c4 BE070000 		.4byte	0x7be
 2185 07c8 0D       		.uleb128 0xd
 2186 07c9 48050000 		.4byte	0x548
 2187 07cd 10       		.uleb128 0x10
 2188 07ce C8070000 		.4byte	0x7c8
 2189 07d2 0D       		.uleb128 0xd
 2190 07d3 48050000 		.4byte	0x548
 2191 07d7 10       		.uleb128 0x10
 2192 07d8 D2070000 		.4byte	0x7d2
 2193 07dc 0D       		.uleb128 0xd
 2194 07dd 58050000 		.4byte	0x558
 2195 07e1 10       		.uleb128 0x10
 2196 07e2 DC070000 		.4byte	0x7dc
 2197 07e6 0B       		.uleb128 0xb
 2198 07e7 B0040000 		.4byte	0x4b0
 2199 07eb F6070000 		.4byte	0x7f6
 2200 07ef 0C       		.uleb128 0xc
 2201 07f0 B4000000 		.4byte	0xb4
 2202 07f4 0D       		.byte	0xd
 2203 07f5 00       		.byte	0
 2204 07f6 0D       		.uleb128 0xd
 2205 07f7 E6070000 		.4byte	0x7e6
 2206 07fb 10       		.uleb128 0x10
 2207 07fc F6070000 		.4byte	0x7f6
 2208 0800 0E       		.uleb128 0xe
 2209 0801 E90A0000 		.4byte	.LASF167
 2210 0805 07       		.byte	0x7
 2211 0806 500C     		.2byte	0xc50
 2212 0808 68050000 		.4byte	0x568
 2213 080c 08       		.uleb128 0x8
 2214 080d 0803     		.2byte	0x308
 2215 080f 07       		.byte	0x7
 2216 0810 2440     		.2byte	0x4024
 2217 0812 0D0B0000 		.4byte	0xb0d
 2218 0816 09       		.uleb128 0x9
 2219 0817 2C0B0000 		.4byte	.LASF168
 2220 081b 07       		.byte	0x7
 2221 081c 3F43     		.2byte	0x433f
 2222 081e 1D0B0000 		.4byte	0xb1d
 2223 0822 02       		.byte	0x2
 2224 0823 23       		.byte	0x23
 2225 0824 00       		.uleb128 0
 2226 0825 09       		.uleb128 0x9
 2227 0826 95040000 		.4byte	.LASF141
 2228 082a 07       		.byte	0x7
 2229 082b 4043     		.2byte	0x4340
 2230 082d 270B0000 		.4byte	0xb27
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 113


 2231 0831 02       		.byte	0x2
 2232 0832 23       		.byte	0x23
 2233 0833 1C       		.uleb128 0x1c
 2234 0834 09       		.uleb128 0x9
 2235 0835 F6030000 		.4byte	.LASF169
 2236 0839 07       		.byte	0x7
 2237 083a 4143     		.2byte	0x4341
 2238 083c CB030000 		.4byte	0x3cb
 2239 0840 02       		.byte	0x2
 2240 0841 23       		.byte	0x23
 2241 0842 20       		.uleb128 0x20
 2242 0843 09       		.uleb128 0x9
 2243 0844 5E090000 		.4byte	.LASF170
 2244 0848 07       		.byte	0x7
 2245 0849 4243     		.2byte	0x4342
 2246 084b CB030000 		.4byte	0x3cb
 2247 084f 02       		.byte	0x2
 2248 0850 23       		.byte	0x23
 2249 0851 24       		.uleb128 0x24
 2250 0852 09       		.uleb128 0x9
 2251 0853 36080000 		.4byte	.LASF171
 2252 0857 07       		.byte	0x7
 2253 0858 4343     		.2byte	0x4343
 2254 085a B0040000 		.4byte	0x4b0
 2255 085e 02       		.byte	0x2
 2256 085f 23       		.byte	0x23
 2257 0860 28       		.uleb128 0x28
 2258 0861 09       		.uleb128 0x9
 2259 0862 990A0000 		.4byte	.LASF172
 2260 0866 07       		.byte	0x7
 2261 0867 4443     		.2byte	0x4344
 2262 0869 CB030000 		.4byte	0x3cb
 2263 086d 02       		.byte	0x2
 2264 086e 23       		.byte	0x23
 2265 086f 2C       		.uleb128 0x2c
 2266 0870 09       		.uleb128 0x9
 2267 0871 230B0000 		.4byte	.LASF173
 2268 0875 07       		.byte	0x7
 2269 0876 4543     		.2byte	0x4345
 2270 0878 CB030000 		.4byte	0x3cb
 2271 087c 02       		.byte	0x2
 2272 087d 23       		.byte	0x23
 2273 087e 30       		.uleb128 0x30
 2274 087f 09       		.uleb128 0x9
 2275 0880 1D0A0000 		.4byte	.LASF174
 2276 0884 07       		.byte	0x7
 2277 0885 4643     		.2byte	0x4346
 2278 0887 B0040000 		.4byte	0x4b0
 2279 088b 02       		.byte	0x2
 2280 088c 23       		.byte	0x23
 2281 088d 34       		.uleb128 0x34
 2282 088e 09       		.uleb128 0x9
 2283 088f 8A080000 		.4byte	.LASF175
 2284 0893 07       		.byte	0x7
 2285 0894 4743     		.2byte	0x4347
 2286 0896 B0040000 		.4byte	0x4b0
 2287 089a 02       		.byte	0x2
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 114


 2288 089b 23       		.byte	0x23
 2289 089c 38       		.uleb128 0x38
 2290 089d 09       		.uleb128 0x9
 2291 089e 74080000 		.4byte	.LASF176
 2292 08a2 07       		.byte	0x7
 2293 08a3 4843     		.2byte	0x4348
 2294 08a5 B0040000 		.4byte	0x4b0
 2295 08a9 02       		.byte	0x2
 2296 08aa 23       		.byte	0x23
 2297 08ab 3C       		.uleb128 0x3c
 2298 08ac 09       		.uleb128 0x9
 2299 08ad C30A0000 		.4byte	.LASF177
 2300 08b1 07       		.byte	0x7
 2301 08b2 4943     		.2byte	0x4349
 2302 08b4 B0040000 		.4byte	0x4b0
 2303 08b8 02       		.byte	0x2
 2304 08b9 23       		.byte	0x23
 2305 08ba 40       		.uleb128 0x40
 2306 08bb 09       		.uleb128 0x9
 2307 08bc B5000000 		.4byte	.LASF178
 2308 08c0 07       		.byte	0x7
 2309 08c1 4A43     		.2byte	0x434a
 2310 08c3 B0040000 		.4byte	0x4b0
 2311 08c7 02       		.byte	0x2
 2312 08c8 23       		.byte	0x23
 2313 08c9 44       		.uleb128 0x44
 2314 08ca 09       		.uleb128 0x9
 2315 08cb C8090000 		.4byte	.LASF179
 2316 08cf 07       		.byte	0x7
 2317 08d0 4B43     		.2byte	0x434b
 2318 08d2 B0040000 		.4byte	0x4b0
 2319 08d6 02       		.byte	0x2
 2320 08d7 23       		.byte	0x23
 2321 08d8 48       		.uleb128 0x48
 2322 08d9 09       		.uleb128 0x9
 2323 08da FD060000 		.4byte	.LASF180
 2324 08de 07       		.byte	0x7
 2325 08df 4C43     		.2byte	0x434c
 2326 08e1 B0040000 		.4byte	0x4b0
 2327 08e5 02       		.byte	0x2
 2328 08e6 23       		.byte	0x23
 2329 08e7 4C       		.uleb128 0x4c
 2330 08e8 09       		.uleb128 0x9
 2331 08e9 2E0A0000 		.4byte	.LASF181
 2332 08ed 07       		.byte	0x7
 2333 08ee 4D43     		.2byte	0x434d
 2334 08f0 B0040000 		.4byte	0x4b0
 2335 08f4 02       		.byte	0x2
 2336 08f5 23       		.byte	0x23
 2337 08f6 50       		.uleb128 0x50
 2338 08f7 09       		.uleb128 0x9
 2339 08f8 D6070000 		.4byte	.LASF182
 2340 08fc 07       		.byte	0x7
 2341 08fd 4E43     		.2byte	0x434e
 2342 08ff B0040000 		.4byte	0x4b0
 2343 0903 02       		.byte	0x2
 2344 0904 23       		.byte	0x23
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 115


 2345 0905 54       		.uleb128 0x54
 2346 0906 09       		.uleb128 0x9
 2347 0907 CF070000 		.4byte	.LASF183
 2348 090b 07       		.byte	0x7
 2349 090c 4F43     		.2byte	0x434f
 2350 090e B0040000 		.4byte	0x4b0
 2351 0912 02       		.byte	0x2
 2352 0913 23       		.byte	0x23
 2353 0914 58       		.uleb128 0x58
 2354 0915 09       		.uleb128 0x9
 2355 0916 870A0000 		.4byte	.LASF184
 2356 091a 07       		.byte	0x7
 2357 091b 5043     		.2byte	0x4350
 2358 091d B0040000 		.4byte	0x4b0
 2359 0921 02       		.byte	0x2
 2360 0922 23       		.byte	0x23
 2361 0923 5C       		.uleb128 0x5c
 2362 0924 09       		.uleb128 0x9
 2363 0925 2C0C0000 		.4byte	.LASF185
 2364 0929 07       		.byte	0x7
 2365 092a 5143     		.2byte	0x4351
 2366 092c B0040000 		.4byte	0x4b0
 2367 0930 02       		.byte	0x2
 2368 0931 23       		.byte	0x23
 2369 0932 60       		.uleb128 0x60
 2370 0933 09       		.uleb128 0x9
 2371 0934 BF080000 		.4byte	.LASF186
 2372 0938 07       		.byte	0x7
 2373 0939 5243     		.2byte	0x4352
 2374 093b B0040000 		.4byte	0x4b0
 2375 093f 02       		.byte	0x2
 2376 0940 23       		.byte	0x23
 2377 0941 64       		.uleb128 0x64
 2378 0942 09       		.uleb128 0x9
 2379 0943 DF070000 		.4byte	.LASF187
 2380 0947 07       		.byte	0x7
 2381 0948 5343     		.2byte	0x4353
 2382 094a B0040000 		.4byte	0x4b0
 2383 094e 02       		.byte	0x2
 2384 094f 23       		.byte	0x23
 2385 0950 68       		.uleb128 0x68
 2386 0951 09       		.uleb128 0x9
 2387 0952 8B030000 		.4byte	.LASF188
 2388 0956 07       		.byte	0x7
 2389 0957 5443     		.2byte	0x4354
 2390 0959 B0040000 		.4byte	0x4b0
 2391 095d 02       		.byte	0x2
 2392 095e 23       		.byte	0x23
 2393 095f 6C       		.uleb128 0x6c
 2394 0960 09       		.uleb128 0x9
 2395 0961 3F0A0000 		.4byte	.LASF189
 2396 0965 07       		.byte	0x7
 2397 0966 5543     		.2byte	0x4355
 2398 0968 B0040000 		.4byte	0x4b0
 2399 096c 02       		.byte	0x2
 2400 096d 23       		.byte	0x23
 2401 096e 70       		.uleb128 0x70
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 116


 2402 096f 09       		.uleb128 0x9
 2403 0970 6A080000 		.4byte	.LASF190
 2404 0974 07       		.byte	0x7
 2405 0975 5643     		.2byte	0x4356
 2406 0977 B0040000 		.4byte	0x4b0
 2407 097b 02       		.byte	0x2
 2408 097c 23       		.byte	0x23
 2409 097d 74       		.uleb128 0x74
 2410 097e 09       		.uleb128 0x9
 2411 097f 32060000 		.4byte	.LASF191
 2412 0983 07       		.byte	0x7
 2413 0984 5743     		.2byte	0x4357
 2414 0986 B0040000 		.4byte	0x4b0
 2415 098a 02       		.byte	0x2
 2416 098b 23       		.byte	0x23
 2417 098c 78       		.uleb128 0x78
 2418 098d 09       		.uleb128 0x9
 2419 098e 28060000 		.4byte	.LASF192
 2420 0992 07       		.byte	0x7
 2421 0993 5843     		.2byte	0x4358
 2422 0995 B0040000 		.4byte	0x4b0
 2423 0999 02       		.byte	0x2
 2424 099a 23       		.byte	0x23
 2425 099b 7C       		.uleb128 0x7c
 2426 099c 09       		.uleb128 0x9
 2427 099d 00090000 		.4byte	.LASF193
 2428 09a1 07       		.byte	0x7
 2429 09a2 5943     		.2byte	0x4359
 2430 09a4 B0040000 		.4byte	0x4b0
 2431 09a8 03       		.byte	0x3
 2432 09a9 23       		.byte	0x23
 2433 09aa 8001     		.uleb128 0x80
 2434 09ac 09       		.uleb128 0x9
 2435 09ad DA030000 		.4byte	.LASF194
 2436 09b1 07       		.byte	0x7
 2437 09b2 5A43     		.2byte	0x435a
 2438 09b4 B0040000 		.4byte	0x4b0
 2439 09b8 03       		.byte	0x3
 2440 09b9 23       		.byte	0x23
 2441 09ba 8401     		.uleb128 0x84
 2442 09bc 09       		.uleb128 0x9
 2443 09bd 150A0000 		.4byte	.LASF195
 2444 09c1 07       		.byte	0x7
 2445 09c2 5B43     		.2byte	0x435b
 2446 09c4 B0040000 		.4byte	0x4b0
 2447 09c8 03       		.byte	0x3
 2448 09c9 23       		.byte	0x23
 2449 09ca 8801     		.uleb128 0x88
 2450 09cc 09       		.uleb128 0x9
 2451 09cd C8010000 		.4byte	.LASF196
 2452 09d1 07       		.byte	0x7
 2453 09d2 5C43     		.2byte	0x435c
 2454 09d4 B0040000 		.4byte	0x4b0
 2455 09d8 03       		.byte	0x3
 2456 09d9 23       		.byte	0x23
 2457 09da 8C01     		.uleb128 0x8c
 2458 09dc 09       		.uleb128 0x9
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 117


 2459 09dd 5D0C0000 		.4byte	.LASF197
 2460 09e1 07       		.byte	0x7
 2461 09e2 5D43     		.2byte	0x435d
 2462 09e4 B0040000 		.4byte	0x4b0
 2463 09e8 03       		.byte	0x3
 2464 09e9 23       		.byte	0x23
 2465 09ea 9001     		.uleb128 0x90
 2466 09ec 09       		.uleb128 0x9
 2467 09ed 4F030000 		.4byte	.LASF198
 2468 09f1 07       		.byte	0x7
 2469 09f2 5E43     		.2byte	0x435e
 2470 09f4 B0040000 		.4byte	0x4b0
 2471 09f8 03       		.byte	0x3
 2472 09f9 23       		.byte	0x23
 2473 09fa 9401     		.uleb128 0x94
 2474 09fc 09       		.uleb128 0x9
 2475 09fd 4C0C0000 		.4byte	.LASF199
 2476 0a01 07       		.byte	0x7
 2477 0a02 5F43     		.2byte	0x435f
 2478 0a04 B0040000 		.4byte	0x4b0
 2479 0a08 03       		.byte	0x3
 2480 0a09 23       		.byte	0x23
 2481 0a0a 9801     		.uleb128 0x98
 2482 0a0c 09       		.uleb128 0x9
 2483 0a0d D7020000 		.4byte	.LASF200
 2484 0a11 07       		.byte	0x7
 2485 0a12 6043     		.2byte	0x4360
 2486 0a14 B0040000 		.4byte	0x4b0
 2487 0a18 03       		.byte	0x3
 2488 0a19 23       		.byte	0x23
 2489 0a1a 9C01     		.uleb128 0x9c
 2490 0a1c 09       		.uleb128 0x9
 2491 0a1d 48040000 		.4byte	.LASF201
 2492 0a21 07       		.byte	0x7
 2493 0a22 6143     		.2byte	0x4361
 2494 0a24 B0040000 		.4byte	0x4b0
 2495 0a28 03       		.byte	0x3
 2496 0a29 23       		.byte	0x23
 2497 0a2a A001     		.uleb128 0xa0
 2498 0a2c 09       		.uleb128 0x9
 2499 0a2d E4030000 		.4byte	.LASF202
 2500 0a31 07       		.byte	0x7
 2501 0a32 6243     		.2byte	0x4362
 2502 0a34 B0040000 		.4byte	0x4b0
 2503 0a38 03       		.byte	0x3
 2504 0a39 23       		.byte	0x23
 2505 0a3a A401     		.uleb128 0xa4
 2506 0a3c 09       		.uleb128 0x9
 2507 0a3d 30070000 		.4byte	.LASF203
 2508 0a41 07       		.byte	0x7
 2509 0a42 6343     		.2byte	0x4363
 2510 0a44 B0040000 		.4byte	0x4b0
 2511 0a48 03       		.byte	0x3
 2512 0a49 23       		.byte	0x23
 2513 0a4a A801     		.uleb128 0xa8
 2514 0a4c 09       		.uleb128 0x9
 2515 0a4d B5070000 		.4byte	.LASF204
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 118


 2516 0a51 07       		.byte	0x7
 2517 0a52 6443     		.2byte	0x4364
 2518 0a54 B0040000 		.4byte	0x4b0
 2519 0a58 03       		.byte	0x3
 2520 0a59 23       		.byte	0x23
 2521 0a5a AC01     		.uleb128 0xac
 2522 0a5c 09       		.uleb128 0x9
 2523 0a5d 8F0C0000 		.4byte	.LASF205
 2524 0a61 07       		.byte	0x7
 2525 0a62 6543     		.2byte	0x4365
 2526 0a64 B0040000 		.4byte	0x4b0
 2527 0a68 03       		.byte	0x3
 2528 0a69 23       		.byte	0x23
 2529 0a6a B001     		.uleb128 0xb0
 2530 0a6c 09       		.uleb128 0x9
 2531 0a6d 750A0000 		.4byte	.LASF206
 2532 0a71 07       		.byte	0x7
 2533 0a72 6643     		.2byte	0x4366
 2534 0a74 B0040000 		.4byte	0x4b0
 2535 0a78 03       		.byte	0x3
 2536 0a79 23       		.byte	0x23
 2537 0a7a B401     		.uleb128 0xb4
 2538 0a7c 09       		.uleb128 0x9
 2539 0a7d BA020000 		.4byte	.LASF207
 2540 0a81 07       		.byte	0x7
 2541 0a82 6743     		.2byte	0x4367
 2542 0a84 B0040000 		.4byte	0x4b0
 2543 0a88 03       		.byte	0x3
 2544 0a89 23       		.byte	0x23
 2545 0a8a B801     		.uleb128 0xb8
 2546 0a8c 09       		.uleb128 0x9
 2547 0a8d 9E040000 		.4byte	.LASF143
 2548 0a91 07       		.byte	0x7
 2549 0a92 6843     		.2byte	0x4368
 2550 0a94 410B0000 		.4byte	0xb41
 2551 0a98 03       		.byte	0x3
 2552 0a99 23       		.byte	0x23
 2553 0a9a BC01     		.uleb128 0xbc
 2554 0a9c 09       		.uleb128 0x9
 2555 0a9d 450A0000 		.4byte	.LASF208
 2556 0aa1 07       		.byte	0x7
 2557 0aa2 6943     		.2byte	0x4369
 2558 0aa4 CB030000 		.4byte	0x3cb
 2559 0aa8 03       		.byte	0x3
 2560 0aa9 23       		.byte	0x23
 2561 0aaa 8004     		.uleb128 0x200
 2562 0aac 09       		.uleb128 0x9
 2563 0aad 27090000 		.4byte	.LASF209
 2564 0ab1 07       		.byte	0x7
 2565 0ab2 6A43     		.2byte	0x436a
 2566 0ab4 CB030000 		.4byte	0x3cb
 2567 0ab8 03       		.byte	0x3
 2568 0ab9 23       		.byte	0x23
 2569 0aba 8404     		.uleb128 0x204
 2570 0abc 09       		.uleb128 0x9
 2571 0abd 7E0C0000 		.4byte	.LASF210
 2572 0ac1 07       		.byte	0x7
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 119


 2573 0ac2 6B43     		.2byte	0x436b
 2574 0ac4 CB030000 		.4byte	0x3cb
 2575 0ac8 03       		.byte	0x3
 2576 0ac9 23       		.byte	0x23
 2577 0aca 8804     		.uleb128 0x208
 2578 0acc 09       		.uleb128 0x9
 2579 0acd 38000000 		.4byte	.LASF211
 2580 0ad1 07       		.byte	0x7
 2581 0ad2 6C43     		.2byte	0x436c
 2582 0ad4 CB030000 		.4byte	0x3cb
 2583 0ad8 03       		.byte	0x3
 2584 0ad9 23       		.byte	0x23
 2585 0ada 8C04     		.uleb128 0x20c
 2586 0adc 09       		.uleb128 0x9
 2587 0add A7040000 		.4byte	.LASF145
 2588 0ae1 07       		.byte	0x7
 2589 0ae2 6D43     		.2byte	0x436d
 2590 0ae4 5B0B0000 		.4byte	0xb5b
 2591 0ae8 03       		.byte	0x3
 2592 0ae9 23       		.byte	0x23
 2593 0aea 9004     		.uleb128 0x210
 2594 0aec 0A       		.uleb128 0xa
 2595 0aed 42424500 		.ascii	"BBE\000"
 2596 0af1 07       		.byte	0x7
 2597 0af2 6E43     		.2byte	0x436e
 2598 0af4 CB030000 		.4byte	0x3cb
 2599 0af8 03       		.byte	0x3
 2600 0af9 23       		.byte	0x23
 2601 0afa 8006     		.uleb128 0x300
 2602 0afc 09       		.uleb128 0x9
 2603 0afd 83030000 		.4byte	.LASF212
 2604 0b01 07       		.byte	0x7
 2605 0b02 6F43     		.2byte	0x436f
 2606 0b04 CB030000 		.4byte	0x3cb
 2607 0b08 03       		.byte	0x3
 2608 0b09 23       		.byte	0x23
 2609 0b0a 8406     		.uleb128 0x304
 2610 0b0c 00       		.byte	0
 2611 0b0d 0B       		.uleb128 0xb
 2612 0b0e CB030000 		.4byte	0x3cb
 2613 0b12 1D0B0000 		.4byte	0xb1d
 2614 0b16 0C       		.uleb128 0xc
 2615 0b17 B4000000 		.4byte	0xb4
 2616 0b1b 06       		.byte	0x6
 2617 0b1c 00       		.byte	0
 2618 0b1d 0D       		.uleb128 0xd
 2619 0b1e 0D0B0000 		.4byte	0xb0d
 2620 0b22 0D       		.uleb128 0xd
 2621 0b23 38050000 		.4byte	0x538
 2622 0b27 10       		.uleb128 0x10
 2623 0b28 220B0000 		.4byte	0xb22
 2624 0b2c 0B       		.uleb128 0xb
 2625 0b2d B0040000 		.4byte	0x4b0
 2626 0b31 3C0B0000 		.4byte	0xb3c
 2627 0b35 0C       		.uleb128 0xc
 2628 0b36 B4000000 		.4byte	0xb4
 2629 0b3a 50       		.byte	0x50
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 120


 2630 0b3b 00       		.byte	0
 2631 0b3c 0D       		.uleb128 0xd
 2632 0b3d 2C0B0000 		.4byte	0xb2c
 2633 0b41 10       		.uleb128 0x10
 2634 0b42 3C0B0000 		.4byte	0xb3c
 2635 0b46 0B       		.uleb128 0xb
 2636 0b47 B0040000 		.4byte	0x4b0
 2637 0b4b 560B0000 		.4byte	0xb56
 2638 0b4f 0C       		.uleb128 0xc
 2639 0b50 B4000000 		.4byte	0xb4
 2640 0b54 3B       		.byte	0x3b
 2641 0b55 00       		.byte	0
 2642 0b56 0D       		.uleb128 0xd
 2643 0b57 460B0000 		.4byte	0xb46
 2644 0b5b 10       		.uleb128 0x10
 2645 0b5c 560B0000 		.4byte	0xb56
 2646 0b60 0E       		.uleb128 0xe
 2647 0b61 DA0A0000 		.4byte	.LASF213
 2648 0b65 07       		.byte	0x7
 2649 0b66 7143     		.2byte	0x4371
 2650 0b68 0C080000 		.4byte	0x80c
 2651 0b6c 08       		.uleb128 0x8
 2652 0b6d C401     		.2byte	0x1c4
 2653 0b6f 07       		.byte	0x7
 2654 0b70 994B     		.2byte	0x4b99
 2655 0b72 6A0E0000 		.4byte	0xe6a
 2656 0b76 09       		.uleb128 0x9
 2657 0b77 1F080000 		.4byte	.LASF214
 2658 0b7b 07       		.byte	0x7
 2659 0b7c 554E     		.2byte	0x4e55
 2660 0b7e B0040000 		.4byte	0x4b0
 2661 0b82 02       		.byte	0x2
 2662 0b83 23       		.byte	0x23
 2663 0b84 00       		.uleb128 0
 2664 0b85 09       		.uleb128 0x9
 2665 0b86 F1080000 		.4byte	.LASF215
 2666 0b8a 07       		.byte	0x7
 2667 0b8b 564E     		.2byte	0x4e56
 2668 0b8d CB030000 		.4byte	0x3cb
 2669 0b91 02       		.byte	0x2
 2670 0b92 23       		.byte	0x23
 2671 0b93 04       		.uleb128 0x4
 2672 0b94 09       		.uleb128 0x9
 2673 0b95 E5070000 		.4byte	.LASF216
 2674 0b99 07       		.byte	0x7
 2675 0b9a 574E     		.2byte	0x4e57
 2676 0b9c CB030000 		.4byte	0x3cb
 2677 0ba0 02       		.byte	0x2
 2678 0ba1 23       		.byte	0x23
 2679 0ba2 08       		.uleb128 0x8
 2680 0ba3 09       		.uleb128 0x9
 2681 0ba4 EC070000 		.4byte	.LASF217
 2682 0ba8 07       		.byte	0x7
 2683 0ba9 584E     		.2byte	0x4e58
 2684 0bab CB030000 		.4byte	0x3cb
 2685 0baf 02       		.byte	0x2
 2686 0bb0 23       		.byte	0x23
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 121


 2687 0bb1 0C       		.uleb128 0xc
 2688 0bb2 09       		.uleb128 0x9
 2689 0bb3 4C050000 		.4byte	.LASF218
 2690 0bb7 07       		.byte	0x7
 2691 0bb8 594E     		.2byte	0x4e59
 2692 0bba CB030000 		.4byte	0x3cb
 2693 0bbe 02       		.byte	0x2
 2694 0bbf 23       		.byte	0x23
 2695 0bc0 10       		.uleb128 0x10
 2696 0bc1 09       		.uleb128 0x9
 2697 0bc2 95040000 		.4byte	.LASF141
 2698 0bc6 07       		.byte	0x7
 2699 0bc7 5A4E     		.2byte	0x4e5a
 2700 0bc9 6F0E0000 		.4byte	0xe6f
 2701 0bcd 02       		.byte	0x2
 2702 0bce 23       		.byte	0x23
 2703 0bcf 14       		.uleb128 0x14
 2704 0bd0 09       		.uleb128 0x9
 2705 0bd1 CE060000 		.4byte	.LASF219
 2706 0bd5 07       		.byte	0x7
 2707 0bd6 5B4E     		.2byte	0x4e5b
 2708 0bd8 CB030000 		.4byte	0x3cb
 2709 0bdc 02       		.byte	0x2
 2710 0bdd 23       		.byte	0x23
 2711 0bde 18       		.uleb128 0x18
 2712 0bdf 09       		.uleb128 0x9
 2713 0be0 E40B0000 		.4byte	.LASF220
 2714 0be4 07       		.byte	0x7
 2715 0be5 5C4E     		.2byte	0x4e5c
 2716 0be7 CB030000 		.4byte	0x3cb
 2717 0beb 02       		.byte	0x2
 2718 0bec 23       		.byte	0x23
 2719 0bed 1C       		.uleb128 0x1c
 2720 0bee 09       		.uleb128 0x9
 2721 0bef 9E040000 		.4byte	.LASF143
 2722 0bf3 07       		.byte	0x7
 2723 0bf4 5D4E     		.2byte	0x4e5d
 2724 0bf6 790E0000 		.4byte	0xe79
 2725 0bfa 02       		.byte	0x2
 2726 0bfb 23       		.byte	0x23
 2727 0bfc 20       		.uleb128 0x20
 2728 0bfd 09       		.uleb128 0x9
 2729 0bfe A8060000 		.4byte	.LASF221
 2730 0c02 07       		.byte	0x7
 2731 0c03 5E4E     		.2byte	0x4e5e
 2732 0c05 CB030000 		.4byte	0x3cb
 2733 0c09 02       		.byte	0x2
 2734 0c0a 23       		.byte	0x23
 2735 0c0b 24       		.uleb128 0x24
 2736 0c0c 09       		.uleb128 0x9
 2737 0c0d 36070000 		.4byte	.LASF222
 2738 0c11 07       		.byte	0x7
 2739 0c12 5F4E     		.2byte	0x4e5f
 2740 0c14 CB030000 		.4byte	0x3cb
 2741 0c18 02       		.byte	0x2
 2742 0c19 23       		.byte	0x23
 2743 0c1a 28       		.uleb128 0x28
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 122


 2744 0c1b 09       		.uleb128 0x9
 2745 0c1c 45050000 		.4byte	.LASF223
 2746 0c20 07       		.byte	0x7
 2747 0c21 604E     		.2byte	0x4e60
 2748 0c23 CB030000 		.4byte	0x3cb
 2749 0c27 02       		.byte	0x2
 2750 0c28 23       		.byte	0x23
 2751 0c29 2C       		.uleb128 0x2c
 2752 0c2a 09       		.uleb128 0x9
 2753 0c2b 3A060000 		.4byte	.LASF224
 2754 0c2f 07       		.byte	0x7
 2755 0c30 614E     		.2byte	0x4e61
 2756 0c32 CB030000 		.4byte	0x3cb
 2757 0c36 02       		.byte	0x2
 2758 0c37 23       		.byte	0x23
 2759 0c38 30       		.uleb128 0x30
 2760 0c39 09       		.uleb128 0x9
 2761 0c3a 09040000 		.4byte	.LASF225
 2762 0c3e 07       		.byte	0x7
 2763 0c3f 624E     		.2byte	0x4e62
 2764 0c41 CB030000 		.4byte	0x3cb
 2765 0c45 02       		.byte	0x2
 2766 0c46 23       		.byte	0x23
 2767 0c47 34       		.uleb128 0x34
 2768 0c48 09       		.uleb128 0x9
 2769 0c49 5C050000 		.4byte	.LASF226
 2770 0c4d 07       		.byte	0x7
 2771 0c4e 634E     		.2byte	0x4e63
 2772 0c50 CB030000 		.4byte	0x3cb
 2773 0c54 02       		.byte	0x2
 2774 0c55 23       		.byte	0x23
 2775 0c56 38       		.uleb128 0x38
 2776 0c57 09       		.uleb128 0x9
 2777 0c58 53050000 		.4byte	.LASF227
 2778 0c5c 07       		.byte	0x7
 2779 0c5d 644E     		.2byte	0x4e64
 2780 0c5f CB030000 		.4byte	0x3cb
 2781 0c63 02       		.byte	0x2
 2782 0c64 23       		.byte	0x23
 2783 0c65 3C       		.uleb128 0x3c
 2784 0c66 09       		.uleb128 0x9
 2785 0c67 48000000 		.4byte	.LASF228
 2786 0c6b 07       		.byte	0x7
 2787 0c6c 654E     		.2byte	0x4e65
 2788 0c6e CB030000 		.4byte	0x3cb
 2789 0c72 02       		.byte	0x2
 2790 0c73 23       		.byte	0x23
 2791 0c74 40       		.uleb128 0x40
 2792 0c75 09       		.uleb128 0x9
 2793 0c76 3F000000 		.4byte	.LASF229
 2794 0c7a 07       		.byte	0x7
 2795 0c7b 664E     		.2byte	0x4e66
 2796 0c7d CB030000 		.4byte	0x3cb
 2797 0c81 02       		.byte	0x2
 2798 0c82 23       		.byte	0x23
 2799 0c83 44       		.uleb128 0x44
 2800 0c84 09       		.uleb128 0x9
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 123


 2801 0c85 9A080000 		.4byte	.LASF230
 2802 0c89 07       		.byte	0x7
 2803 0c8a 674E     		.2byte	0x4e67
 2804 0c8c CB030000 		.4byte	0x3cb
 2805 0c90 02       		.byte	0x2
 2806 0c91 23       		.byte	0x23
 2807 0c92 48       		.uleb128 0x48
 2808 0c93 09       		.uleb128 0x9
 2809 0c94 91080000 		.4byte	.LASF231
 2810 0c98 07       		.byte	0x7
 2811 0c99 684E     		.2byte	0x4e68
 2812 0c9b CB030000 		.4byte	0x3cb
 2813 0c9f 02       		.byte	0x2
 2814 0ca0 23       		.byte	0x23
 2815 0ca1 4C       		.uleb128 0x4c
 2816 0ca2 09       		.uleb128 0x9
 2817 0ca3 C6070000 		.4byte	.LASF232
 2818 0ca7 07       		.byte	0x7
 2819 0ca8 694E     		.2byte	0x4e69
 2820 0caa CB030000 		.4byte	0x3cb
 2821 0cae 02       		.byte	0x2
 2822 0caf 23       		.byte	0x23
 2823 0cb0 50       		.uleb128 0x50
 2824 0cb1 09       		.uleb128 0x9
 2825 0cb2 BD070000 		.4byte	.LASF233
 2826 0cb6 07       		.byte	0x7
 2827 0cb7 6A4E     		.2byte	0x4e6a
 2828 0cb9 CB030000 		.4byte	0x3cb
 2829 0cbd 02       		.byte	0x2
 2830 0cbe 23       		.byte	0x23
 2831 0cbf 54       		.uleb128 0x54
 2832 0cc0 09       		.uleb128 0x9
 2833 0cc1 9F020000 		.4byte	.LASF234
 2834 0cc5 07       		.byte	0x7
 2835 0cc6 6B4E     		.2byte	0x4e6b
 2836 0cc8 CB030000 		.4byte	0x3cb
 2837 0ccc 02       		.byte	0x2
 2838 0ccd 23       		.byte	0x23
 2839 0cce 58       		.uleb128 0x58
 2840 0ccf 09       		.uleb128 0x9
 2841 0cd0 96020000 		.4byte	.LASF235
 2842 0cd4 07       		.byte	0x7
 2843 0cd5 6C4E     		.2byte	0x4e6c
 2844 0cd7 CB030000 		.4byte	0x3cb
 2845 0cdb 02       		.byte	0x2
 2846 0cdc 23       		.byte	0x23
 2847 0cdd 5C       		.uleb128 0x5c
 2848 0cde 09       		.uleb128 0x9
 2849 0cdf 7E0A0000 		.4byte	.LASF236
 2850 0ce3 07       		.byte	0x7
 2851 0ce4 6D4E     		.2byte	0x4e6d
 2852 0ce6 CB030000 		.4byte	0x3cb
 2853 0cea 02       		.byte	0x2
 2854 0ceb 23       		.byte	0x23
 2855 0cec 60       		.uleb128 0x60
 2856 0ced 09       		.uleb128 0x9
 2857 0cee 6C0A0000 		.4byte	.LASF237
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 124


 2858 0cf2 07       		.byte	0x7
 2859 0cf3 6E4E     		.2byte	0x4e6e
 2860 0cf5 CB030000 		.4byte	0x3cb
 2861 0cf9 02       		.byte	0x2
 2862 0cfa 23       		.byte	0x23
 2863 0cfb 64       		.uleb128 0x64
 2864 0cfc 09       		.uleb128 0x9
 2865 0cfd C0050000 		.4byte	.LASF238
 2866 0d01 07       		.byte	0x7
 2867 0d02 6F4E     		.2byte	0x4e6f
 2868 0d04 CB030000 		.4byte	0x3cb
 2869 0d08 02       		.byte	0x2
 2870 0d09 23       		.byte	0x23
 2871 0d0a 68       		.uleb128 0x68
 2872 0d0b 09       		.uleb128 0x9
 2873 0d0c B7050000 		.4byte	.LASF239
 2874 0d10 07       		.byte	0x7
 2875 0d11 704E     		.2byte	0x4e70
 2876 0d13 CB030000 		.4byte	0x3cb
 2877 0d17 02       		.byte	0x2
 2878 0d18 23       		.byte	0x23
 2879 0d19 6C       		.uleb128 0x6c
 2880 0d1a 09       		.uleb128 0x9
 2881 0d1b B0040000 		.4byte	.LASF147
 2882 0d1f 07       		.byte	0x7
 2883 0d20 714E     		.2byte	0x4e71
 2884 0d22 930E0000 		.4byte	0xe93
 2885 0d26 02       		.byte	0x2
 2886 0d27 23       		.byte	0x23
 2887 0d28 70       		.uleb128 0x70
 2888 0d29 09       		.uleb128 0x9
 2889 0d2a FE070000 		.4byte	.LASF240
 2890 0d2e 07       		.byte	0x7
 2891 0d2f 724E     		.2byte	0x4e72
 2892 0d31 CB030000 		.4byte	0x3cb
 2893 0d35 03       		.byte	0x3
 2894 0d36 23       		.byte	0x23
 2895 0d37 C001     		.uleb128 0xc0
 2896 0d39 09       		.uleb128 0x9
 2897 0d3a D3080000 		.4byte	.LASF241
 2898 0d3e 07       		.byte	0x7
 2899 0d3f 734E     		.2byte	0x4e73
 2900 0d41 CB030000 		.4byte	0x3cb
 2901 0d45 03       		.byte	0x3
 2902 0d46 23       		.byte	0x23
 2903 0d47 C401     		.uleb128 0xc4
 2904 0d49 09       		.uleb128 0x9
 2905 0d4a F6090000 		.4byte	.LASF242
 2906 0d4e 07       		.byte	0x7
 2907 0d4f 744E     		.2byte	0x4e74
 2908 0d51 CB030000 		.4byte	0x3cb
 2909 0d55 03       		.byte	0x3
 2910 0d56 23       		.byte	0x23
 2911 0d57 C801     		.uleb128 0xc8
 2912 0d59 09       		.uleb128 0x9
 2913 0d5a B9040000 		.4byte	.LASF149
 2914 0d5e 07       		.byte	0x7
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 125


 2915 0d5f 754E     		.2byte	0x4e75
 2916 0d61 A80E0000 		.4byte	0xea8
 2917 0d65 03       		.byte	0x3
 2918 0d66 23       		.byte	0x23
 2919 0d67 CC01     		.uleb128 0xcc
 2920 0d69 09       		.uleb128 0x9
 2921 0d6a 0A0B0000 		.4byte	.LASF243
 2922 0d6e 07       		.byte	0x7
 2923 0d6f 764E     		.2byte	0x4e76
 2924 0d71 CB030000 		.4byte	0x3cb
 2925 0d75 03       		.byte	0x3
 2926 0d76 23       		.byte	0x23
 2927 0d77 D001     		.uleb128 0xd0
 2928 0d79 09       		.uleb128 0x9
 2929 0d7a D6000000 		.4byte	.LASF244
 2930 0d7e 07       		.byte	0x7
 2931 0d7f 774E     		.2byte	0x4e77
 2932 0d81 CB030000 		.4byte	0x3cb
 2933 0d85 03       		.byte	0x3
 2934 0d86 23       		.byte	0x23
 2935 0d87 D401     		.uleb128 0xd4
 2936 0d89 09       		.uleb128 0x9
 2937 0d8a 090A0000 		.4byte	.LASF245
 2938 0d8e 07       		.byte	0x7
 2939 0d8f 784E     		.2byte	0x4e78
 2940 0d91 CB030000 		.4byte	0x3cb
 2941 0d95 03       		.byte	0x3
 2942 0d96 23       		.byte	0x23
 2943 0d97 D801     		.uleb128 0xd8
 2944 0d99 09       		.uleb128 0x9
 2945 0d9a C2040000 		.4byte	.LASF154
 2946 0d9e 07       		.byte	0x7
 2947 0d9f 794E     		.2byte	0x4e79
 2948 0da1 B20E0000 		.4byte	0xeb2
 2949 0da5 03       		.byte	0x3
 2950 0da6 23       		.byte	0x23
 2951 0da7 DC01     		.uleb128 0xdc
 2952 0da9 09       		.uleb128 0x9
 2953 0daa DC0B0000 		.4byte	.LASF246
 2954 0dae 07       		.byte	0x7
 2955 0daf 7A4E     		.2byte	0x4e7a
 2956 0db1 CB030000 		.4byte	0x3cb
 2957 0db5 03       		.byte	0x3
 2958 0db6 23       		.byte	0x23
 2959 0db7 F001     		.uleb128 0xf0
 2960 0db9 09       		.uleb128 0x9
 2961 0dba F8080000 		.4byte	.LASF247
 2962 0dbe 07       		.byte	0x7
 2963 0dbf 7B4E     		.2byte	0x4e7b
 2964 0dc1 CB030000 		.4byte	0x3cb
 2965 0dc5 03       		.byte	0x3
 2966 0dc6 23       		.byte	0x23
 2967 0dc7 F401     		.uleb128 0xf4
 2968 0dc9 09       		.uleb128 0x9
 2969 0dca CA0A0000 		.4byte	.LASF248
 2970 0dce 07       		.byte	0x7
 2971 0dcf 7C4E     		.2byte	0x4e7c
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 126


 2972 0dd1 CB030000 		.4byte	0x3cb
 2973 0dd5 03       		.byte	0x3
 2974 0dd6 23       		.byte	0x23
 2975 0dd7 F801     		.uleb128 0xf8
 2976 0dd9 09       		.uleb128 0x9
 2977 0dda CB040000 		.4byte	.LASF165
 2978 0dde 07       		.byte	0x7
 2979 0ddf 7D4E     		.2byte	0x4e7d
 2980 0de1 BC0E0000 		.4byte	0xebc
 2981 0de5 03       		.byte	0x3
 2982 0de6 23       		.byte	0x23
 2983 0de7 FC01     		.uleb128 0xfc
 2984 0de9 09       		.uleb128 0x9
 2985 0dea E7090000 		.4byte	.LASF249
 2986 0dee 07       		.byte	0x7
 2987 0def 7E4E     		.2byte	0x4e7e
 2988 0df1 CB030000 		.4byte	0x3cb
 2989 0df5 03       		.byte	0x3
 2990 0df6 23       		.byte	0x23
 2991 0df7 8002     		.uleb128 0x100
 2992 0df9 09       		.uleb128 0x9
 2993 0dfa D4040000 		.4byte	.LASF250
 2994 0dfe 07       		.byte	0x7
 2995 0dff 7F4E     		.2byte	0x4e7f
 2996 0e01 C60E0000 		.4byte	0xec6
 2997 0e05 03       		.byte	0x3
 2998 0e06 23       		.byte	0x23
 2999 0e07 8402     		.uleb128 0x104
 3000 0e09 09       		.uleb128 0x9
 3001 0e0a BE000000 		.4byte	.LASF251
 3002 0e0e 07       		.byte	0x7
 3003 0e0f 804E     		.2byte	0x4e80
 3004 0e11 CB030000 		.4byte	0x3cb
 3005 0e15 03       		.byte	0x3
 3006 0e16 23       		.byte	0x23
 3007 0e17 9002     		.uleb128 0x110
 3008 0e19 09       		.uleb128 0x9
 3009 0e1a 8D000000 		.4byte	.LASF252
 3010 0e1e 07       		.byte	0x7
 3011 0e1f 814E     		.2byte	0x4e81
 3012 0e21 B0040000 		.4byte	0x4b0
 3013 0e25 03       		.byte	0x3
 3014 0e26 23       		.byte	0x23
 3015 0e27 9402     		.uleb128 0x114
 3016 0e29 09       		.uleb128 0x9
 3017 0e2a 900B0000 		.4byte	.LASF253
 3018 0e2e 07       		.byte	0x7
 3019 0e2f 824E     		.2byte	0x4e82
 3020 0e31 CB030000 		.4byte	0x3cb
 3021 0e35 03       		.byte	0x3
 3022 0e36 23       		.byte	0x23
 3023 0e37 9802     		.uleb128 0x118
 3024 0e39 09       		.uleb128 0x9
 3025 0e3a 1D020000 		.4byte	.LASF254
 3026 0e3e 07       		.byte	0x7
 3027 0e3f 834E     		.2byte	0x4e83
 3028 0e41 CB030000 		.4byte	0x3cb
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 127


 3029 0e45 03       		.byte	0x3
 3030 0e46 23       		.byte	0x23
 3031 0e47 9C02     		.uleb128 0x11c
 3032 0e49 09       		.uleb128 0x9
 3033 0e4a DD040000 		.4byte	.LASF255
 3034 0e4e 07       		.byte	0x7
 3035 0e4f 844E     		.2byte	0x4e84
 3036 0e51 E00E0000 		.4byte	0xee0
 3037 0e55 03       		.byte	0x3
 3038 0e56 23       		.byte	0x23
 3039 0e57 A002     		.uleb128 0x120
 3040 0e59 09       		.uleb128 0x9
 3041 0e5a 6E090000 		.4byte	.LASF256
 3042 0e5e 07       		.byte	0x7
 3043 0e5f 854E     		.2byte	0x4e85
 3044 0e61 CB030000 		.4byte	0x3cb
 3045 0e65 03       		.byte	0x3
 3046 0e66 23       		.byte	0x23
 3047 0e67 C003     		.uleb128 0x1c0
 3048 0e69 00       		.byte	0
 3049 0e6a 0D       		.uleb128 0xd
 3050 0e6b 38050000 		.4byte	0x538
 3051 0e6f 10       		.uleb128 0x10
 3052 0e70 6A0E0000 		.4byte	0xe6a
 3053 0e74 0D       		.uleb128 0xd
 3054 0e75 38050000 		.4byte	0x538
 3055 0e79 10       		.uleb128 0x10
 3056 0e7a 740E0000 		.4byte	0xe74
 3057 0e7e 0B       		.uleb128 0xb
 3058 0e7f B0040000 		.4byte	0x4b0
 3059 0e83 8E0E0000 		.4byte	0xe8e
 3060 0e87 0C       		.uleb128 0xc
 3061 0e88 B4000000 		.4byte	0xb4
 3062 0e8c 13       		.byte	0x13
 3063 0e8d 00       		.byte	0
 3064 0e8e 0D       		.uleb128 0xd
 3065 0e8f 7E0E0000 		.4byte	0xe7e
 3066 0e93 10       		.uleb128 0x10
 3067 0e94 8E0E0000 		.4byte	0xe8e
 3068 0e98 0B       		.uleb128 0xb
 3069 0e99 CB030000 		.4byte	0x3cb
 3070 0e9d A80E0000 		.4byte	0xea8
 3071 0ea1 0C       		.uleb128 0xc
 3072 0ea2 B4000000 		.4byte	0xb4
 3073 0ea6 00       		.byte	0
 3074 0ea7 00       		.byte	0
 3075 0ea8 0D       		.uleb128 0xd
 3076 0ea9 980E0000 		.4byte	0xe98
 3077 0ead 0D       		.uleb128 0xd
 3078 0eae 28050000 		.4byte	0x528
 3079 0eb2 10       		.uleb128 0x10
 3080 0eb3 AD0E0000 		.4byte	0xead
 3081 0eb7 0D       		.uleb128 0xd
 3082 0eb8 38050000 		.4byte	0x538
 3083 0ebc 10       		.uleb128 0x10
 3084 0ebd B70E0000 		.4byte	0xeb7
 3085 0ec1 0D       		.uleb128 0xd
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 128


 3086 0ec2 48050000 		.4byte	0x548
 3087 0ec6 10       		.uleb128 0x10
 3088 0ec7 C10E0000 		.4byte	0xec1
 3089 0ecb 0B       		.uleb128 0xb
 3090 0ecc B0040000 		.4byte	0x4b0
 3091 0ed0 DB0E0000 		.4byte	0xedb
 3092 0ed4 0C       		.uleb128 0xc
 3093 0ed5 B4000000 		.4byte	0xb4
 3094 0ed9 27       		.byte	0x27
 3095 0eda 00       		.byte	0
 3096 0edb 0D       		.uleb128 0xd
 3097 0edc CB0E0000 		.4byte	0xecb
 3098 0ee0 10       		.uleb128 0x10
 3099 0ee1 DB0E0000 		.4byte	0xedb
 3100 0ee5 0E       		.uleb128 0xe
 3101 0ee6 72070000 		.4byte	.LASF257
 3102 0eea 07       		.byte	0x7
 3103 0eeb 874E     		.2byte	0x4e87
 3104 0eed 6C0B0000 		.4byte	0xb6c
 3105 0ef1 0F       		.uleb128 0xf
 3106 0ef2 4C       		.byte	0x4c
 3107 0ef3 07       		.byte	0x7
 3108 0ef4 6A56     		.2byte	0x566a
 3109 0ef6 18100000 		.4byte	0x1018
 3110 0efa 0A       		.uleb128 0xa
 3111 0efb 44415400 		.ascii	"DAT\000"
 3112 0eff 07       		.byte	0x7
 3113 0f00 7459     		.2byte	0x5974
 3114 0f02 CB030000 		.4byte	0x3cb
 3115 0f06 02       		.byte	0x2
 3116 0f07 23       		.byte	0x23
 3117 0f08 00       		.uleb128 0
 3118 0f09 09       		.uleb128 0x9
 3119 0f0a 3D0B0000 		.4byte	.LASF258
 3120 0f0e 07       		.byte	0x7
 3121 0f0f 7559     		.2byte	0x5975
 3122 0f11 CB030000 		.4byte	0x3cb
 3123 0f15 02       		.byte	0x2
 3124 0f16 23       		.byte	0x23
 3125 0f17 04       		.uleb128 0x4
 3126 0f18 09       		.uleb128 0x9
 3127 0f19 23060000 		.4byte	.LASF259
 3128 0f1d 07       		.byte	0x7
 3129 0f1e 7659     		.2byte	0x5976
 3130 0f20 CB030000 		.4byte	0x3cb
 3131 0f24 02       		.byte	0x2
 3132 0f25 23       		.byte	0x23
 3133 0f26 08       		.uleb128 0x8
 3134 0f27 09       		.uleb128 0x9
 3135 0f28 C3090000 		.4byte	.LASF260
 3136 0f2c 07       		.byte	0x7
 3137 0f2d 7759     		.2byte	0x5977
 3138 0f2f CB030000 		.4byte	0x3cb
 3139 0f33 02       		.byte	0x2
 3140 0f34 23       		.byte	0x23
 3141 0f35 0C       		.uleb128 0xc
 3142 0f36 09       		.uleb128 0x9
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 129


 3143 0f37 6C070000 		.4byte	.LASF261
 3144 0f3b 07       		.byte	0x7
 3145 0f3c 7859     		.2byte	0x5978
 3146 0f3e CB030000 		.4byte	0x3cb
 3147 0f42 02       		.byte	0x2
 3148 0f43 23       		.byte	0x23
 3149 0f44 10       		.uleb128 0x10
 3150 0f45 09       		.uleb128 0x9
 3151 0f46 F4060000 		.4byte	.LASF262
 3152 0f4a 07       		.byte	0x7
 3153 0f4b 7959     		.2byte	0x5979
 3154 0f4d CB030000 		.4byte	0x3cb
 3155 0f51 02       		.byte	0x2
 3156 0f52 23       		.byte	0x23
 3157 0f53 14       		.uleb128 0x14
 3158 0f54 09       		.uleb128 0x9
 3159 0f55 11070000 		.4byte	.LASF263
 3160 0f59 07       		.byte	0x7
 3161 0f5a 7A59     		.2byte	0x597a
 3162 0f5c CB030000 		.4byte	0x3cb
 3163 0f60 02       		.byte	0x2
 3164 0f61 23       		.byte	0x23
 3165 0f62 18       		.uleb128 0x18
 3166 0f63 09       		.uleb128 0x9
 3167 0f64 890B0000 		.4byte	.LASF264
 3168 0f68 07       		.byte	0x7
 3169 0f69 7B59     		.2byte	0x597b
 3170 0f6b CB030000 		.4byte	0x3cb
 3171 0f6f 02       		.byte	0x2
 3172 0f70 23       		.byte	0x23
 3173 0f71 1C       		.uleb128 0x1c
 3174 0f72 09       		.uleb128 0x9
 3175 0f73 57030000 		.4byte	.LASF265
 3176 0f77 07       		.byte	0x7
 3177 0f78 7C59     		.2byte	0x597c
 3178 0f7a CB030000 		.4byte	0x3cb
 3179 0f7e 02       		.byte	0x2
 3180 0f7f 23       		.byte	0x23
 3181 0f80 20       		.uleb128 0x20
 3182 0f81 09       		.uleb128 0x9
 3183 0f82 19040000 		.4byte	.LASF266
 3184 0f86 07       		.byte	0x7
 3185 0f87 7D59     		.2byte	0x597d
 3186 0f89 CB030000 		.4byte	0x3cb
 3187 0f8d 02       		.byte	0x2
 3188 0f8e 23       		.byte	0x23
 3189 0f8f 24       		.uleb128 0x24
 3190 0f90 09       		.uleb128 0x9
 3191 0f91 8E090000 		.4byte	.LASF267
 3192 0f95 07       		.byte	0x7
 3193 0f96 7E59     		.2byte	0x597e
 3194 0f98 CB030000 		.4byte	0x3cb
 3195 0f9c 02       		.byte	0x2
 3196 0f9d 23       		.byte	0x23
 3197 0f9e 28       		.uleb128 0x28
 3198 0f9f 09       		.uleb128 0x9
 3199 0fa0 A5010000 		.4byte	.LASF268
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 130


 3200 0fa4 07       		.byte	0x7
 3201 0fa5 7F59     		.2byte	0x597f
 3202 0fa7 CB030000 		.4byte	0x3cb
 3203 0fab 02       		.byte	0x2
 3204 0fac 23       		.byte	0x23
 3205 0fad 2C       		.uleb128 0x2c
 3206 0fae 09       		.uleb128 0x9
 3207 0faf 79050000 		.4byte	.LASF269
 3208 0fb3 07       		.byte	0x7
 3209 0fb4 8059     		.2byte	0x5980
 3210 0fb6 CB030000 		.4byte	0x3cb
 3211 0fba 02       		.byte	0x2
 3212 0fbb 23       		.byte	0x23
 3213 0fbc 30       		.uleb128 0x30
 3214 0fbd 09       		.uleb128 0x9
 3215 0fbe 2F080000 		.4byte	.LASF270
 3216 0fc2 07       		.byte	0x7
 3217 0fc3 8159     		.2byte	0x5981
 3218 0fc5 CB030000 		.4byte	0x3cb
 3219 0fc9 02       		.byte	0x2
 3220 0fca 23       		.byte	0x23
 3221 0fcb 34       		.uleb128 0x34
 3222 0fcc 09       		.uleb128 0x9
 3223 0fcd D30A0000 		.4byte	.LASF271
 3224 0fd1 07       		.byte	0x7
 3225 0fd2 8259     		.2byte	0x5982
 3226 0fd4 CB030000 		.4byte	0x3cb
 3227 0fd8 02       		.byte	0x2
 3228 0fd9 23       		.byte	0x23
 3229 0fda 38       		.uleb128 0x38
 3230 0fdb 09       		.uleb128 0x9
 3231 0fdc 24070000 		.4byte	.LASF272
 3232 0fe0 07       		.byte	0x7
 3233 0fe1 8359     		.2byte	0x5983
 3234 0fe3 CB030000 		.4byte	0x3cb
 3235 0fe7 02       		.byte	0x2
 3236 0fe8 23       		.byte	0x23
 3237 0fe9 3C       		.uleb128 0x3c
 3238 0fea 09       		.uleb128 0x9
 3239 0feb B8030000 		.4byte	.LASF273
 3240 0fef 07       		.byte	0x7
 3241 0ff0 8459     		.2byte	0x5984
 3242 0ff2 CB030000 		.4byte	0x3cb
 3243 0ff6 02       		.byte	0x2
 3244 0ff7 23       		.byte	0x23
 3245 0ff8 40       		.uleb128 0x40
 3246 0ff9 09       		.uleb128 0x9
 3247 0ffa C8060000 		.4byte	.LASF274
 3248 0ffe 07       		.byte	0x7
 3249 0fff 8559     		.2byte	0x5985
 3250 1001 CB030000 		.4byte	0x3cb
 3251 1005 02       		.byte	0x2
 3252 1006 23       		.byte	0x23
 3253 1007 44       		.uleb128 0x44
 3254 1008 09       		.uleb128 0x9
 3255 1009 6D0C0000 		.4byte	.LASF275
 3256 100d 07       		.byte	0x7
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 131


 3257 100e 8659     		.2byte	0x5986
 3258 1010 CB030000 		.4byte	0x3cb
 3259 1014 02       		.byte	0x2
 3260 1015 23       		.byte	0x23
 3261 1016 48       		.uleb128 0x48
 3262 1017 00       		.byte	0
 3263 1018 0E       		.uleb128 0xe
 3264 1019 F80A0000 		.4byte	.LASF276
 3265 101d 07       		.byte	0x7
 3266 101e 8959     		.2byte	0x5989
 3267 1020 F10E0000 		.4byte	0xef1
 3268 1024 0E       		.uleb128 0xe
 3269 1025 A6030000 		.4byte	.LASF277
 3270 1029 07       		.byte	0x7
 3271 102a 6074     		.2byte	0x7460
 3272 102c 30100000 		.4byte	0x1030
 3273 1030 0D       		.uleb128 0xd
 3274 1031 7A000000 		.4byte	0x7a
 3275 1035 04       		.uleb128 0x4
 3276 1036 AC010000 		.4byte	.LASF278
 3277 103a 03       		.byte	0x3
 3278 103b 0E       		.byte	0xe
 3279 103c 40100000 		.4byte	0x1040
 3280 1040 11       		.uleb128 0x11
 3281 1041 04       		.byte	0x4
 3282 1042 46100000 		.4byte	0x1046
 3283 1046 12       		.uleb128 0x12
 3284 1047 01       		.byte	0x1
 3285 1048 93000000 		.4byte	0x93
 3286 104c 56100000 		.4byte	0x1056
 3287 1050 13       		.uleb128 0x13
 3288 1051 9E000000 		.4byte	0x9e
 3289 1055 00       		.byte	0
 3290 1056 14       		.uleb128 0x14
 3291 1057 170C0000 		.4byte	.LASF279
 3292 105b 04       		.byte	0x4
 3293 105c 5B       		.byte	0x5b
 3294 105d 01       		.byte	0x1
 3295 105e 03       		.byte	0x3
 3296 105f 6F100000 		.4byte	0x106f
 3297 1063 15       		.uleb128 0x15
 3298 1064 F50B0000 		.4byte	.LASF281
 3299 1068 04       		.byte	0x4
 3300 1069 5B       		.byte	0x5b
 3301 106a 9E000000 		.4byte	0x9e
 3302 106e 00       		.byte	0
 3303 106f 16       		.uleb128 0x16
 3304 1070 5A080000 		.4byte	.LASF283
 3305 1074 04       		.byte	0x4
 3306 1075 6D       		.byte	0x6d
 3307 1076 01       		.byte	0x1
 3308 1077 9E000000 		.4byte	0x9e
 3309 107b 03       		.byte	0x3
 3310 107c 8C100000 		.4byte	0x108c
 3311 1080 17       		.uleb128 0x17
 3312 1081 DC010000 		.4byte	.LASF285
 3313 1085 04       		.byte	0x4
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 132


 3314 1086 6F       		.byte	0x6f
 3315 1087 9E000000 		.4byte	0x9e
 3316 108b 00       		.byte	0
 3317 108c 14       		.uleb128 0x14
 3318 108d E3010000 		.4byte	.LASF280
 3319 1091 04       		.byte	0x4
 3320 1092 68       		.byte	0x68
 3321 1093 01       		.byte	0x1
 3322 1094 03       		.byte	0x3
 3323 1095 A5100000 		.4byte	0x10a5
 3324 1099 15       		.uleb128 0x15
 3325 109a A10A0000 		.4byte	.LASF282
 3326 109e 04       		.byte	0x4
 3327 109f 68       		.byte	0x68
 3328 10a0 9E000000 		.4byte	0x9e
 3329 10a4 00       		.byte	0
 3330 10a5 16       		.uleb128 0x16
 3331 10a6 00060000 		.4byte	.LASF284
 3332 10aa 04       		.byte	0x4
 3333 10ab 60       		.byte	0x60
 3334 10ac 01       		.byte	0x1
 3335 10ad 9E000000 		.4byte	0x9e
 3336 10b1 03       		.byte	0x3
 3337 10b2 C2100000 		.4byte	0x10c2
 3338 10b6 17       		.uleb128 0x17
 3339 10b7 DC010000 		.4byte	.LASF285
 3340 10bb 04       		.byte	0x4
 3341 10bc 62       		.byte	0x62
 3342 10bd 9E000000 		.4byte	0x9e
 3343 10c1 00       		.byte	0
 3344 10c2 16       		.uleb128 0x16
 3345 10c3 C1020000 		.4byte	.LASF286
 3346 10c7 04       		.byte	0x4
 3347 10c8 B0       		.byte	0xb0
 3348 10c9 01       		.byte	0x1
 3349 10ca 9E000000 		.4byte	0x9e
 3350 10ce 03       		.byte	0x3
 3351 10cf DF100000 		.4byte	0x10df
 3352 10d3 17       		.uleb128 0x17
 3353 10d4 DC010000 		.4byte	.LASF285
 3354 10d8 04       		.byte	0x4
 3355 10d9 B2       		.byte	0xb2
 3356 10da 9E000000 		.4byte	0x9e
 3357 10de 00       		.byte	0
 3358 10df 16       		.uleb128 0x16
 3359 10e0 15080000 		.4byte	.LASF287
 3360 10e4 04       		.byte	0x4
 3361 10e5 C9       		.byte	0xc9
 3362 10e6 01       		.byte	0x1
 3363 10e7 9E000000 		.4byte	0x9e
 3364 10eb 03       		.byte	0x3
 3365 10ec FC100000 		.4byte	0x10fc
 3366 10f0 17       		.uleb128 0x17
 3367 10f1 DC010000 		.4byte	.LASF285
 3368 10f5 04       		.byte	0x4
 3369 10f6 CB       		.byte	0xcb
 3370 10f7 9E000000 		.4byte	0x9e
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 133


 3371 10fb 00       		.byte	0
 3372 10fc 18       		.uleb128 0x18
 3373 10fd 68090000 		.4byte	.LASF315
 3374 1101 04       		.byte	0x4
 3375 1102 9B01     		.2byte	0x19b
 3376 1104 01       		.byte	0x1
 3377 1105 03       		.byte	0x3
 3378 1106 19       		.uleb128 0x19
 3379 1107 5D0B0000 		.4byte	.LASF316
 3380 110b 01       		.byte	0x1
 3381 110c DB05     		.2byte	0x5db
 3382 110e 01       		.byte	0x1
 3383 110f 00000000 		.4byte	.LFB48
 3384 1113 DC000000 		.4byte	.LFE48
 3385 1117 00000000 		.4byte	.LLST0
 3386 111b 01       		.byte	0x1
 3387 111c 3F110000 		.4byte	0x113f
 3388 1120 1A       		.uleb128 0x1a
 3389 1121 66020000 		.4byte	.LASF288
 3390 1125 01       		.byte	0x1
 3391 1126 DB05     		.2byte	0x5db
 3392 1128 D7020000 		.4byte	0x2d7
 3393 112c 02       		.byte	0x2
 3394 112d 91       		.byte	0x91
 3395 112e 6F       		.sleb128 -17
 3396 112f 1A       		.uleb128 0x1a
 3397 1130 B00A0000 		.4byte	.LASF289
 3398 1134 01       		.byte	0x1
 3399 1135 DB05     		.2byte	0x5db
 3400 1137 9E000000 		.4byte	0x9e
 3401 113b 02       		.byte	0x2
 3402 113c 91       		.byte	0x91
 3403 113d 68       		.sleb128 -24
 3404 113e 00       		.byte	0
 3405 113f 1B       		.uleb128 0x1b
 3406 1140 D8090000 		.4byte	.LASF317
 3407 1144 01       		.byte	0x1
 3408 1145 FF06     		.2byte	0x6ff
 3409 1147 01       		.byte	0x1
 3410 1148 9E000000 		.4byte	0x9e
 3411 114c DC000000 		.4byte	.LFB62
 3412 1150 24010000 		.4byte	.LFE62
 3413 1154 38000000 		.4byte	.LLST1
 3414 1158 01       		.byte	0x1
 3415 1159 6D110000 		.4byte	0x116d
 3416 115d 1A       		.uleb128 0x1a
 3417 115e 63060000 		.4byte	.LASF290
 3418 1162 01       		.byte	0x1
 3419 1163 FF06     		.2byte	0x6ff
 3420 1165 9E000000 		.4byte	0x9e
 3421 1169 02       		.byte	0x2
 3422 116a 91       		.byte	0x91
 3423 116b 74       		.sleb128 -12
 3424 116c 00       		.byte	0
 3425 116d 1C       		.uleb128 0x1c
 3426 116e 0C000000 		.4byte	.LASF318
 3427 1172 02       		.byte	0x2
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 134


 3428 1173 F305     		.2byte	0x5f3
 3429 1175 01       		.byte	0x1
 3430 1176 24010000 		.4byte	.LFB64
 3431 117a 60010000 		.4byte	.LFE64
 3432 117e 70000000 		.4byte	.LLST2
 3433 1182 01       		.byte	0x1
 3434 1183 1D       		.uleb128 0x1d
 3435 1184 01       		.byte	0x1
 3436 1185 64000000 		.4byte	.LASF291
 3437 1189 03       		.byte	0x3
 3438 118a 23       		.byte	0x23
 3439 118b 01       		.byte	0x1
 3440 118c 93000000 		.4byte	0x93
 3441 1190 60010000 		.4byte	.LFB72
 3442 1194 94010000 		.4byte	.LFE72
 3443 1198 9C000000 		.4byte	.LLST3
 3444 119c 01       		.byte	0x1
 3445 119d B0110000 		.4byte	0x11b0
 3446 11a1 1E       		.uleb128 0x1e
 3447 11a2 6E756D00 		.ascii	"num\000"
 3448 11a6 03       		.byte	0x3
 3449 11a7 23       		.byte	0x23
 3450 11a8 9E000000 		.4byte	0x9e
 3451 11ac 02       		.byte	0x2
 3452 11ad 91       		.byte	0x91
 3453 11ae 74       		.sleb128 -12
 3454 11af 00       		.byte	0
 3455 11b0 1D       		.uleb128 0x1d
 3456 11b1 01       		.byte	0x1
 3457 11b2 86040000 		.4byte	.LASF292
 3458 11b6 03       		.byte	0x3
 3459 11b7 2B       		.byte	0x2b
 3460 11b8 01       		.byte	0x1
 3461 11b9 93000000 		.4byte	0x93
 3462 11bd 94010000 		.4byte	.LFB73
 3463 11c1 C8010000 		.4byte	.LFE73
 3464 11c5 D4000000 		.4byte	.LLST4
 3465 11c9 01       		.byte	0x1
 3466 11ca DD110000 		.4byte	0x11dd
 3467 11ce 1E       		.uleb128 0x1e
 3468 11cf 6E756D00 		.ascii	"num\000"
 3469 11d3 03       		.byte	0x3
 3470 11d4 2B       		.byte	0x2b
 3471 11d5 9E000000 		.4byte	0x9e
 3472 11d9 02       		.byte	0x2
 3473 11da 91       		.byte	0x91
 3474 11db 74       		.sleb128 -12
 3475 11dc 00       		.byte	0
 3476 11dd 1F       		.uleb128 0x1f
 3477 11de 01       		.byte	0x1
 3478 11df 4C060000 		.4byte	.LASF293
 3479 11e3 03       		.byte	0x3
 3480 11e4 37       		.byte	0x37
 3481 11e5 01       		.byte	0x1
 3482 11e6 93000000 		.4byte	0x93
 3483 11ea C8010000 		.4byte	.LFB74
 3484 11ee FC010000 		.4byte	.LFE74
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 135


 3485 11f2 0C010000 		.4byte	.LLST5
 3486 11f6 01       		.byte	0x1
 3487 11f7 0A120000 		.4byte	0x120a
 3488 11fb 20       		.uleb128 0x20
 3489 11fc 9C010000 		.4byte	.LASF294
 3490 1200 03       		.byte	0x3
 3491 1201 37       		.byte	0x37
 3492 1202 0A120000 		.4byte	0x120a
 3493 1206 02       		.byte	0x2
 3494 1207 91       		.byte	0x91
 3495 1208 74       		.sleb128 -12
 3496 1209 00       		.byte	0
 3497 120a 11       		.uleb128 0x11
 3498 120b 04       		.byte	0x4
 3499 120c 35100000 		.4byte	0x1035
 3500 1210 1F       		.uleb128 0x1f
 3501 1211 01       		.byte	0x1
 3502 1212 6E040000 		.4byte	.LASF295
 3503 1216 03       		.byte	0x3
 3504 1217 3E       		.byte	0x3e
 3505 1218 01       		.byte	0x1
 3506 1219 93000000 		.4byte	0x93
 3507 121d FC010000 		.4byte	.LFB75
 3508 1221 30020000 		.4byte	.LFE75
 3509 1225 44010000 		.4byte	.LLST6
 3510 1229 01       		.byte	0x1
 3511 122a 3D120000 		.4byte	0x123d
 3512 122e 20       		.uleb128 0x20
 3513 122f 9C010000 		.4byte	.LASF294
 3514 1233 03       		.byte	0x3
 3515 1234 3E       		.byte	0x3e
 3516 1235 0A120000 		.4byte	0x120a
 3517 1239 02       		.byte	0x2
 3518 123a 91       		.byte	0x91
 3519 123b 74       		.sleb128 -12
 3520 123c 00       		.byte	0
 3521 123d 21       		.uleb128 0x21
 3522 123e 01       		.byte	0x1
 3523 123f A3080000 		.4byte	.LASF319
 3524 1243 03       		.byte	0x3
 3525 1244 45       		.byte	0x45
 3526 1245 01       		.byte	0x1
 3527 1246 9E000000 		.4byte	0x9e
 3528 124a 30020000 		.4byte	.LFB76
 3529 124e 4E020000 		.4byte	.LFE76
 3530 1252 7C010000 		.4byte	.LLST7
 3531 1256 01       		.byte	0x1
 3532 1257 22       		.uleb128 0x22
 3533 1258 01       		.byte	0x1
 3534 1259 2E020000 		.4byte	.LASF302
 3535 125d 03       		.byte	0x3
 3536 125e 4F       		.byte	0x4f
 3537 125f 01       		.byte	0x1
 3538 1260 50020000 		.4byte	.LFB77
 3539 1264 04030000 		.4byte	.LFE77
 3540 1268 A8010000 		.4byte	.LLST8
 3541 126c 01       		.byte	0x1
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 136


 3542 126d 83120000 		.4byte	0x1283
 3543 1271 23       		.uleb128 0x23
 3544 1272 63060000 		.4byte	.LASF290
 3545 1276 03       		.byte	0x3
 3546 1277 51       		.byte	0x51
 3547 1278 9E000000 		.4byte	0x9e
 3548 127c 05       		.byte	0x5
 3549 127d 03       		.byte	0x3
 3550 127e 08000000 		.4byte	ticks.7522
 3551 1282 00       		.byte	0
 3552 1283 1D       		.uleb128 0x1d
 3553 1284 01       		.byte	0x1
 3554 1285 4A020000 		.4byte	.LASF296
 3555 1289 03       		.byte	0x3
 3556 128a AE       		.byte	0xae
 3557 128b 01       		.byte	0x1
 3558 128c 25000000 		.4byte	0x25
 3559 1290 04030000 		.4byte	.LFB78
 3560 1294 E4030000 		.4byte	.LFE78
 3561 1298 D4010000 		.4byte	.LLST9
 3562 129c 01       		.byte	0x1
 3563 129d CF130000 		.4byte	0x13cf
 3564 12a1 23       		.uleb128 0x23
 3565 12a2 C4000000 		.4byte	.LASF297
 3566 12a6 03       		.byte	0x3
 3567 12a7 B0       		.byte	0xb0
 3568 12a8 9E000000 		.4byte	0x9e
 3569 12ac 02       		.byte	0x2
 3570 12ad 91       		.byte	0x91
 3571 12ae 6C       		.sleb128 -20
 3572 12af 23       		.uleb128 0x23
 3573 12b0 3E080000 		.4byte	.LASF298
 3574 12b4 03       		.byte	0x3
 3575 12b5 B0       		.byte	0xb0
 3576 12b6 9E000000 		.4byte	0x9e
 3577 12ba 02       		.byte	0x2
 3578 12bb 91       		.byte	0x91
 3579 12bc 68       		.sleb128 -24
 3580 12bd 23       		.uleb128 0x23
 3581 12be A90B0000 		.4byte	.LASF299
 3582 12c2 03       		.byte	0x3
 3583 12c3 B1       		.byte	0xb1
 3584 12c4 9E000000 		.4byte	0x9e
 3585 12c8 02       		.byte	0x2
 3586 12c9 91       		.byte	0x91
 3587 12ca 60       		.sleb128 -32
 3588 12cb 23       		.uleb128 0x23
 3589 12cc 92010000 		.4byte	.LASF300
 3590 12d0 03       		.byte	0x3
 3591 12d1 B1       		.byte	0xb1
 3592 12d2 9E000000 		.4byte	0x9e
 3593 12d6 02       		.byte	0x2
 3594 12d7 91       		.byte	0x91
 3595 12d8 54       		.sleb128 -44
 3596 12d9 23       		.uleb128 0x23
 3597 12da 4F020000 		.4byte	.LASF301
 3598 12de 03       		.byte	0x3
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 137


 3599 12df B2       		.byte	0xb2
 3600 12e0 CB030000 		.4byte	0x3cb
 3601 12e4 02       		.byte	0x2
 3602 12e5 91       		.byte	0x91
 3603 12e6 4C       		.sleb128 -52
 3604 12e7 24       		.uleb128 0x24
 3605 12e8 667000   		.ascii	"fp\000"
 3606 12eb 03       		.byte	0x3
 3607 12ec B3       		.byte	0xb3
 3608 12ed 35100000 		.4byte	0x1035
 3609 12f1 25       		.uleb128 0x25
 3610 12f2 DF100000 		.4byte	0x10df
 3611 12f6 3E030000 		.4byte	.LBB18
 3612 12fa 46030000 		.4byte	.LBE18
 3613 12fe 03       		.byte	0x3
 3614 12ff E9       		.byte	0xe9
 3615 1300 16130000 		.4byte	0x1316
 3616 1304 26       		.uleb128 0x26
 3617 1305 3E030000 		.4byte	.LBB19
 3618 1309 46030000 		.4byte	.LBE19
 3619 130d 27       		.uleb128 0x27
 3620 130e F0100000 		.4byte	0x10f0
 3621 1312 01       		.byte	0x1
 3622 1313 54       		.byte	0x54
 3623 1314 00       		.byte	0
 3624 1315 00       		.byte	0
 3625 1316 25       		.uleb128 0x25
 3626 1317 C2100000 		.4byte	0x10c2
 3627 131b 48030000 		.4byte	.LBB20
 3628 131f 50030000 		.4byte	.LBE20
 3629 1323 03       		.byte	0x3
 3630 1324 EA       		.byte	0xea
 3631 1325 3B130000 		.4byte	0x133b
 3632 1329 26       		.uleb128 0x26
 3633 132a 48030000 		.4byte	.LBB21
 3634 132e 50030000 		.4byte	.LBE21
 3635 1332 27       		.uleb128 0x27
 3636 1333 D3100000 		.4byte	0x10d3
 3637 1337 01       		.byte	0x1
 3638 1338 54       		.byte	0x54
 3639 1339 00       		.byte	0
 3640 133a 00       		.byte	0
 3641 133b 25       		.uleb128 0x25
 3642 133c 56100000 		.4byte	0x1056
 3643 1340 64030000 		.4byte	.LBB22
 3644 1344 6A030000 		.4byte	.LBE22
 3645 1348 03       		.byte	0x3
 3646 1349 EF       		.byte	0xef
 3647 134a 57130000 		.4byte	0x1357
 3648 134e 28       		.uleb128 0x28
 3649 134f 63100000 		.4byte	0x1063
 3650 1353 02       		.byte	0x2
 3651 1354 91       		.byte	0x91
 3652 1355 64       		.sleb128 -28
 3653 1356 00       		.byte	0
 3654 1357 25       		.uleb128 0x25
 3655 1358 A5100000 		.4byte	0x10a5
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 138


 3656 135c 6A030000 		.4byte	.LBB24
 3657 1360 72030000 		.4byte	.LBE24
 3658 1364 03       		.byte	0x3
 3659 1365 F0       		.byte	0xf0
 3660 1366 7D130000 		.4byte	0x137d
 3661 136a 26       		.uleb128 0x26
 3662 136b 6A030000 		.4byte	.LBB25
 3663 136f 72030000 		.4byte	.LBE25
 3664 1373 27       		.uleb128 0x27
 3665 1374 B6100000 		.4byte	0x10b6
 3666 1378 02       		.byte	0x2
 3667 1379 91       		.byte	0x91
 3668 137a 5C       		.sleb128 -36
 3669 137b 00       		.byte	0
 3670 137c 00       		.byte	0
 3671 137d 25       		.uleb128 0x25
 3672 137e 8C100000 		.4byte	0x108c
 3673 1382 7A030000 		.4byte	.LBB26
 3674 1386 80030000 		.4byte	.LBE26
 3675 138a 03       		.byte	0x3
 3676 138b F1       		.byte	0xf1
 3677 138c 99130000 		.4byte	0x1399
 3678 1390 28       		.uleb128 0x28
 3679 1391 99100000 		.4byte	0x1099
 3680 1395 02       		.byte	0x2
 3681 1396 91       		.byte	0x91
 3682 1397 58       		.sleb128 -40
 3683 1398 00       		.byte	0
 3684 1399 25       		.uleb128 0x25
 3685 139a 6F100000 		.4byte	0x106f
 3686 139e 80030000 		.4byte	.LBB28
 3687 13a2 88030000 		.4byte	.LBE28
 3688 13a6 03       		.byte	0x3
 3689 13a7 F2       		.byte	0xf2
 3690 13a8 BF130000 		.4byte	0x13bf
 3691 13ac 26       		.uleb128 0x26
 3692 13ad 80030000 		.4byte	.LBB29
 3693 13b1 88030000 		.4byte	.LBE29
 3694 13b5 27       		.uleb128 0x27
 3695 13b6 80100000 		.4byte	0x1080
 3696 13ba 02       		.byte	0x2
 3697 13bb 91       		.byte	0x91
 3698 13bc 50       		.sleb128 -48
 3699 13bd 00       		.byte	0
 3700 13be 00       		.byte	0
 3701 13bf 29       		.uleb128 0x29
 3702 13c0 FC100000 		.4byte	0x10fc
 3703 13c4 A8030000 		.4byte	.LBB30
 3704 13c8 AA030000 		.4byte	.LBE30
 3705 13cc 03       		.byte	0x3
 3706 13cd FB       		.byte	0xfb
 3707 13ce 00       		.byte	0
 3708 13cf 2A       		.uleb128 0x2a
 3709 13d0 01       		.byte	0x1
 3710 13d1 A8050000 		.4byte	.LASF303
 3711 13d5 03       		.byte	0x3
 3712 13d6 0101     		.2byte	0x101
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 139


 3713 13d8 01       		.byte	0x1
 3714 13d9 E4030000 		.4byte	.LFB79
 3715 13dd 40040000 		.4byte	.LFE79
 3716 13e1 0C020000 		.4byte	.LLST10
 3717 13e5 01       		.byte	0x1
 3718 13e6 12140000 		.4byte	0x1412
 3719 13ea 2B       		.uleb128 0x2b
 3720 13eb 667000   		.ascii	"fp\000"
 3721 13ee 03       		.byte	0x3
 3722 13ef 0301     		.2byte	0x103
 3723 13f1 35100000 		.4byte	0x1035
 3724 13f5 02       		.byte	0x2
 3725 13f6 91       		.byte	0x91
 3726 13f7 6C       		.sleb128 -20
 3727 13f8 2C       		.uleb128 0x2c
 3728 13f9 56100000 		.4byte	0x1056
 3729 13fd F8030000 		.4byte	.LBB32
 3730 1401 FE030000 		.4byte	.LBE32
 3731 1405 03       		.byte	0x3
 3732 1406 0901     		.2byte	0x109
 3733 1408 28       		.uleb128 0x28
 3734 1409 63100000 		.4byte	0x1063
 3735 140d 02       		.byte	0x2
 3736 140e 91       		.byte	0x91
 3737 140f 68       		.sleb128 -24
 3738 1410 00       		.byte	0
 3739 1411 00       		.byte	0
 3740 1412 2D       		.uleb128 0x2d
 3741 1413 01       		.byte	0x1
 3742 1414 89010000 		.4byte	.LASF304
 3743 1418 03       		.byte	0x3
 3744 1419 2001     		.2byte	0x120
 3745 141b 01       		.byte	0x1
 3746 141c 40040000 		.4byte	.LFB80
 3747 1420 98040000 		.4byte	.LFE80
 3748 1424 44020000 		.4byte	.LLST11
 3749 1428 01       		.byte	0x1
 3750 1429 38140000 		.4byte	0x1438
 3751 142d 2E       		.uleb128 0x2e
 3752 142e 6900     		.ascii	"i\000"
 3753 1430 03       		.byte	0x3
 3754 1431 2201     		.2byte	0x122
 3755 1433 93000000 		.4byte	0x93
 3756 1437 00       		.byte	0
 3757 1438 2F       		.uleb128 0x2f
 3758 1439 01       		.byte	0x1
 3759 143a 8B020000 		.4byte	.LASF320
 3760 143e 03       		.byte	0x3
 3761 143f 5A01     		.2byte	0x15a
 3762 1441 01       		.byte	0x1
 3763 1442 98040000 		.4byte	.LFB81
 3764 1446 B8040000 		.4byte	.LFE81
 3765 144a 70020000 		.4byte	.LLST12
 3766 144e 01       		.byte	0x1
 3767 144f 23       		.uleb128 0x23
 3768 1450 D60B0000 		.4byte	.LASF305
 3769 1454 03       		.byte	0x3
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 140


 3770 1455 AC       		.byte	0xac
 3771 1456 60140000 		.4byte	0x1460
 3772 145a 05       		.byte	0x5
 3773 145b 03       		.byte	0x3
 3774 145c 40000000 		.4byte	atest
 3775 1460 10       		.uleb128 0x10
 3776 1461 25000000 		.4byte	0x25
 3777 1465 30       		.uleb128 0x30
 3778 1466 23000000 		.4byte	.LASF306
 3779 146a 08       		.byte	0x8
 3780 146b 2E       		.byte	0x2e
 3781 146c 9E000000 		.4byte	0x9e
 3782 1470 01       		.byte	0x1
 3783 1471 01       		.byte	0x1
 3784 1472 31       		.uleb128 0x31
 3785 1473 040C0000 		.4byte	.LASF307
 3786 1477 03       		.byte	0x3
 3787 1478 1A       		.byte	0x1a
 3788 1479 35100000 		.4byte	0x1035
 3789 147d 01       		.byte	0x1
 3790 147e 05       		.byte	0x5
 3791 147f 03       		.byte	0x3
 3792 1480 00000000 		.4byte	pfNonSecure_LED_On
 3793 1484 31       		.uleb128 0x31
 3794 1485 58070000 		.4byte	.LASF308
 3795 1489 03       		.byte	0x3
 3796 148a 1C       		.byte	0x1c
 3797 148b 35100000 		.4byte	0x1035
 3798 148f 01       		.byte	0x1
 3799 1490 05       		.byte	0x5
 3800 1491 03       		.byte	0x3
 3801 1492 00000000 		.4byte	pfNonSecure_LED_Off
 3802 1496 0B       		.uleb128 0xb
 3803 1497 BB000000 		.4byte	0xbb
 3804 149b A6140000 		.4byte	0x14a6
 3805 149f 0C       		.uleb128 0xc
 3806 14a0 B4000000 		.4byte	0xb4
 3807 14a4 31       		.byte	0x31
 3808 14a5 00       		.byte	0
 3809 14a6 31       		.uleb128 0x31
 3810 14a7 FC040000 		.4byte	.LASF309
 3811 14ab 03       		.byte	0x3
 3812 14ac AB       		.byte	0xab
 3813 14ad 96140000 		.4byte	0x1496
 3814 14b1 01       		.byte	0x1
 3815 14b2 05       		.byte	0x5
 3816 14b3 03       		.byte	0x3
 3817 14b4 00000000 		.4byte	tests1
 3818 14b8 0B       		.uleb128 0xb
 3819 14b9 BB000000 		.4byte	0xbb
 3820 14bd C8140000 		.4byte	0x14c8
 3821 14c1 0C       		.uleb128 0xc
 3822 14c2 B4000000 		.4byte	0xb4
 3823 14c6 13       		.byte	0x13
 3824 14c7 00       		.byte	0
 3825 14c8 31       		.uleb128 0x31
 3826 14c9 03050000 		.4byte	.LASF310
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 141


 3827 14cd 03       		.byte	0x3
 3828 14ce AB       		.byte	0xab
 3829 14cf B8140000 		.4byte	0x14b8
 3830 14d3 01       		.byte	0x1
 3831 14d4 05       		.byte	0x5
 3832 14d5 03       		.byte	0x3
 3833 14d6 00000000 		.4byte	tests2
 3834 14da 31       		.uleb128 0x31
 3835 14db 0A050000 		.4byte	.LASF311
 3836 14df 03       		.byte	0x3
 3837 14e0 AB       		.byte	0xab
 3838 14e1 B8140000 		.4byte	0x14b8
 3839 14e5 01       		.byte	0x1
 3840 14e6 05       		.byte	0x5
 3841 14e7 03       		.byte	0x3
 3842 14e8 00000000 		.4byte	tests3
 3843 14ec 00       		.byte	0
 3844              		.section	.debug_abbrev,"",%progbits
 3845              	.Ldebug_abbrev0:
 3846 0000 01       		.uleb128 0x1
 3847 0001 11       		.uleb128 0x11
 3848 0002 01       		.byte	0x1
 3849 0003 25       		.uleb128 0x25
 3850 0004 0E       		.uleb128 0xe
 3851 0005 13       		.uleb128 0x13
 3852 0006 0B       		.uleb128 0xb
 3853 0007 03       		.uleb128 0x3
 3854 0008 0E       		.uleb128 0xe
 3855 0009 1B       		.uleb128 0x1b
 3856 000a 0E       		.uleb128 0xe
 3857 000b 11       		.uleb128 0x11
 3858 000c 01       		.uleb128 0x1
 3859 000d 12       		.uleb128 0x12
 3860 000e 01       		.uleb128 0x1
 3861 000f 10       		.uleb128 0x10
 3862 0010 06       		.uleb128 0x6
 3863 0011 00       		.byte	0
 3864 0012 00       		.byte	0
 3865 0013 02       		.uleb128 0x2
 3866 0014 24       		.uleb128 0x24
 3867 0015 00       		.byte	0
 3868 0016 0B       		.uleb128 0xb
 3869 0017 0B       		.uleb128 0xb
 3870 0018 3E       		.uleb128 0x3e
 3871 0019 0B       		.uleb128 0xb
 3872 001a 03       		.uleb128 0x3
 3873 001b 08       		.uleb128 0x8
 3874 001c 00       		.byte	0
 3875 001d 00       		.byte	0
 3876 001e 03       		.uleb128 0x3
 3877 001f 24       		.uleb128 0x24
 3878 0020 00       		.byte	0
 3879 0021 0B       		.uleb128 0xb
 3880 0022 0B       		.uleb128 0xb
 3881 0023 3E       		.uleb128 0x3e
 3882 0024 0B       		.uleb128 0xb
 3883 0025 03       		.uleb128 0x3
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 142


 3884 0026 0E       		.uleb128 0xe
 3885 0027 00       		.byte	0
 3886 0028 00       		.byte	0
 3887 0029 04       		.uleb128 0x4
 3888 002a 16       		.uleb128 0x16
 3889 002b 00       		.byte	0
 3890 002c 03       		.uleb128 0x3
 3891 002d 0E       		.uleb128 0xe
 3892 002e 3A       		.uleb128 0x3a
 3893 002f 0B       		.uleb128 0xb
 3894 0030 3B       		.uleb128 0x3b
 3895 0031 0B       		.uleb128 0xb
 3896 0032 49       		.uleb128 0x49
 3897 0033 13       		.uleb128 0x13
 3898 0034 00       		.byte	0
 3899 0035 00       		.byte	0
 3900 0036 05       		.uleb128 0x5
 3901 0037 04       		.uleb128 0x4
 3902 0038 01       		.byte	0x1
 3903 0039 03       		.uleb128 0x3
 3904 003a 0E       		.uleb128 0xe
 3905 003b 0B       		.uleb128 0xb
 3906 003c 0B       		.uleb128 0xb
 3907 003d 49       		.uleb128 0x49
 3908 003e 13       		.uleb128 0x13
 3909 003f 3A       		.uleb128 0x3a
 3910 0040 0B       		.uleb128 0xb
 3911 0041 3B       		.uleb128 0x3b
 3912 0042 0B       		.uleb128 0xb
 3913 0043 01       		.uleb128 0x1
 3914 0044 13       		.uleb128 0x13
 3915 0045 00       		.byte	0
 3916 0046 00       		.byte	0
 3917 0047 06       		.uleb128 0x6
 3918 0048 28       		.uleb128 0x28
 3919 0049 00       		.byte	0
 3920 004a 03       		.uleb128 0x3
 3921 004b 0E       		.uleb128 0xe
 3922 004c 1C       		.uleb128 0x1c
 3923 004d 0D       		.uleb128 0xd
 3924 004e 00       		.byte	0
 3925 004f 00       		.byte	0
 3926 0050 07       		.uleb128 0x7
 3927 0051 28       		.uleb128 0x28
 3928 0052 00       		.byte	0
 3929 0053 03       		.uleb128 0x3
 3930 0054 0E       		.uleb128 0xe
 3931 0055 1C       		.uleb128 0x1c
 3932 0056 0B       		.uleb128 0xb
 3933 0057 00       		.byte	0
 3934 0058 00       		.byte	0
 3935 0059 08       		.uleb128 0x8
 3936 005a 13       		.uleb128 0x13
 3937 005b 01       		.byte	0x1
 3938 005c 0B       		.uleb128 0xb
 3939 005d 05       		.uleb128 0x5
 3940 005e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 143


 3941 005f 0B       		.uleb128 0xb
 3942 0060 3B       		.uleb128 0x3b
 3943 0061 05       		.uleb128 0x5
 3944 0062 01       		.uleb128 0x1
 3945 0063 13       		.uleb128 0x13
 3946 0064 00       		.byte	0
 3947 0065 00       		.byte	0
 3948 0066 09       		.uleb128 0x9
 3949 0067 0D       		.uleb128 0xd
 3950 0068 00       		.byte	0
 3951 0069 03       		.uleb128 0x3
 3952 006a 0E       		.uleb128 0xe
 3953 006b 3A       		.uleb128 0x3a
 3954 006c 0B       		.uleb128 0xb
 3955 006d 3B       		.uleb128 0x3b
 3956 006e 05       		.uleb128 0x5
 3957 006f 49       		.uleb128 0x49
 3958 0070 13       		.uleb128 0x13
 3959 0071 38       		.uleb128 0x38
 3960 0072 0A       		.uleb128 0xa
 3961 0073 00       		.byte	0
 3962 0074 00       		.byte	0
 3963 0075 0A       		.uleb128 0xa
 3964 0076 0D       		.uleb128 0xd
 3965 0077 00       		.byte	0
 3966 0078 03       		.uleb128 0x3
 3967 0079 08       		.uleb128 0x8
 3968 007a 3A       		.uleb128 0x3a
 3969 007b 0B       		.uleb128 0xb
 3970 007c 3B       		.uleb128 0x3b
 3971 007d 05       		.uleb128 0x5
 3972 007e 49       		.uleb128 0x49
 3973 007f 13       		.uleb128 0x13
 3974 0080 38       		.uleb128 0x38
 3975 0081 0A       		.uleb128 0xa
 3976 0082 00       		.byte	0
 3977 0083 00       		.byte	0
 3978 0084 0B       		.uleb128 0xb
 3979 0085 01       		.uleb128 0x1
 3980 0086 01       		.byte	0x1
 3981 0087 49       		.uleb128 0x49
 3982 0088 13       		.uleb128 0x13
 3983 0089 01       		.uleb128 0x1
 3984 008a 13       		.uleb128 0x13
 3985 008b 00       		.byte	0
 3986 008c 00       		.byte	0
 3987 008d 0C       		.uleb128 0xc
 3988 008e 21       		.uleb128 0x21
 3989 008f 00       		.byte	0
 3990 0090 49       		.uleb128 0x49
 3991 0091 13       		.uleb128 0x13
 3992 0092 2F       		.uleb128 0x2f
 3993 0093 0B       		.uleb128 0xb
 3994 0094 00       		.byte	0
 3995 0095 00       		.byte	0
 3996 0096 0D       		.uleb128 0xd
 3997 0097 35       		.uleb128 0x35
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 144


 3998 0098 00       		.byte	0
 3999 0099 49       		.uleb128 0x49
 4000 009a 13       		.uleb128 0x13
 4001 009b 00       		.byte	0
 4002 009c 00       		.byte	0
 4003 009d 0E       		.uleb128 0xe
 4004 009e 16       		.uleb128 0x16
 4005 009f 00       		.byte	0
 4006 00a0 03       		.uleb128 0x3
 4007 00a1 0E       		.uleb128 0xe
 4008 00a2 3A       		.uleb128 0x3a
 4009 00a3 0B       		.uleb128 0xb
 4010 00a4 3B       		.uleb128 0x3b
 4011 00a5 05       		.uleb128 0x5
 4012 00a6 49       		.uleb128 0x49
 4013 00a7 13       		.uleb128 0x13
 4014 00a8 00       		.byte	0
 4015 00a9 00       		.byte	0
 4016 00aa 0F       		.uleb128 0xf
 4017 00ab 13       		.uleb128 0x13
 4018 00ac 01       		.byte	0x1
 4019 00ad 0B       		.uleb128 0xb
 4020 00ae 0B       		.uleb128 0xb
 4021 00af 3A       		.uleb128 0x3a
 4022 00b0 0B       		.uleb128 0xb
 4023 00b1 3B       		.uleb128 0x3b
 4024 00b2 05       		.uleb128 0x5
 4025 00b3 01       		.uleb128 0x1
 4026 00b4 13       		.uleb128 0x13
 4027 00b5 00       		.byte	0
 4028 00b6 00       		.byte	0
 4029 00b7 10       		.uleb128 0x10
 4030 00b8 26       		.uleb128 0x26
 4031 00b9 00       		.byte	0
 4032 00ba 49       		.uleb128 0x49
 4033 00bb 13       		.uleb128 0x13
 4034 00bc 00       		.byte	0
 4035 00bd 00       		.byte	0
 4036 00be 11       		.uleb128 0x11
 4037 00bf 0F       		.uleb128 0xf
 4038 00c0 00       		.byte	0
 4039 00c1 0B       		.uleb128 0xb
 4040 00c2 0B       		.uleb128 0xb
 4041 00c3 49       		.uleb128 0x49
 4042 00c4 13       		.uleb128 0x13
 4043 00c5 00       		.byte	0
 4044 00c6 00       		.byte	0
 4045 00c7 12       		.uleb128 0x12
 4046 00c8 15       		.uleb128 0x15
 4047 00c9 01       		.byte	0x1
 4048 00ca 27       		.uleb128 0x27
 4049 00cb 0C       		.uleb128 0xc
 4050 00cc 49       		.uleb128 0x49
 4051 00cd 13       		.uleb128 0x13
 4052 00ce 01       		.uleb128 0x1
 4053 00cf 13       		.uleb128 0x13
 4054 00d0 00       		.byte	0
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 145


 4055 00d1 00       		.byte	0
 4056 00d2 13       		.uleb128 0x13
 4057 00d3 05       		.uleb128 0x5
 4058 00d4 00       		.byte	0
 4059 00d5 49       		.uleb128 0x49
 4060 00d6 13       		.uleb128 0x13
 4061 00d7 00       		.byte	0
 4062 00d8 00       		.byte	0
 4063 00d9 14       		.uleb128 0x14
 4064 00da 2E       		.uleb128 0x2e
 4065 00db 01       		.byte	0x1
 4066 00dc 03       		.uleb128 0x3
 4067 00dd 0E       		.uleb128 0xe
 4068 00de 3A       		.uleb128 0x3a
 4069 00df 0B       		.uleb128 0xb
 4070 00e0 3B       		.uleb128 0x3b
 4071 00e1 0B       		.uleb128 0xb
 4072 00e2 27       		.uleb128 0x27
 4073 00e3 0C       		.uleb128 0xc
 4074 00e4 20       		.uleb128 0x20
 4075 00e5 0B       		.uleb128 0xb
 4076 00e6 01       		.uleb128 0x1
 4077 00e7 13       		.uleb128 0x13
 4078 00e8 00       		.byte	0
 4079 00e9 00       		.byte	0
 4080 00ea 15       		.uleb128 0x15
 4081 00eb 05       		.uleb128 0x5
 4082 00ec 00       		.byte	0
 4083 00ed 03       		.uleb128 0x3
 4084 00ee 0E       		.uleb128 0xe
 4085 00ef 3A       		.uleb128 0x3a
 4086 00f0 0B       		.uleb128 0xb
 4087 00f1 3B       		.uleb128 0x3b
 4088 00f2 0B       		.uleb128 0xb
 4089 00f3 49       		.uleb128 0x49
 4090 00f4 13       		.uleb128 0x13
 4091 00f5 00       		.byte	0
 4092 00f6 00       		.byte	0
 4093 00f7 16       		.uleb128 0x16
 4094 00f8 2E       		.uleb128 0x2e
 4095 00f9 01       		.byte	0x1
 4096 00fa 03       		.uleb128 0x3
 4097 00fb 0E       		.uleb128 0xe
 4098 00fc 3A       		.uleb128 0x3a
 4099 00fd 0B       		.uleb128 0xb
 4100 00fe 3B       		.uleb128 0x3b
 4101 00ff 0B       		.uleb128 0xb
 4102 0100 27       		.uleb128 0x27
 4103 0101 0C       		.uleb128 0xc
 4104 0102 49       		.uleb128 0x49
 4105 0103 13       		.uleb128 0x13
 4106 0104 20       		.uleb128 0x20
 4107 0105 0B       		.uleb128 0xb
 4108 0106 01       		.uleb128 0x1
 4109 0107 13       		.uleb128 0x13
 4110 0108 00       		.byte	0
 4111 0109 00       		.byte	0
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 146


 4112 010a 17       		.uleb128 0x17
 4113 010b 34       		.uleb128 0x34
 4114 010c 00       		.byte	0
 4115 010d 03       		.uleb128 0x3
 4116 010e 0E       		.uleb128 0xe
 4117 010f 3A       		.uleb128 0x3a
 4118 0110 0B       		.uleb128 0xb
 4119 0111 3B       		.uleb128 0x3b
 4120 0112 0B       		.uleb128 0xb
 4121 0113 49       		.uleb128 0x49
 4122 0114 13       		.uleb128 0x13
 4123 0115 00       		.byte	0
 4124 0116 00       		.byte	0
 4125 0117 18       		.uleb128 0x18
 4126 0118 2E       		.uleb128 0x2e
 4127 0119 00       		.byte	0
 4128 011a 03       		.uleb128 0x3
 4129 011b 0E       		.uleb128 0xe
 4130 011c 3A       		.uleb128 0x3a
 4131 011d 0B       		.uleb128 0xb
 4132 011e 3B       		.uleb128 0x3b
 4133 011f 05       		.uleb128 0x5
 4134 0120 27       		.uleb128 0x27
 4135 0121 0C       		.uleb128 0xc
 4136 0122 20       		.uleb128 0x20
 4137 0123 0B       		.uleb128 0xb
 4138 0124 00       		.byte	0
 4139 0125 00       		.byte	0
 4140 0126 19       		.uleb128 0x19
 4141 0127 2E       		.uleb128 0x2e
 4142 0128 01       		.byte	0x1
 4143 0129 03       		.uleb128 0x3
 4144 012a 0E       		.uleb128 0xe
 4145 012b 3A       		.uleb128 0x3a
 4146 012c 0B       		.uleb128 0xb
 4147 012d 3B       		.uleb128 0x3b
 4148 012e 05       		.uleb128 0x5
 4149 012f 27       		.uleb128 0x27
 4150 0130 0C       		.uleb128 0xc
 4151 0131 11       		.uleb128 0x11
 4152 0132 01       		.uleb128 0x1
 4153 0133 12       		.uleb128 0x12
 4154 0134 01       		.uleb128 0x1
 4155 0135 40       		.uleb128 0x40
 4156 0136 06       		.uleb128 0x6
 4157 0137 9742     		.uleb128 0x2117
 4158 0139 0C       		.uleb128 0xc
 4159 013a 01       		.uleb128 0x1
 4160 013b 13       		.uleb128 0x13
 4161 013c 00       		.byte	0
 4162 013d 00       		.byte	0
 4163 013e 1A       		.uleb128 0x1a
 4164 013f 05       		.uleb128 0x5
 4165 0140 00       		.byte	0
 4166 0141 03       		.uleb128 0x3
 4167 0142 0E       		.uleb128 0xe
 4168 0143 3A       		.uleb128 0x3a
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 147


 4169 0144 0B       		.uleb128 0xb
 4170 0145 3B       		.uleb128 0x3b
 4171 0146 05       		.uleb128 0x5
 4172 0147 49       		.uleb128 0x49
 4173 0148 13       		.uleb128 0x13
 4174 0149 02       		.uleb128 0x2
 4175 014a 0A       		.uleb128 0xa
 4176 014b 00       		.byte	0
 4177 014c 00       		.byte	0
 4178 014d 1B       		.uleb128 0x1b
 4179 014e 2E       		.uleb128 0x2e
 4180 014f 01       		.byte	0x1
 4181 0150 03       		.uleb128 0x3
 4182 0151 0E       		.uleb128 0xe
 4183 0152 3A       		.uleb128 0x3a
 4184 0153 0B       		.uleb128 0xb
 4185 0154 3B       		.uleb128 0x3b
 4186 0155 05       		.uleb128 0x5
 4187 0156 27       		.uleb128 0x27
 4188 0157 0C       		.uleb128 0xc
 4189 0158 49       		.uleb128 0x49
 4190 0159 13       		.uleb128 0x13
 4191 015a 11       		.uleb128 0x11
 4192 015b 01       		.uleb128 0x1
 4193 015c 12       		.uleb128 0x12
 4194 015d 01       		.uleb128 0x1
 4195 015e 40       		.uleb128 0x40
 4196 015f 06       		.uleb128 0x6
 4197 0160 9642     		.uleb128 0x2116
 4198 0162 0C       		.uleb128 0xc
 4199 0163 01       		.uleb128 0x1
 4200 0164 13       		.uleb128 0x13
 4201 0165 00       		.byte	0
 4202 0166 00       		.byte	0
 4203 0167 1C       		.uleb128 0x1c
 4204 0168 2E       		.uleb128 0x2e
 4205 0169 00       		.byte	0
 4206 016a 03       		.uleb128 0x3
 4207 016b 0E       		.uleb128 0xe
 4208 016c 3A       		.uleb128 0x3a
 4209 016d 0B       		.uleb128 0xb
 4210 016e 3B       		.uleb128 0x3b
 4211 016f 05       		.uleb128 0x5
 4212 0170 27       		.uleb128 0x27
 4213 0171 0C       		.uleb128 0xc
 4214 0172 11       		.uleb128 0x11
 4215 0173 01       		.uleb128 0x1
 4216 0174 12       		.uleb128 0x12
 4217 0175 01       		.uleb128 0x1
 4218 0176 40       		.uleb128 0x40
 4219 0177 06       		.uleb128 0x6
 4220 0178 9742     		.uleb128 0x2117
 4221 017a 0C       		.uleb128 0xc
 4222 017b 00       		.byte	0
 4223 017c 00       		.byte	0
 4224 017d 1D       		.uleb128 0x1d
 4225 017e 2E       		.uleb128 0x2e
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 148


 4226 017f 01       		.byte	0x1
 4227 0180 3F       		.uleb128 0x3f
 4228 0181 0C       		.uleb128 0xc
 4229 0182 03       		.uleb128 0x3
 4230 0183 0E       		.uleb128 0xe
 4231 0184 3A       		.uleb128 0x3a
 4232 0185 0B       		.uleb128 0xb
 4233 0186 3B       		.uleb128 0x3b
 4234 0187 0B       		.uleb128 0xb
 4235 0188 27       		.uleb128 0x27
 4236 0189 0C       		.uleb128 0xc
 4237 018a 49       		.uleb128 0x49
 4238 018b 13       		.uleb128 0x13
 4239 018c 11       		.uleb128 0x11
 4240 018d 01       		.uleb128 0x1
 4241 018e 12       		.uleb128 0x12
 4242 018f 01       		.uleb128 0x1
 4243 0190 40       		.uleb128 0x40
 4244 0191 06       		.uleb128 0x6
 4245 0192 9642     		.uleb128 0x2116
 4246 0194 0C       		.uleb128 0xc
 4247 0195 01       		.uleb128 0x1
 4248 0196 13       		.uleb128 0x13
 4249 0197 00       		.byte	0
 4250 0198 00       		.byte	0
 4251 0199 1E       		.uleb128 0x1e
 4252 019a 05       		.uleb128 0x5
 4253 019b 00       		.byte	0
 4254 019c 03       		.uleb128 0x3
 4255 019d 08       		.uleb128 0x8
 4256 019e 3A       		.uleb128 0x3a
 4257 019f 0B       		.uleb128 0xb
 4258 01a0 3B       		.uleb128 0x3b
 4259 01a1 0B       		.uleb128 0xb
 4260 01a2 49       		.uleb128 0x49
 4261 01a3 13       		.uleb128 0x13
 4262 01a4 02       		.uleb128 0x2
 4263 01a5 0A       		.uleb128 0xa
 4264 01a6 00       		.byte	0
 4265 01a7 00       		.byte	0
 4266 01a8 1F       		.uleb128 0x1f
 4267 01a9 2E       		.uleb128 0x2e
 4268 01aa 01       		.byte	0x1
 4269 01ab 3F       		.uleb128 0x3f
 4270 01ac 0C       		.uleb128 0xc
 4271 01ad 03       		.uleb128 0x3
 4272 01ae 0E       		.uleb128 0xe
 4273 01af 3A       		.uleb128 0x3a
 4274 01b0 0B       		.uleb128 0xb
 4275 01b1 3B       		.uleb128 0x3b
 4276 01b2 0B       		.uleb128 0xb
 4277 01b3 27       		.uleb128 0x27
 4278 01b4 0C       		.uleb128 0xc
 4279 01b5 49       		.uleb128 0x49
 4280 01b6 13       		.uleb128 0x13
 4281 01b7 11       		.uleb128 0x11
 4282 01b8 01       		.uleb128 0x1
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 149


 4283 01b9 12       		.uleb128 0x12
 4284 01ba 01       		.uleb128 0x1
 4285 01bb 40       		.uleb128 0x40
 4286 01bc 06       		.uleb128 0x6
 4287 01bd 9742     		.uleb128 0x2117
 4288 01bf 0C       		.uleb128 0xc
 4289 01c0 01       		.uleb128 0x1
 4290 01c1 13       		.uleb128 0x13
 4291 01c2 00       		.byte	0
 4292 01c3 00       		.byte	0
 4293 01c4 20       		.uleb128 0x20
 4294 01c5 05       		.uleb128 0x5
 4295 01c6 00       		.byte	0
 4296 01c7 03       		.uleb128 0x3
 4297 01c8 0E       		.uleb128 0xe
 4298 01c9 3A       		.uleb128 0x3a
 4299 01ca 0B       		.uleb128 0xb
 4300 01cb 3B       		.uleb128 0x3b
 4301 01cc 0B       		.uleb128 0xb
 4302 01cd 49       		.uleb128 0x49
 4303 01ce 13       		.uleb128 0x13
 4304 01cf 02       		.uleb128 0x2
 4305 01d0 0A       		.uleb128 0xa
 4306 01d1 00       		.byte	0
 4307 01d2 00       		.byte	0
 4308 01d3 21       		.uleb128 0x21
 4309 01d4 2E       		.uleb128 0x2e
 4310 01d5 00       		.byte	0
 4311 01d6 3F       		.uleb128 0x3f
 4312 01d7 0C       		.uleb128 0xc
 4313 01d8 03       		.uleb128 0x3
 4314 01d9 0E       		.uleb128 0xe
 4315 01da 3A       		.uleb128 0x3a
 4316 01db 0B       		.uleb128 0xb
 4317 01dc 3B       		.uleb128 0x3b
 4318 01dd 0B       		.uleb128 0xb
 4319 01de 27       		.uleb128 0x27
 4320 01df 0C       		.uleb128 0xc
 4321 01e0 49       		.uleb128 0x49
 4322 01e1 13       		.uleb128 0x13
 4323 01e2 11       		.uleb128 0x11
 4324 01e3 01       		.uleb128 0x1
 4325 01e4 12       		.uleb128 0x12
 4326 01e5 01       		.uleb128 0x1
 4327 01e6 40       		.uleb128 0x40
 4328 01e7 06       		.uleb128 0x6
 4329 01e8 9742     		.uleb128 0x2117
 4330 01ea 0C       		.uleb128 0xc
 4331 01eb 00       		.byte	0
 4332 01ec 00       		.byte	0
 4333 01ed 22       		.uleb128 0x22
 4334 01ee 2E       		.uleb128 0x2e
 4335 01ef 01       		.byte	0x1
 4336 01f0 3F       		.uleb128 0x3f
 4337 01f1 0C       		.uleb128 0xc
 4338 01f2 03       		.uleb128 0x3
 4339 01f3 0E       		.uleb128 0xe
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 150


 4340 01f4 3A       		.uleb128 0x3a
 4341 01f5 0B       		.uleb128 0xb
 4342 01f6 3B       		.uleb128 0x3b
 4343 01f7 0B       		.uleb128 0xb
 4344 01f8 27       		.uleb128 0x27
 4345 01f9 0C       		.uleb128 0xc
 4346 01fa 11       		.uleb128 0x11
 4347 01fb 01       		.uleb128 0x1
 4348 01fc 12       		.uleb128 0x12
 4349 01fd 01       		.uleb128 0x1
 4350 01fe 40       		.uleb128 0x40
 4351 01ff 06       		.uleb128 0x6
 4352 0200 9642     		.uleb128 0x2116
 4353 0202 0C       		.uleb128 0xc
 4354 0203 01       		.uleb128 0x1
 4355 0204 13       		.uleb128 0x13
 4356 0205 00       		.byte	0
 4357 0206 00       		.byte	0
 4358 0207 23       		.uleb128 0x23
 4359 0208 34       		.uleb128 0x34
 4360 0209 00       		.byte	0
 4361 020a 03       		.uleb128 0x3
 4362 020b 0E       		.uleb128 0xe
 4363 020c 3A       		.uleb128 0x3a
 4364 020d 0B       		.uleb128 0xb
 4365 020e 3B       		.uleb128 0x3b
 4366 020f 0B       		.uleb128 0xb
 4367 0210 49       		.uleb128 0x49
 4368 0211 13       		.uleb128 0x13
 4369 0212 02       		.uleb128 0x2
 4370 0213 0A       		.uleb128 0xa
 4371 0214 00       		.byte	0
 4372 0215 00       		.byte	0
 4373 0216 24       		.uleb128 0x24
 4374 0217 34       		.uleb128 0x34
 4375 0218 00       		.byte	0
 4376 0219 03       		.uleb128 0x3
 4377 021a 08       		.uleb128 0x8
 4378 021b 3A       		.uleb128 0x3a
 4379 021c 0B       		.uleb128 0xb
 4380 021d 3B       		.uleb128 0x3b
 4381 021e 0B       		.uleb128 0xb
 4382 021f 49       		.uleb128 0x49
 4383 0220 13       		.uleb128 0x13
 4384 0221 00       		.byte	0
 4385 0222 00       		.byte	0
 4386 0223 25       		.uleb128 0x25
 4387 0224 1D       		.uleb128 0x1d
 4388 0225 01       		.byte	0x1
 4389 0226 31       		.uleb128 0x31
 4390 0227 13       		.uleb128 0x13
 4391 0228 11       		.uleb128 0x11
 4392 0229 01       		.uleb128 0x1
 4393 022a 12       		.uleb128 0x12
 4394 022b 01       		.uleb128 0x1
 4395 022c 58       		.uleb128 0x58
 4396 022d 0B       		.uleb128 0xb
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 151


 4397 022e 59       		.uleb128 0x59
 4398 022f 0B       		.uleb128 0xb
 4399 0230 01       		.uleb128 0x1
 4400 0231 13       		.uleb128 0x13
 4401 0232 00       		.byte	0
 4402 0233 00       		.byte	0
 4403 0234 26       		.uleb128 0x26
 4404 0235 0B       		.uleb128 0xb
 4405 0236 01       		.byte	0x1
 4406 0237 11       		.uleb128 0x11
 4407 0238 01       		.uleb128 0x1
 4408 0239 12       		.uleb128 0x12
 4409 023a 01       		.uleb128 0x1
 4410 023b 00       		.byte	0
 4411 023c 00       		.byte	0
 4412 023d 27       		.uleb128 0x27
 4413 023e 34       		.uleb128 0x34
 4414 023f 00       		.byte	0
 4415 0240 31       		.uleb128 0x31
 4416 0241 13       		.uleb128 0x13
 4417 0242 02       		.uleb128 0x2
 4418 0243 0A       		.uleb128 0xa
 4419 0244 00       		.byte	0
 4420 0245 00       		.byte	0
 4421 0246 28       		.uleb128 0x28
 4422 0247 05       		.uleb128 0x5
 4423 0248 00       		.byte	0
 4424 0249 31       		.uleb128 0x31
 4425 024a 13       		.uleb128 0x13
 4426 024b 02       		.uleb128 0x2
 4427 024c 0A       		.uleb128 0xa
 4428 024d 00       		.byte	0
 4429 024e 00       		.byte	0
 4430 024f 29       		.uleb128 0x29
 4431 0250 1D       		.uleb128 0x1d
 4432 0251 00       		.byte	0
 4433 0252 31       		.uleb128 0x31
 4434 0253 13       		.uleb128 0x13
 4435 0254 11       		.uleb128 0x11
 4436 0255 01       		.uleb128 0x1
 4437 0256 12       		.uleb128 0x12
 4438 0257 01       		.uleb128 0x1
 4439 0258 58       		.uleb128 0x58
 4440 0259 0B       		.uleb128 0xb
 4441 025a 59       		.uleb128 0x59
 4442 025b 0B       		.uleb128 0xb
 4443 025c 00       		.byte	0
 4444 025d 00       		.byte	0
 4445 025e 2A       		.uleb128 0x2a
 4446 025f 2E       		.uleb128 0x2e
 4447 0260 01       		.byte	0x1
 4448 0261 3F       		.uleb128 0x3f
 4449 0262 0C       		.uleb128 0xc
 4450 0263 03       		.uleb128 0x3
 4451 0264 0E       		.uleb128 0xe
 4452 0265 3A       		.uleb128 0x3a
 4453 0266 0B       		.uleb128 0xb
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 152


 4454 0267 3B       		.uleb128 0x3b
 4455 0268 05       		.uleb128 0x5
 4456 0269 27       		.uleb128 0x27
 4457 026a 0C       		.uleb128 0xc
 4458 026b 11       		.uleb128 0x11
 4459 026c 01       		.uleb128 0x1
 4460 026d 12       		.uleb128 0x12
 4461 026e 01       		.uleb128 0x1
 4462 026f 40       		.uleb128 0x40
 4463 0270 06       		.uleb128 0x6
 4464 0271 9642     		.uleb128 0x2116
 4465 0273 0C       		.uleb128 0xc
 4466 0274 01       		.uleb128 0x1
 4467 0275 13       		.uleb128 0x13
 4468 0276 00       		.byte	0
 4469 0277 00       		.byte	0
 4470 0278 2B       		.uleb128 0x2b
 4471 0279 34       		.uleb128 0x34
 4472 027a 00       		.byte	0
 4473 027b 03       		.uleb128 0x3
 4474 027c 08       		.uleb128 0x8
 4475 027d 3A       		.uleb128 0x3a
 4476 027e 0B       		.uleb128 0xb
 4477 027f 3B       		.uleb128 0x3b
 4478 0280 05       		.uleb128 0x5
 4479 0281 49       		.uleb128 0x49
 4480 0282 13       		.uleb128 0x13
 4481 0283 02       		.uleb128 0x2
 4482 0284 0A       		.uleb128 0xa
 4483 0285 00       		.byte	0
 4484 0286 00       		.byte	0
 4485 0287 2C       		.uleb128 0x2c
 4486 0288 1D       		.uleb128 0x1d
 4487 0289 01       		.byte	0x1
 4488 028a 31       		.uleb128 0x31
 4489 028b 13       		.uleb128 0x13
 4490 028c 11       		.uleb128 0x11
 4491 028d 01       		.uleb128 0x1
 4492 028e 12       		.uleb128 0x12
 4493 028f 01       		.uleb128 0x1
 4494 0290 58       		.uleb128 0x58
 4495 0291 0B       		.uleb128 0xb
 4496 0292 59       		.uleb128 0x59
 4497 0293 05       		.uleb128 0x5
 4498 0294 00       		.byte	0
 4499 0295 00       		.byte	0
 4500 0296 2D       		.uleb128 0x2d
 4501 0297 2E       		.uleb128 0x2e
 4502 0298 01       		.byte	0x1
 4503 0299 3F       		.uleb128 0x3f
 4504 029a 0C       		.uleb128 0xc
 4505 029b 03       		.uleb128 0x3
 4506 029c 0E       		.uleb128 0xe
 4507 029d 3A       		.uleb128 0x3a
 4508 029e 0B       		.uleb128 0xb
 4509 029f 3B       		.uleb128 0x3b
 4510 02a0 05       		.uleb128 0x5
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 153


 4511 02a1 27       		.uleb128 0x27
 4512 02a2 0C       		.uleb128 0xc
 4513 02a3 11       		.uleb128 0x11
 4514 02a4 01       		.uleb128 0x1
 4515 02a5 12       		.uleb128 0x12
 4516 02a6 01       		.uleb128 0x1
 4517 02a7 40       		.uleb128 0x40
 4518 02a8 06       		.uleb128 0x6
 4519 02a9 9742     		.uleb128 0x2117
 4520 02ab 0C       		.uleb128 0xc
 4521 02ac 01       		.uleb128 0x1
 4522 02ad 13       		.uleb128 0x13
 4523 02ae 00       		.byte	0
 4524 02af 00       		.byte	0
 4525 02b0 2E       		.uleb128 0x2e
 4526 02b1 34       		.uleb128 0x34
 4527 02b2 00       		.byte	0
 4528 02b3 03       		.uleb128 0x3
 4529 02b4 08       		.uleb128 0x8
 4530 02b5 3A       		.uleb128 0x3a
 4531 02b6 0B       		.uleb128 0xb
 4532 02b7 3B       		.uleb128 0x3b
 4533 02b8 05       		.uleb128 0x5
 4534 02b9 49       		.uleb128 0x49
 4535 02ba 13       		.uleb128 0x13
 4536 02bb 00       		.byte	0
 4537 02bc 00       		.byte	0
 4538 02bd 2F       		.uleb128 0x2f
 4539 02be 2E       		.uleb128 0x2e
 4540 02bf 00       		.byte	0
 4541 02c0 3F       		.uleb128 0x3f
 4542 02c1 0C       		.uleb128 0xc
 4543 02c2 03       		.uleb128 0x3
 4544 02c3 0E       		.uleb128 0xe
 4545 02c4 3A       		.uleb128 0x3a
 4546 02c5 0B       		.uleb128 0xb
 4547 02c6 3B       		.uleb128 0x3b
 4548 02c7 05       		.uleb128 0x5
 4549 02c8 27       		.uleb128 0x27
 4550 02c9 0C       		.uleb128 0xc
 4551 02ca 11       		.uleb128 0x11
 4552 02cb 01       		.uleb128 0x1
 4553 02cc 12       		.uleb128 0x12
 4554 02cd 01       		.uleb128 0x1
 4555 02ce 40       		.uleb128 0x40
 4556 02cf 06       		.uleb128 0x6
 4557 02d0 9742     		.uleb128 0x2117
 4558 02d2 0C       		.uleb128 0xc
 4559 02d3 00       		.byte	0
 4560 02d4 00       		.byte	0
 4561 02d5 30       		.uleb128 0x30
 4562 02d6 34       		.uleb128 0x34
 4563 02d7 00       		.byte	0
 4564 02d8 03       		.uleb128 0x3
 4565 02d9 0E       		.uleb128 0xe
 4566 02da 3A       		.uleb128 0x3a
 4567 02db 0B       		.uleb128 0xb
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 154


 4568 02dc 3B       		.uleb128 0x3b
 4569 02dd 0B       		.uleb128 0xb
 4570 02de 49       		.uleb128 0x49
 4571 02df 13       		.uleb128 0x13
 4572 02e0 3F       		.uleb128 0x3f
 4573 02e1 0C       		.uleb128 0xc
 4574 02e2 3C       		.uleb128 0x3c
 4575 02e3 0C       		.uleb128 0xc
 4576 02e4 00       		.byte	0
 4577 02e5 00       		.byte	0
 4578 02e6 31       		.uleb128 0x31
 4579 02e7 34       		.uleb128 0x34
 4580 02e8 00       		.byte	0
 4581 02e9 03       		.uleb128 0x3
 4582 02ea 0E       		.uleb128 0xe
 4583 02eb 3A       		.uleb128 0x3a
 4584 02ec 0B       		.uleb128 0xb
 4585 02ed 3B       		.uleb128 0x3b
 4586 02ee 0B       		.uleb128 0xb
 4587 02ef 49       		.uleb128 0x49
 4588 02f0 13       		.uleb128 0x13
 4589 02f1 3F       		.uleb128 0x3f
 4590 02f2 0C       		.uleb128 0xc
 4591 02f3 02       		.uleb128 0x2
 4592 02f4 0A       		.uleb128 0xa
 4593 02f5 00       		.byte	0
 4594 02f6 00       		.byte	0
 4595 02f7 00       		.byte	0
 4596              		.section	.debug_loc,"",%progbits
 4597              	.Ldebug_loc0:
 4598              	.LLST0:
 4599 0000 00000000 		.4byte	.LFB48-.Ltext0
 4600 0004 02000000 		.4byte	.LCFI0-.Ltext0
 4601 0008 0200     		.2byte	0x2
 4602 000a 7D       		.byte	0x7d
 4603 000b 00       		.sleb128 0
 4604 000c 02000000 		.4byte	.LCFI0-.Ltext0
 4605 0010 04000000 		.4byte	.LCFI1-.Ltext0
 4606 0014 0200     		.2byte	0x2
 4607 0016 7D       		.byte	0x7d
 4608 0017 10       		.sleb128 16
 4609 0018 04000000 		.4byte	.LCFI1-.Ltext0
 4610 001c 06000000 		.4byte	.LCFI2-.Ltext0
 4611 0020 0200     		.2byte	0x2
 4612 0022 7D       		.byte	0x7d
 4613 0023 18       		.sleb128 24
 4614 0024 06000000 		.4byte	.LCFI2-.Ltext0
 4615 0028 DC000000 		.4byte	.LFE48-.Ltext0
 4616 002c 0200     		.2byte	0x2
 4617 002e 77       		.byte	0x77
 4618 002f 18       		.sleb128 24
 4619 0030 00000000 		.4byte	0
 4620 0034 00000000 		.4byte	0
 4621              	.LLST1:
 4622 0038 DC000000 		.4byte	.LFB62-.Ltext0
 4623 003c DE000000 		.4byte	.LCFI3-.Ltext0
 4624 0040 0200     		.2byte	0x2
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 155


 4625 0042 7D       		.byte	0x7d
 4626 0043 00       		.sleb128 0
 4627 0044 DE000000 		.4byte	.LCFI3-.Ltext0
 4628 0048 E0000000 		.4byte	.LCFI4-.Ltext0
 4629 004c 0200     		.2byte	0x2
 4630 004e 7D       		.byte	0x7d
 4631 004f 08       		.sleb128 8
 4632 0050 E0000000 		.4byte	.LCFI4-.Ltext0
 4633 0054 E2000000 		.4byte	.LCFI5-.Ltext0
 4634 0058 0200     		.2byte	0x2
 4635 005a 7D       		.byte	0x7d
 4636 005b 10       		.sleb128 16
 4637 005c E2000000 		.4byte	.LCFI5-.Ltext0
 4638 0060 24010000 		.4byte	.LFE62-.Ltext0
 4639 0064 0200     		.2byte	0x2
 4640 0066 77       		.byte	0x77
 4641 0067 10       		.sleb128 16
 4642 0068 00000000 		.4byte	0
 4643 006c 00000000 		.4byte	0
 4644              	.LLST2:
 4645 0070 24010000 		.4byte	.LFB64-.Ltext0
 4646 0074 26010000 		.4byte	.LCFI6-.Ltext0
 4647 0078 0200     		.2byte	0x2
 4648 007a 7D       		.byte	0x7d
 4649 007b 00       		.sleb128 0
 4650 007c 26010000 		.4byte	.LCFI6-.Ltext0
 4651 0080 28010000 		.4byte	.LCFI7-.Ltext0
 4652 0084 0200     		.2byte	0x2
 4653 0086 7D       		.byte	0x7d
 4654 0087 08       		.sleb128 8
 4655 0088 28010000 		.4byte	.LCFI7-.Ltext0
 4656 008c 60010000 		.4byte	.LFE64-.Ltext0
 4657 0090 0200     		.2byte	0x2
 4658 0092 77       		.byte	0x77
 4659 0093 08       		.sleb128 8
 4660 0094 00000000 		.4byte	0
 4661 0098 00000000 		.4byte	0
 4662              	.LLST3:
 4663 009c 60010000 		.4byte	.LFB72-.Ltext0
 4664 00a0 62010000 		.4byte	.LCFI8-.Ltext0
 4665 00a4 0200     		.2byte	0x2
 4666 00a6 7D       		.byte	0x7d
 4667 00a7 00       		.sleb128 0
 4668 00a8 62010000 		.4byte	.LCFI8-.Ltext0
 4669 00ac 64010000 		.4byte	.LCFI9-.Ltext0
 4670 00b0 0200     		.2byte	0x2
 4671 00b2 7D       		.byte	0x7d
 4672 00b3 08       		.sleb128 8
 4673 00b4 64010000 		.4byte	.LCFI9-.Ltext0
 4674 00b8 66010000 		.4byte	.LCFI10-.Ltext0
 4675 00bc 0200     		.2byte	0x2
 4676 00be 7D       		.byte	0x7d
 4677 00bf 10       		.sleb128 16
 4678 00c0 66010000 		.4byte	.LCFI10-.Ltext0
 4679 00c4 94010000 		.4byte	.LFE72-.Ltext0
 4680 00c8 0200     		.2byte	0x2
 4681 00ca 77       		.byte	0x77
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 156


 4682 00cb 10       		.sleb128 16
 4683 00cc 00000000 		.4byte	0
 4684 00d0 00000000 		.4byte	0
 4685              	.LLST4:
 4686 00d4 94010000 		.4byte	.LFB73-.Ltext0
 4687 00d8 96010000 		.4byte	.LCFI11-.Ltext0
 4688 00dc 0200     		.2byte	0x2
 4689 00de 7D       		.byte	0x7d
 4690 00df 00       		.sleb128 0
 4691 00e0 96010000 		.4byte	.LCFI11-.Ltext0
 4692 00e4 98010000 		.4byte	.LCFI12-.Ltext0
 4693 00e8 0200     		.2byte	0x2
 4694 00ea 7D       		.byte	0x7d
 4695 00eb 08       		.sleb128 8
 4696 00ec 98010000 		.4byte	.LCFI12-.Ltext0
 4697 00f0 9A010000 		.4byte	.LCFI13-.Ltext0
 4698 00f4 0200     		.2byte	0x2
 4699 00f6 7D       		.byte	0x7d
 4700 00f7 10       		.sleb128 16
 4701 00f8 9A010000 		.4byte	.LCFI13-.Ltext0
 4702 00fc C8010000 		.4byte	.LFE73-.Ltext0
 4703 0100 0200     		.2byte	0x2
 4704 0102 77       		.byte	0x77
 4705 0103 10       		.sleb128 16
 4706 0104 00000000 		.4byte	0
 4707 0108 00000000 		.4byte	0
 4708              	.LLST5:
 4709 010c C8010000 		.4byte	.LFB74-.Ltext0
 4710 0110 CA010000 		.4byte	.LCFI14-.Ltext0
 4711 0114 0200     		.2byte	0x2
 4712 0116 7D       		.byte	0x7d
 4713 0117 00       		.sleb128 0
 4714 0118 CA010000 		.4byte	.LCFI14-.Ltext0
 4715 011c CC010000 		.4byte	.LCFI15-.Ltext0
 4716 0120 0200     		.2byte	0x2
 4717 0122 7D       		.byte	0x7d
 4718 0123 08       		.sleb128 8
 4719 0124 CC010000 		.4byte	.LCFI15-.Ltext0
 4720 0128 CE010000 		.4byte	.LCFI16-.Ltext0
 4721 012c 0200     		.2byte	0x2
 4722 012e 7D       		.byte	0x7d
 4723 012f 10       		.sleb128 16
 4724 0130 CE010000 		.4byte	.LCFI16-.Ltext0
 4725 0134 FC010000 		.4byte	.LFE74-.Ltext0
 4726 0138 0200     		.2byte	0x2
 4727 013a 77       		.byte	0x77
 4728 013b 10       		.sleb128 16
 4729 013c 00000000 		.4byte	0
 4730 0140 00000000 		.4byte	0
 4731              	.LLST6:
 4732 0144 FC010000 		.4byte	.LFB75-.Ltext0
 4733 0148 FE010000 		.4byte	.LCFI17-.Ltext0
 4734 014c 0200     		.2byte	0x2
 4735 014e 7D       		.byte	0x7d
 4736 014f 00       		.sleb128 0
 4737 0150 FE010000 		.4byte	.LCFI17-.Ltext0
 4738 0154 00020000 		.4byte	.LCFI18-.Ltext0
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 157


 4739 0158 0200     		.2byte	0x2
 4740 015a 7D       		.byte	0x7d
 4741 015b 08       		.sleb128 8
 4742 015c 00020000 		.4byte	.LCFI18-.Ltext0
 4743 0160 02020000 		.4byte	.LCFI19-.Ltext0
 4744 0164 0200     		.2byte	0x2
 4745 0166 7D       		.byte	0x7d
 4746 0167 10       		.sleb128 16
 4747 0168 02020000 		.4byte	.LCFI19-.Ltext0
 4748 016c 30020000 		.4byte	.LFE75-.Ltext0
 4749 0170 0200     		.2byte	0x2
 4750 0172 77       		.byte	0x77
 4751 0173 10       		.sleb128 16
 4752 0174 00000000 		.4byte	0
 4753 0178 00000000 		.4byte	0
 4754              	.LLST7:
 4755 017c 30020000 		.4byte	.LFB76-.Ltext0
 4756 0180 32020000 		.4byte	.LCFI20-.Ltext0
 4757 0184 0200     		.2byte	0x2
 4758 0186 7D       		.byte	0x7d
 4759 0187 00       		.sleb128 0
 4760 0188 32020000 		.4byte	.LCFI20-.Ltext0
 4761 018c 34020000 		.4byte	.LCFI21-.Ltext0
 4762 0190 0200     		.2byte	0x2
 4763 0192 7D       		.byte	0x7d
 4764 0193 08       		.sleb128 8
 4765 0194 34020000 		.4byte	.LCFI21-.Ltext0
 4766 0198 4E020000 		.4byte	.LFE76-.Ltext0
 4767 019c 0200     		.2byte	0x2
 4768 019e 77       		.byte	0x77
 4769 019f 08       		.sleb128 8
 4770 01a0 00000000 		.4byte	0
 4771 01a4 00000000 		.4byte	0
 4772              	.LLST8:
 4773 01a8 50020000 		.4byte	.LFB77-.Ltext0
 4774 01ac 52020000 		.4byte	.LCFI22-.Ltext0
 4775 01b0 0200     		.2byte	0x2
 4776 01b2 7D       		.byte	0x7d
 4777 01b3 00       		.sleb128 0
 4778 01b4 52020000 		.4byte	.LCFI22-.Ltext0
 4779 01b8 54020000 		.4byte	.LCFI23-.Ltext0
 4780 01bc 0200     		.2byte	0x2
 4781 01be 7D       		.byte	0x7d
 4782 01bf 10       		.sleb128 16
 4783 01c0 54020000 		.4byte	.LCFI23-.Ltext0
 4784 01c4 04030000 		.4byte	.LFE77-.Ltext0
 4785 01c8 0200     		.2byte	0x2
 4786 01ca 77       		.byte	0x77
 4787 01cb 10       		.sleb128 16
 4788 01cc 00000000 		.4byte	0
 4789 01d0 00000000 		.4byte	0
 4790              	.LLST9:
 4791 01d4 04030000 		.4byte	.LFB78-.Ltext0
 4792 01d8 06030000 		.4byte	.LCFI24-.Ltext0
 4793 01dc 0200     		.2byte	0x2
 4794 01de 7D       		.byte	0x7d
 4795 01df 00       		.sleb128 0
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 158


 4796 01e0 06030000 		.4byte	.LCFI24-.Ltext0
 4797 01e4 08030000 		.4byte	.LCFI25-.Ltext0
 4798 01e8 0200     		.2byte	0x2
 4799 01ea 7D       		.byte	0x7d
 4800 01eb 0C       		.sleb128 12
 4801 01ec 08030000 		.4byte	.LCFI25-.Ltext0
 4802 01f0 0A030000 		.4byte	.LCFI26-.Ltext0
 4803 01f4 0200     		.2byte	0x2
 4804 01f6 7D       		.byte	0x7d
 4805 01f7 38       		.sleb128 56
 4806 01f8 0A030000 		.4byte	.LCFI26-.Ltext0
 4807 01fc E4030000 		.4byte	.LFE78-.Ltext0
 4808 0200 0200     		.2byte	0x2
 4809 0202 77       		.byte	0x77
 4810 0203 38       		.sleb128 56
 4811 0204 00000000 		.4byte	0
 4812 0208 00000000 		.4byte	0
 4813              	.LLST10:
 4814 020c E4030000 		.4byte	.LFB79-.Ltext0
 4815 0210 E6030000 		.4byte	.LCFI27-.Ltext0
 4816 0214 0200     		.2byte	0x2
 4817 0216 7D       		.byte	0x7d
 4818 0217 00       		.sleb128 0
 4819 0218 E6030000 		.4byte	.LCFI27-.Ltext0
 4820 021c E8030000 		.4byte	.LCFI28-.Ltext0
 4821 0220 0200     		.2byte	0x2
 4822 0222 7D       		.byte	0x7d
 4823 0223 0C       		.sleb128 12
 4824 0224 E8030000 		.4byte	.LCFI28-.Ltext0
 4825 0228 EA030000 		.4byte	.LCFI29-.Ltext0
 4826 022c 0200     		.2byte	0x2
 4827 022e 7D       		.byte	0x7d
 4828 022f 18       		.sleb128 24
 4829 0230 EA030000 		.4byte	.LCFI29-.Ltext0
 4830 0234 40040000 		.4byte	.LFE79-.Ltext0
 4831 0238 0200     		.2byte	0x2
 4832 023a 77       		.byte	0x77
 4833 023b 18       		.sleb128 24
 4834 023c 00000000 		.4byte	0
 4835 0240 00000000 		.4byte	0
 4836              	.LLST11:
 4837 0244 40040000 		.4byte	.LFB80-.Ltext0
 4838 0248 42040000 		.4byte	.LCFI30-.Ltext0
 4839 024c 0200     		.2byte	0x2
 4840 024e 7D       		.byte	0x7d
 4841 024f 00       		.sleb128 0
 4842 0250 42040000 		.4byte	.LCFI30-.Ltext0
 4843 0254 44040000 		.4byte	.LCFI31-.Ltext0
 4844 0258 0200     		.2byte	0x2
 4845 025a 7D       		.byte	0x7d
 4846 025b 08       		.sleb128 8
 4847 025c 44040000 		.4byte	.LCFI31-.Ltext0
 4848 0260 98040000 		.4byte	.LFE80-.Ltext0
 4849 0264 0200     		.2byte	0x2
 4850 0266 77       		.byte	0x77
 4851 0267 08       		.sleb128 8
 4852 0268 00000000 		.4byte	0
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 159


 4853 026c 00000000 		.4byte	0
 4854              	.LLST12:
 4855 0270 98040000 		.4byte	.LFB81-.Ltext0
 4856 0274 9A040000 		.4byte	.LCFI32-.Ltext0
 4857 0278 0200     		.2byte	0x2
 4858 027a 7D       		.byte	0x7d
 4859 027b 00       		.sleb128 0
 4860 027c 9A040000 		.4byte	.LCFI32-.Ltext0
 4861 0280 9C040000 		.4byte	.LCFI33-.Ltext0
 4862 0284 0200     		.2byte	0x2
 4863 0286 7D       		.byte	0x7d
 4864 0287 08       		.sleb128 8
 4865 0288 9C040000 		.4byte	.LCFI33-.Ltext0
 4866 028c B8040000 		.4byte	.LFE81-.Ltext0
 4867 0290 0200     		.2byte	0x2
 4868 0292 77       		.byte	0x77
 4869 0293 08       		.sleb128 8
 4870 0294 00000000 		.4byte	0
 4871 0298 00000000 		.4byte	0
 4872              		.section	.debug_aranges,"",%progbits
 4873 0000 1C000000 		.4byte	0x1c
 4874 0004 0200     		.2byte	0x2
 4875 0006 00000000 		.4byte	.Ldebug_info0
 4876 000a 04       		.byte	0x4
 4877 000b 00       		.byte	0
 4878 000c 0000     		.2byte	0
 4879 000e 0000     		.2byte	0
 4880 0010 00000000 		.4byte	.Ltext0
 4881 0014 B8040000 		.4byte	.Letext0-.Ltext0
 4882 0018 00000000 		.4byte	0
 4883 001c 00000000 		.4byte	0
 4884              		.section	.debug_line,"",%progbits
 4885              	.Ldebug_line0:
 4886 0000 2B020000 		.section	.debug_str,"MS",%progbits,1
 4886      02002A01 
 4886      00000201 
 4886      FB0E0D00 
 4886      01010101 
 4887              	.LASF66:
 4888 0000 41434D50 		.ascii	"ACMP01_IRQn\000"
 4888      30315F49 
 4888      52516E00 
 4889              	.LASF318:
 4890 000c 5359535F 		.ascii	"SYS_UnlockReg\000"
 4890      556E6C6F 
 4890      636B5265 
 4890      6700
 4891              	.LASF108:
 4892 001a 52534552 		.ascii	"RSERVED1\000"
 4892      56454431 
 4892      00
 4893              	.LASF306:
 4894 0023 4379636C 		.ascii	"CyclesPerUs\000"
 4894      65735065 
 4894      72557300 
 4895              	.LASF16:
 4896 002f 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 160


 4896      74797065 
 4896      00
 4897              	.LASF211:
 4898 0038 4E534D53 		.ascii	"NSMSTS\000"
 4898      545300
 4899              	.LASF229:
 4900 003f 4750435F 		.ascii	"GPC_MFPH\000"
 4900      4D465048 
 4900      00
 4901              	.LASF228:
 4902 0048 4750435F 		.ascii	"GPC_MFPL\000"
 4902      4D46504C 
 4902      00
 4903              	.LASF42:
 4904 0051 4750455F 		.ascii	"GPE_IRQn\000"
 4904      4952516E 
 4904      00
 4905              	.LASF85:
 4906 005a 43525054 		.ascii	"CRPT_IRQn\000"
 4906      5F495251 
 4906      6E00
 4907              	.LASF291:
 4908 0064 53656375 		.ascii	"Secure_LED_On\000"
 4908      72655F4C 
 4908      45445F4F 
 4908      6E00
 4909              	.LASF159:
 4910 0072 50415357 		.ascii	"PASWKCTL\000"
 4910      4B43544C 
 4910      00
 4911              	.LASF77:
 4912 007b 43414E31 		.ascii	"CAN1_IRQn\000"
 4912      5F495251 
 4912      6E00
 4913              	.LASF13:
 4914 0085 696E7433 		.ascii	"int32_t\000"
 4914      325F7400 
 4915              	.LASF252:
 4916 008d 54534F46 		.ascii	"TSOFFSET\000"
 4916      46534554 
 4916      00
 4917              	.LASF120:
 4918 0096 56544F52 		.ascii	"VTOR\000"
 4918      00
 4919              	.LASF72:
 4920 009b 53504933 		.ascii	"SPI3_IRQn\000"
 4920      5F495251 
 4920      6E00
 4921              	.LASF132:
 4922 00a5 41504243 		.ascii	"APBCLK0\000"
 4922      4C4B3000 
 4923              	.LASF133:
 4924 00ad 41504243 		.ascii	"APBCLK1\000"
 4924      4C4B3100 
 4925              	.LASF178:
 4926 00b5 4750494F 		.ascii	"GPIOVSRC\000"
 4926      56535243 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 161


 4926      00
 4927              	.LASF251:
 4928 00be 52434144 		.ascii	"RCADJ\000"
 4928      4A00
 4929              	.LASF297:
 4930 00c4 7533324D 		.ascii	"u32MSP_s\000"
 4930      53505F73 
 4930      00
 4931              	.LASF41:
 4932 00cd 4750445F 		.ascii	"GPD_IRQn\000"
 4932      4952516E 
 4932      00
 4933              	.LASF244:
 4934 00d6 5352414D 		.ascii	"SRAM_BISTSTS\000"
 4934      5F424953 
 4934      54535453 
 4934      00
 4935              	.LASF47:
 4936 00e3 50574D30 		.ascii	"PWM0_P0_IRQn\000"
 4936      5F50305F 
 4936      4952516E 
 4936      00
 4937              	.LASF312:
 4938 00f0 474E5520 		.ascii	"GNU C11 5.4.1 20160919 (release) [ARM/embedded-5-br"
 4938      43313120 
 4938      352E342E 
 4938      31203230 
 4938      31363039 
 4939 0123 616E6368 		.ascii	"anch revision 240496] -mthumb -mapcs-frame -mthumb-"
 4939      20726576 
 4939      6973696F 
 4939      6E203234 
 4939      30343936 
 4940 0156 696E7465 		.ascii	"interwork -march=armv8-m.base -mcmse -gdwarf-2 -O0\000"
 4940      72776F72 
 4940      6B202D6D 
 4940      61726368 
 4940      3D61726D 
 4941              	.LASF304:
 4942 0189 5359535F 		.ascii	"SYS_Init\000"
 4942      496E6974 
 4942      00
 4943              	.LASF300:
 4944 0192 75333250 		.ascii	"u32PSP_ns\000"
 4944      53505F6E 
 4944      7300
 4945              	.LASF294:
 4946 019c 63616C6C 		.ascii	"callback\000"
 4946      6261636B 
 4946      00
 4947              	.LASF268:
 4948 01a5 414C5443 		.ascii	"ALTCTL\000"
 4948      544C00
 4949              	.LASF278:
 4950 01ac 4E6F6E53 		.ascii	"NonSecure_funcptr\000"
 4950      65637572 
 4950      655F6675 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 162


 4950      6E637074 
 4950      7200
 4951              	.LASF83:
 4952 01be 49325330 		.ascii	"I2S0_IRQn\000"
 4952      5F495251 
 4952      6E00
 4953              	.LASF196:
 4954 01c8 5352414D 		.ascii	"SRAM1VSRC\000"
 4954      31565352 
 4954      4300
 4955              	.LASF71:
 4956 01d2 53504932 		.ascii	"SPI2_IRQn\000"
 4956      5F495251 
 4956      6E00
 4957              	.LASF285:
 4958 01dc 72657375 		.ascii	"result\000"
 4958      6C7400
 4959              	.LASF280:
 4960 01e3 5F5F545A 		.ascii	"__TZ_set_PSP_NS\000"
 4960      5F736574 
 4960      5F505350 
 4960      5F4E5300 
 4961              	.LASF121:
 4962 01f3 41495243 		.ascii	"AIRCR\000"
 4962      5200
 4963              	.LASF78:
 4964 01f9 5343305F 		.ascii	"SC0_IRQn\000"
 4964      4952516E 
 4964      00
 4965              	.LASF163:
 4966 0202 494F5044 		.ascii	"IOPDCTL\000"
 4966      43544C00 
 4967              	.LASF7:
 4968 020a 6C6F6E67 		.ascii	"long int\000"
 4968      20696E74 
 4968      00
 4969              	.LASF73:
 4970 0213 55534244 		.ascii	"USBD_IRQn\000"
 4970      5F495251 
 4970      6E00
 4971              	.LASF254:
 4972 021d 43565354 		.ascii	"CVSTS\000"
 4972      5300
 4973              	.LASF118:
 4974 0223 43505549 		.ascii	"CPUID\000"
 4974      4400
 4975              	.LASF123:
 4976 0229 53485052 		.ascii	"SHPR\000"
 4976      00
 4977              	.LASF302:
 4978 022e 53797354 		.ascii	"SysTick_Handler\000"
 4978      69636B5F 
 4978      48616E64 
 4978      6C657200 
 4979              	.LASF29:
 4980 023e 54414D50 		.ascii	"TAMPER_IRQn\000"
 4980      45525F49 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 163


 4980      52516E00 
 4981              	.LASF296:
 4982 024a 6D61696E 		.ascii	"main\000"
 4982      00
 4983              	.LASF301:
 4984 024f 4E6F6E53 		.ascii	"NonSecure_ResetHandler\000"
 4984      65637572 
 4984      655F5265 
 4984      73657448 
 4984      616E646C 
 4985              	.LASF288:
 4986 0266 4952516E 		.ascii	"IRQn\000"
 4986      00
 4987              	.LASF65:
 4988 026b 45414443 		.ascii	"EADC1_IRQn\000"
 4988      315F4952 
 4988      516E00
 4989              	.LASF99:
 4990 0276 53444831 		.ascii	"SDH1_IRQn\000"
 4990      5F495251 
 4990      6E00
 4991              	.LASF32:
 4992 0280 45494E54 		.ascii	"EINT0_IRQn\000"
 4992      305F4952 
 4992      516E00
 4993              	.LASF320:
 4994 028b 55415254 		.ascii	"UART0_Init\000"
 4994      305F496E 
 4994      697400
 4995              	.LASF235:
 4996 0296 4750465F 		.ascii	"GPF_MFPH\000"
 4996      4D465048 
 4996      00
 4997              	.LASF234:
 4998 029f 4750465F 		.ascii	"GPF_MFPL\000"
 4998      4D46504C 
 4998      00
 4999              	.LASF22:
 5000 02a8 53797354 		.ascii	"SysTick_IRQn\000"
 5000      69636B5F 
 5000      4952516E 
 5000      00
 5001              	.LASF119:
 5002 02b5 49435352 		.ascii	"ICSR\000"
 5002      00
 5003              	.LASF207:
 5004 02ba 43525054 		.ascii	"CRPTVA\000"
 5004      564100
 5005              	.LASF286:
 5006 02c1 5F5F6765 		.ascii	"__get_PSP\000"
 5006      745F5053 
 5006      5000
 5007              	.LASF3:
 5008 02cb 7369676E 		.ascii	"signed char\000"
 5008      65642063 
 5008      68617200 
 5009              	.LASF200:
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 164


 5010 02d7 464C4153 		.ascii	"FLASHVSRC\000"
 5010      48565352 
 5010      4300
 5011              	.LASF27:
 5012 02e1 434B4641 		.ascii	"CKFAIL_IRQn\000"
 5012      494C5F49 
 5012      52516E00 
 5013              	.LASF151:
 5014 02ed 434C4B44 		.ascii	"CLKDSTS\000"
 5014      53545300 
 5015              	.LASF106:
 5016 02f5 52455345 		.ascii	"RESERVED0\000"
 5016      52564544 
 5016      3000
 5017              	.LASF122:
 5018 02ff 52455345 		.ascii	"RESERVED1\000"
 5018      52564544 
 5018      3100
 5019              	.LASF4:
 5020 0309 756E7369 		.ascii	"unsigned char\000"
 5020      676E6564 
 5020      20636861 
 5020      7200
 5021              	.LASF112:
 5022 0317 52455345 		.ascii	"RESERVED3\000"
 5022      52564544 
 5022      3300
 5023              	.LASF114:
 5024 0321 52455345 		.ascii	"RESERVED4\000"
 5024      52564544 
 5024      3400
 5025              	.LASF116:
 5026 032b 52455345 		.ascii	"RESERVED5\000"
 5026      52564544 
 5026      3500
 5027              	.LASF94:
 5028 0335 49324332 		.ascii	"I2C2_IRQn\000"
 5028      5F495251 
 5028      6E00
 5029              	.LASF313:
 5030 033f 7372632F 		.ascii	"src/main.c\000"
 5030      6D61696E 
 5030      2E6300
 5031              	.LASF113:
 5032 034a 49414252 		.ascii	"IABR\000"
 5032      00
 5033              	.LASF198:
 5034 034f 464D4356 		.ascii	"FMCVSRC\000"
 5034      53524300 
 5035              	.LASF265:
 5036 0357 544F5554 		.ascii	"TOUT\000"
 5036      00
 5037              	.LASF138:
 5038 035c 434C4B44 		.ascii	"CLKDIV0\000"
 5038      49563000 
 5039              	.LASF139:
 5040 0364 434C4B44 		.ascii	"CLKDIV1\000"
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 165


 5040      49563100 
 5041              	.LASF140:
 5042 036c 434C4B44 		.ascii	"CLKDIV2\000"
 5042      49563200 
 5043              	.LASF142:
 5044 0374 434C4B44 		.ascii	"CLKDIV3\000"
 5044      49563300 
 5045              	.LASF130:
 5046 037c 50575243 		.ascii	"PWRCTL\000"
 5046      544C00
 5047              	.LASF212:
 5048 0383 49444155 		.ascii	"IDAUANS\000"
 5048      414E5300 
 5049              	.LASF188:
 5050 038b 53443156 		.ascii	"SD1VSRC\000"
 5050      53524300 
 5051              	.LASF86:
 5052 0393 4750475F 		.ascii	"GPG_IRQn\000"
 5052      4952516E 
 5052      00
 5053              	.LASF110:
 5054 039c 52455345 		.ascii	"RESERVED2\000"
 5054      52564544 
 5054      3200
 5055              	.LASF277:
 5056 03a6 76753332 		.ascii	"vu32\000"
 5056      00
 5057              	.LASF164:
 5058 03ab 48585446 		.ascii	"HXTFSEL\000"
 5058      53454C00 
 5059              	.LASF17:
 5060 03b3 63686172 		.ascii	"char\000"
 5060      00
 5061              	.LASF273:
 5062 03b8 574B4354 		.ascii	"WKCTL\000"
 5062      4C00
 5063              	.LASF55:
 5064 03be 544D5231 		.ascii	"TMR1_IRQn\000"
 5064      5F495251 
 5064      6E00
 5065              	.LASF125:
 5066 03c8 5343425F 		.ascii	"SCB_Type\000"
 5066      54797065 
 5066      00
 5067              	.LASF160:
 5068 03d1 50425357 		.ascii	"PBSWKCTL\000"
 5068      4B43544C 
 5068      00
 5069              	.LASF194:
 5070 03da 5352414D 		.ascii	"SRAM0VSRC\000"
 5070      30565352 
 5070      4300
 5071              	.LASF202:
 5072 03e4 53435556 		.ascii	"SCUVSRC\000"
 5072      53524300 
 5073              	.LASF100:
 5074 03ec 53504935 		.ascii	"SPI5_IRQn\000"
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 166


 5074      5F495251 
 5074      6E00
 5075              	.LASF169:
 5076 03f6 494F4E53 		.ascii	"IONSSET\000"
 5076      53455400 
 5077              	.LASF69:
 5078 03fe 55415254 		.ascii	"UART2_IRQn\000"
 5078      325F4952 
 5078      516E00
 5079              	.LASF225:
 5080 0409 4750415F 		.ascii	"GPA_MFPH\000"
 5080      4D465048 
 5080      00
 5081              	.LASF155:
 5082 0412 504D5543 		.ascii	"PMUCTL\000"
 5082      544C00
 5083              	.LASF266:
 5084 0419 42415544 		.ascii	"BAUD\000"
 5084      00
 5085              	.LASF51:
 5086 041e 50574D31 		.ascii	"PWM1_P0_IRQn\000"
 5086      5F50305F 
 5086      4952516E 
 5086      00
 5087              	.LASF152:
 5088 042b 43445550 		.ascii	"CDUPB\000"
 5088      4200
 5089              	.LASF109:
 5090 0431 49535052 		.ascii	"ISPR\000"
 5090      00
 5091              	.LASF161:
 5092 0436 50435357 		.ascii	"PCSWKCTL\000"
 5092      4B43544C 
 5092      00
 5093              	.LASF84:
 5094 043f 4F50415F 		.ascii	"OPA_IRQn\000"
 5094      4952516E 
 5094      00
 5095              	.LASF201:
 5096 0448 464C4153 		.ascii	"FLASHVA\000"
 5096      48564100 
 5097              	.LASF49:
 5098 0450 50574D30 		.ascii	"PWM0_P2_IRQn\000"
 5098      5F50325F 
 5098      4952516E 
 5098      00
 5099              	.LASF25:
 5100 045d 50575257 		.ascii	"PWRWU_IRQn\000"
 5100      555F4952 
 5100      516E00
 5101              	.LASF124:
 5102 0468 53484353 		.ascii	"SHCSR\000"
 5102      5200
 5103              	.LASF295:
 5104 046e 53656375 		.ascii	"Secure_LED_Off_callback\000"
 5104      72655F4C 
 5104      45445F4F 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 167


 5104      66665F63 
 5104      616C6C62 
 5105              	.LASF292:
 5106 0486 53656375 		.ascii	"Secure_LED_Off\000"
 5106      72655F4C 
 5106      45445F4F 
 5106      666600
 5107              	.LASF141:
 5108 0495 52455345 		.ascii	"RESERVE0\000"
 5108      52564530 
 5108      00
 5109              	.LASF143:
 5110 049e 52455345 		.ascii	"RESERVE1\000"
 5110      52564531 
 5110      00
 5111              	.LASF145:
 5112 04a7 52455345 		.ascii	"RESERVE2\000"
 5112      52564532 
 5112      00
 5113              	.LASF147:
 5114 04b0 52455345 		.ascii	"RESERVE3\000"
 5114      52564533 
 5114      00
 5115              	.LASF149:
 5116 04b9 52455345 		.ascii	"RESERVE4\000"
 5116      52564534 
 5116      00
 5117              	.LASF154:
 5118 04c2 52455345 		.ascii	"RESERVE5\000"
 5118      52564535 
 5118      00
 5119              	.LASF165:
 5120 04cb 52455345 		.ascii	"RESERVE6\000"
 5120      52564536 
 5120      00
 5121              	.LASF250:
 5122 04d4 52455345 		.ascii	"RESERVE7\000"
 5122      52564537 
 5122      00
 5123              	.LASF255:
 5124 04dd 52455345 		.ascii	"RESERVE8\000"
 5124      52564538 
 5124      00
 5125              	.LASF35:
 5126 04e6 45494E54 		.ascii	"EINT3_IRQn\000"
 5126      335F4952 
 5126      516E00
 5127              	.LASF98:
 5128 04f1 45434150 		.ascii	"ECAP1_IRQn\000"
 5128      315F4952 
 5128      516E00
 5129              	.LASF309:
 5130 04fc 74657374 		.ascii	"tests1\000"
 5130      733100
 5131              	.LASF310:
 5132 0503 74657374 		.ascii	"tests2\000"
 5132      733200
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 168


 5133              	.LASF311:
 5134 050a 74657374 		.ascii	"tests3\000"
 5134      733300
 5135              	.LASF59:
 5136 0511 55415254 		.ascii	"UART1_IRQn\000"
 5136      315F4952 
 5136      516E00
 5137              	.LASF80:
 5138 051c 5343325F 		.ascii	"SC2_IRQn\000"
 5138      4952516E 
 5138      00
 5139              	.LASF131:
 5140 0525 41484243 		.ascii	"AHBCLK\000"
 5140      4C4B00
 5141              	.LASF153:
 5142 052c 43444C4F 		.ascii	"CDLOWB\000"
 5142      574200
 5143              	.LASF162:
 5144 0533 50445357 		.ascii	"PDSWKCTL\000"
 5144      4B43544C 
 5144      00
 5145              	.LASF158:
 5146 053c 53574B44 		.ascii	"SWKDBCTL\000"
 5146      4243544C 
 5146      00
 5147              	.LASF223:
 5148 0545 55534250 		.ascii	"USBPHY\000"
 5148      485900
 5149              	.LASF218:
 5150 054c 49505253 		.ascii	"IPRST2\000"
 5150      543200
 5151              	.LASF227:
 5152 0553 4750425F 		.ascii	"GPB_MFPH\000"
 5152      4D465048 
 5152      00
 5153              	.LASF226:
 5154 055c 4750425F 		.ascii	"GPB_MFPL\000"
 5154      4D46504C 
 5154      00
 5155              	.LASF18:
 5156 0565 4E6F6E4D 		.ascii	"NonMaskableInt_IRQn\000"
 5156      61736B61 
 5156      626C6549 
 5156      6E745F49 
 5156      52516E00 
 5157              	.LASF269:
 5158 0579 46554E43 		.ascii	"FUNCSEL\000"
 5158      53454C00 
 5159              	.LASF76:
 5160 0581 43414E30 		.ascii	"CAN0_IRQn\000"
 5160      5F495251 
 5160      6E00
 5161              	.LASF10:
 5162 058b 6C6F6E67 		.ascii	"long unsigned int\000"
 5162      20756E73 
 5162      69676E65 
 5162      6420696E 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 169


 5162      7400
 5163              	.LASF34:
 5164 059d 45494E54 		.ascii	"EINT2_IRQn\000"
 5164      325F4952 
 5164      516E00
 5165              	.LASF303:
 5166 05a8 4E6F6E73 		.ascii	"Nonsecure_Init\000"
 5166      65637572 
 5166      655F496E 
 5166      697400
 5167              	.LASF239:
 5168 05b7 4750485F 		.ascii	"GPH_MFPH\000"
 5168      4D465048 
 5168      00
 5169              	.LASF238:
 5170 05c0 4750485F 		.ascii	"GPH_MFPL\000"
 5170      4D46504C 
 5170      00
 5171              	.LASF104:
 5172 05c9 4952516E 		.ascii	"IRQn_Type\000"
 5172      5F547970 
 5172      6500
 5173              	.LASF314:
 5174 05d3 433A5C55 		.ascii	"C:\\Users\\CCMA\\workspace\\TrustZoneSecureGccUv\000"
 5174      73657273 
 5174      5C43434D 
 5174      415C776F 
 5174      726B7370 
 5175              	.LASF284:
 5176 0600 5F5F545A 		.ascii	"__TZ_get_MSP_NS\000"
 5176      5F676574 
 5176      5F4D5350 
 5176      5F4E5300 
 5177              	.LASF111:
 5178 0610 49435052 		.ascii	"ICPR\000"
 5178      00
 5179              	.LASF30:
 5180 0615 5744545F 		.ascii	"WDT_IRQn\000"
 5180      4952516E 
 5180      00
 5181              	.LASF115:
 5182 061e 49544E53 		.ascii	"ITNS\000"
 5182      00
 5183              	.LASF259:
 5184 0623 4649464F 		.ascii	"FIFO\000"
 5184      00
 5185              	.LASF192:
 5186 0628 50444D41 		.ascii	"PDMA1VSRC\000"
 5186      31565352 
 5186      4300
 5187              	.LASF191:
 5188 0632 50444D41 		.ascii	"PDMA0VA\000"
 5188      30564100 
 5189              	.LASF224:
 5190 063a 4750415F 		.ascii	"GPA_MFPL\000"
 5190      4D46504C 
 5190      00
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 170


 5191              	.LASF40:
 5192 0643 4750435F 		.ascii	"GPC_IRQn\000"
 5192      4952516E 
 5192      00
 5193              	.LASF293:
 5194 064c 53656375 		.ascii	"Secure_LED_On_callback\000"
 5194      72655F4C 
 5194      45445F4F 
 5194      6E5F6361 
 5194      6C6C6261 
 5195              	.LASF290:
 5196 0663 7469636B 		.ascii	"ticks\000"
 5196      7300
 5197              	.LASF12:
 5198 0669 5F5F696E 		.ascii	"__intptr_t\000"
 5198      74707472 
 5198      5F7400
 5199              	.LASF89:
 5200 0674 55415254 		.ascii	"UART5_IRQn\000"
 5200      355F4952 
 5200      516E00
 5201              	.LASF101:
 5202 067f 50444D41 		.ascii	"PDMA1_IRQn\000"
 5202      315F4952 
 5202      516E00
 5203              	.LASF102:
 5204 068a 5343555F 		.ascii	"SCU_IRQn\000"
 5204      4952516E 
 5204      00
 5205              	.LASF50:
 5206 0693 4252414B 		.ascii	"BRAKE1_IRQn\000"
 5206      45315F49 
 5206      52516E00 
 5207              	.LASF63:
 5208 069f 4441435F 		.ascii	"DAC_IRQn\000"
 5208      4952516E 
 5208      00
 5209              	.LASF221:
 5210 06a8 504F5243 		.ascii	"PORCTL\000"
 5210      544C00
 5211              	.LASF9:
 5212 06af 5F5F7569 		.ascii	"__uint32_t\000"
 5212      6E743332 
 5212      5F7400
 5213              	.LASF1:
 5214 06ba 6C6F6E67 		.ascii	"long long int\000"
 5214      206C6F6E 
 5214      6720696E 
 5214      7400
 5215              	.LASF274:
 5216 06c8 574B5354 		.ascii	"WKSTS\000"
 5216      5300
 5217              	.LASF219:
 5218 06ce 424F4443 		.ascii	"BODCTL\000"
 5218      544C00
 5219              	.LASF39:
 5220 06d5 4750425F 		.ascii	"GPB_IRQn\000"
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 171


 5220      4952516E 
 5220      00
 5221              	.LASF45:
 5222 06de 53504931 		.ascii	"SPI1_IRQn\000"
 5222      5F495251 
 5222      6E00
 5223              	.LASF75:
 5224 06e8 5553424F 		.ascii	"USBOTG_IRQn\000"
 5224      54475F49 
 5224      52516E00 
 5225              	.LASF262:
 5226 06f4 4D4F4445 		.ascii	"MODEMSTS\000"
 5226      4D535453 
 5226      00
 5227              	.LASF180:
 5228 06fd 45424956 		.ascii	"EBIVSRC\000"
 5228      53524300 
 5229              	.LASF20:
 5230 0705 53564361 		.ascii	"SVCall_IRQn\000"
 5230      6C6C5F49 
 5230      52516E00 
 5231              	.LASF263:
 5232 0711 4649464F 		.ascii	"FIFOSTS\000"
 5232      53545300 
 5233              	.LASF87:
 5234 0719 45494E54 		.ascii	"EINT6_IRQn\000"
 5234      365F4952 
 5234      516E00
 5235              	.LASF272:
 5236 0724 4252434F 		.ascii	"BRCOMP\000"
 5236      4D5000
 5237              	.LASF127:
 5238 072b 4C4F4144 		.ascii	"LOAD\000"
 5238      00
 5239              	.LASF203:
 5240 0730 53435556 		.ascii	"SCUVA\000"
 5240      4100
 5241              	.LASF222:
 5242 0736 56524546 		.ascii	"VREFCTL\000"
 5242      43544C00 
 5243              	.LASF88:
 5244 073e 55415254 		.ascii	"UART4_IRQn\000"
 5244      345F4952 
 5244      516E00
 5245              	.LASF148:
 5246 0749 434C4B4F 		.ascii	"CLKOCTL\000"
 5246      43544C00 
 5247              	.LASF156:
 5248 0751 504D5553 		.ascii	"PMUSTS\000"
 5248      545300
 5249              	.LASF308:
 5250 0758 70664E6F 		.ascii	"pfNonSecure_LED_Off\000"
 5250      6E536563 
 5250      7572655F 
 5250      4C45445F 
 5250      4F666600 
 5251              	.LASF261:
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 172


 5252 076c 4D4F4445 		.ascii	"MODEM\000"
 5252      4D00
 5253              	.LASF257:
 5254 0772 5359535F 		.ascii	"SYS_T\000"
 5254      5400
 5255              	.LASF53:
 5256 0778 50574D31 		.ascii	"PWM1_P2_IRQn\000"
 5256      5F50325F 
 5256      4952516E 
 5256      00
 5257              	.LASF64:
 5258 0785 45414443 		.ascii	"EADC0_IRQn\000"
 5258      305F4952 
 5258      516E00
 5259              	.LASF0:
 5260 0790 756E7369 		.ascii	"unsigned int\000"
 5260      676E6564 
 5260      20696E74 
 5260      00
 5261              	.LASF126:
 5262 079d 4354524C 		.ascii	"CTRL\000"
 5262      00
 5263              	.LASF82:
 5264 07a2 53444830 		.ascii	"SDH0_IRQn\000"
 5264      5F495251 
 5264      6E00
 5265              	.LASF15:
 5266 07ac 696E7470 		.ascii	"intptr_t\000"
 5266      74725F74 
 5266      00
 5267              	.LASF204:
 5268 07b5 53595356 		.ascii	"SYSVSRC\000"
 5268      53524300 
 5269              	.LASF233:
 5270 07bd 4750455F 		.ascii	"GPE_MFPH\000"
 5270      4D465048 
 5270      00
 5271              	.LASF232:
 5272 07c6 4750455F 		.ascii	"GPE_MFPL\000"
 5272      4D46504C 
 5272      00
 5273              	.LASF183:
 5274 07cf 55534248 		.ascii	"USBHVA\000"
 5274      564100
 5275              	.LASF182:
 5276 07d6 55534248 		.ascii	"USBHVSRC\000"
 5276      56535243 
 5276      00
 5277              	.LASF187:
 5278 07df 53443056 		.ascii	"SD0VA\000"
 5278      4100
 5279              	.LASF216:
 5280 07e5 49505253 		.ascii	"IPRST0\000"
 5280      543000
 5281              	.LASF217:
 5282 07ec 49505253 		.ascii	"IPRST1\000"
 5282      543100
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 173


 5283              	.LASF37:
 5284 07f3 45494E54 		.ascii	"EINT5_IRQn\000"
 5284      355F4952 
 5284      516E00
 5285              	.LASF240:
 5286 07fe 5352414D 		.ascii	"SRAM_INTCTL\000"
 5286      5F494E54 
 5286      43544C00 
 5287              	.LASF93:
 5288 080a 4250574D 		.ascii	"BPWM1_IRQn\000"
 5288      315F4952 
 5288      516E00
 5289              	.LASF287:
 5290 0815 5F5F6765 		.ascii	"__get_MSP\000"
 5290      745F4D53 
 5290      5000
 5291              	.LASF214:
 5292 081f 50444944 		.ascii	"PDID\000"
 5292      00
 5293              	.LASF91:
 5294 0824 55534349 		.ascii	"USCI1_IRQn\000"
 5294      315F4952 
 5294      516E00
 5295              	.LASF270:
 5296 082f 4C494E43 		.ascii	"LINCTL\000"
 5296      544C00
 5297              	.LASF171:
 5298 0836 464E5341 		.ascii	"FNSADDR\000"
 5298      44445200 
 5299              	.LASF298:
 5300 083e 75333250 		.ascii	"u32PSP_s\000"
 5300      53505F73 
 5300      00
 5301              	.LASF61:
 5302 0847 49324331 		.ascii	"I2C1_IRQn\000"
 5302      5F495251 
 5302      6E00
 5303              	.LASF103:
 5304 0851 4C43445F 		.ascii	"LCD_IRQn\000"
 5304      4952516E 
 5304      00
 5305              	.LASF283:
 5306 085a 5F5F545A 		.ascii	"__TZ_get_PSP_NS\000"
 5306      5F676574 
 5306      5F505350 
 5306      5F4E5300 
 5307              	.LASF190:
 5308 086a 50444D41 		.ascii	"PDMA0VSRC\000"
 5308      30565352 
 5308      4300
 5309              	.LASF176:
 5310 0874 41504231 		.ascii	"APB1VSRC\000"
 5310      56535243 
 5310      00
 5311              	.LASF129:
 5312 087d 53797354 		.ascii	"SysTick_Type\000"
 5312      69636B5F 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 174


 5312      54797065 
 5312      00
 5313              	.LASF175:
 5314 088a 41504230 		.ascii	"APB0VA\000"
 5314      564100
 5315              	.LASF231:
 5316 0891 4750445F 		.ascii	"GPD_MFPH\000"
 5316      4D465048 
 5316      00
 5317              	.LASF230:
 5318 089a 4750445F 		.ascii	"GPD_MFPL\000"
 5318      4D46504C 
 5318      00
 5319              	.LASF319:
 5320 08a3 47657453 		.ascii	"GetSystemCoreClock\000"
 5320      79737465 
 5320      6D436F72 
 5320      65436C6F 
 5320      636B00
 5321              	.LASF43:
 5322 08b6 4750465F 		.ascii	"GPF_IRQn\000"
 5322      4952516E 
 5322      00
 5323              	.LASF186:
 5324 08bf 53443056 		.ascii	"SD0VSRC\000"
 5324      53524300 
 5325              	.LASF2:
 5326 08c7 6C6F6E67 		.ascii	"long double\000"
 5326      20646F75 
 5326      626C6500 
 5327              	.LASF241:
 5328 08d3 5352414D 		.ascii	"SRAM_STATUS\000"
 5328      5F535441 
 5328      54555300 
 5329              	.LASF54:
 5330 08df 544D5230 		.ascii	"TMR0_IRQn\000"
 5330      5F495251 
 5330      6E00
 5331              	.LASF137:
 5332 08e9 434C4B53 		.ascii	"CLKSEL3\000"
 5332      454C3300 
 5333              	.LASF215:
 5334 08f1 52535453 		.ascii	"RSTSTS\000"
 5334      545300
 5335              	.LASF247:
 5336 08f8 49524354 		.ascii	"IRCTIEN\000"
 5336      49454E00 
 5337              	.LASF193:
 5338 0900 50444D41 		.ascii	"PDMA1VA\000"
 5338      31564100 
 5339              	.LASF90:
 5340 0908 55534349 		.ascii	"USCI0_IRQn\000"
 5340      305F4952 
 5340      516E00
 5341              	.LASF117:
 5342 0913 4E564943 		.ascii	"NVIC_Type\000"
 5342      5F547970 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 175


 5342      6500
 5343              	.LASF81:
 5344 091d 53504934 		.ascii	"SPI4_IRQn\000"
 5344      5F495251 
 5344      6E00
 5345              	.LASF209:
 5346 0927 4E534D4C 		.ascii	"NSMLOAD\000"
 5346      4F414400 
 5347              	.LASF134:
 5348 092f 434C4B53 		.ascii	"CLKSEL0\000"
 5348      454C3000 
 5349              	.LASF135:
 5350 0937 434C4B53 		.ascii	"CLKSEL1\000"
 5350      454C3100 
 5351              	.LASF136:
 5352 093f 434C4B53 		.ascii	"CLKSEL2\000"
 5352      454C3200 
 5353              	.LASF11:
 5354 0947 6C6F6E67 		.ascii	"long long unsigned int\000"
 5354      206C6F6E 
 5354      6720756E 
 5354      7369676E 
 5354      65642069 
 5355              	.LASF170:
 5356 095e 5352414D 		.ascii	"SRAMNSSET\000"
 5356      4E535345 
 5356      5400
 5357              	.LASF315:
 5358 0968 5F5F5746 		.ascii	"__WFI\000"
 5358      4900
 5359              	.LASF256:
 5360 096e 424C4F50 		.ascii	"BLOPTION\000"
 5360      54494F4E 
 5360      00
 5361              	.LASF31:
 5362 0977 57574454 		.ascii	"WWDT_IRQn\000"
 5362      5F495251 
 5362      6E00
 5363              	.LASF48:
 5364 0981 50574D30 		.ascii	"PWM0_P1_IRQn\000"
 5364      5F50315F 
 5364      4952516E 
 5364      00
 5365              	.LASF267:
 5366 098e 49524441 		.ascii	"IRDA\000"
 5366      00
 5367              	.LASF68:
 5368 0993 45414443 		.ascii	"EADC3_IRQn\000"
 5368      335F4952 
 5368      516E00
 5369              	.LASF107:
 5370 099e 49434552 		.ascii	"ICER\000"
 5370      00
 5371              	.LASF97:
 5372 09a3 45434150 		.ascii	"ECAP0_IRQn\000"
 5372      305F4952 
 5372      516E00
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 176


 5373              	.LASF96:
 5374 09ae 51454931 		.ascii	"QEI1_IRQn\000"
 5374      5F495251 
 5374      6E00
 5375              	.LASF58:
 5376 09b8 55415254 		.ascii	"UART0_IRQn\000"
 5376      305F4952 
 5376      516E00
 5377              	.LASF260:
 5378 09c3 4C494E45 		.ascii	"LINE\000"
 5378      00
 5379              	.LASF179:
 5380 09c8 4750494F 		.ascii	"GPIOVA\000"
 5380      564100
 5381              	.LASF79:
 5382 09cf 5343315F 		.ascii	"SC1_IRQn\000"
 5382      4952516E 
 5382      00
 5383              	.LASF317:
 5384 09d8 53797354 		.ascii	"SysTick_Config\000"
 5384      69636B5F 
 5384      436F6E66 
 5384      696700
 5385              	.LASF249:
 5386 09e7 5245474C 		.ascii	"REGLCTL\000"
 5386      43544C00 
 5387              	.LASF146:
 5388 09ef 53544154 		.ascii	"STATUS\000"
 5388      555300
 5389              	.LASF242:
 5390 09f6 5352414D 		.ascii	"SRAM_ERRADDR\000"
 5390      5F455252 
 5390      41444452 
 5390      00
 5391              	.LASF128:
 5392 0a03 43414C49 		.ascii	"CALIB\000"
 5392      4200
 5393              	.LASF245:
 5394 0a09 5352414D 		.ascii	"SRAM_PARITY\000"
 5394      5F504152 
 5394      49545900 
 5395              	.LASF195:
 5396 0a15 5352414D 		.ascii	"SRAM0VA\000"
 5396      30564100 
 5397              	.LASF174:
 5398 0a1d 41504230 		.ascii	"APB0VSRC\000"
 5398      56535243 
 5398      00
 5399              	.LASF166:
 5400 0a26 54455354 		.ascii	"TESTCLK\000"
 5400      434C4B00 
 5401              	.LASF181:
 5402 0a2e 45424956 		.ascii	"EBIVA\000"
 5402      4100
 5403              	.LASF26:
 5404 0a34 52414D50 		.ascii	"RAMPE_IRQn\000"
 5404      455F4952 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 177


 5404      516E00
 5405              	.LASF189:
 5406 0a3f 53443156 		.ascii	"SD1VA\000"
 5406      4100
 5407              	.LASF208:
 5408 0a45 4E534D43 		.ascii	"NSMCTL\000"
 5408      544C00
 5409              	.LASF67:
 5410 0a4c 45414443 		.ascii	"EADC2_IRQn\000"
 5410      325F4952 
 5410      516E00
 5411              	.LASF33:
 5412 0a57 45494E54 		.ascii	"EINT1_IRQn\000"
 5412      315F4952 
 5412      516E00
 5413              	.LASF95:
 5414 0a62 51454930 		.ascii	"QEI0_IRQn\000"
 5414      5F495251 
 5414      6E00
 5415              	.LASF237:
 5416 0a6c 4750475F 		.ascii	"GPG_MFPH\000"
 5416      4D465048 
 5416      00
 5417              	.LASF206:
 5418 0a75 43525054 		.ascii	"CRPTVSRC\000"
 5418      56535243 
 5418      00
 5419              	.LASF236:
 5420 0a7e 4750475F 		.ascii	"GPG_MFPL\000"
 5420      4D46504C 
 5420      00
 5421              	.LASF184:
 5422 0a87 43524356 		.ascii	"CRCVSRC\000"
 5422      53524300 
 5423              	.LASF5:
 5424 0a8f 73686F72 		.ascii	"short int\000"
 5424      7420696E 
 5424      7400
 5425              	.LASF172:
 5426 0a99 5356494F 		.ascii	"SVIOIEN\000"
 5426      49454E00 
 5427              	.LASF282:
 5428 0aa1 746F704F 		.ascii	"topOfProcStack\000"
 5428      6650726F 
 5428      63537461 
 5428      636B00
 5429              	.LASF289:
 5430 0ab0 7072696F 		.ascii	"priority\000"
 5430      72697479 
 5430      00
 5431              	.LASF57:
 5432 0ab9 544D5233 		.ascii	"TMR3_IRQn\000"
 5432      5F495251 
 5432      6E00
 5433              	.LASF177:
 5434 0ac3 41504231 		.ascii	"APB1VA\000"
 5434      564100
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 178


 5435              	.LASF248:
 5436 0aca 49524354 		.ascii	"IRCTISTS\000"
 5436      49535453 
 5436      00
 5437              	.LASF271:
 5438 0ad3 4C494E53 		.ascii	"LINSTS\000"
 5438      545300
 5439              	.LASF213:
 5440 0ada 5343555F 		.ascii	"SCU_T\000"
 5440      5400
 5441              	.LASF24:
 5442 0ae0 4952435F 		.ascii	"IRC_IRQn\000"
 5442      4952516E 
 5442      00
 5443              	.LASF167:
 5444 0ae9 434C4B5F 		.ascii	"CLK_T\000"
 5444      5400
 5445              	.LASF23:
 5446 0aef 424F445F 		.ascii	"BOD_IRQn\000"
 5446      4952516E 
 5446      00
 5447              	.LASF276:
 5448 0af8 55415254 		.ascii	"UART_T\000"
 5448      5F5400
 5449              	.LASF62:
 5450 0aff 50444D41 		.ascii	"PDMA0_IRQn\000"
 5450      305F4952 
 5450      516E00
 5451              	.LASF243:
 5452 0b0a 5352414D 		.ascii	"SRAM_BISTCTL\000"
 5452      5F424953 
 5452      5443544C 
 5452      00
 5453              	.LASF46:
 5454 0b17 4252414B 		.ascii	"BRAKE0_IRQn\000"
 5454      45305F49 
 5454      52516E00 
 5455              	.LASF173:
 5456 0b23 5356494E 		.ascii	"SVINTSTS\000"
 5456      54535453 
 5456      00
 5457              	.LASF168:
 5458 0b2c 504E5353 		.ascii	"PNSSET\000"
 5458      455400
 5459              	.LASF56:
 5460 0b33 544D5232 		.ascii	"TMR2_IRQn\000"
 5460      5F495251 
 5460      6E00
 5461              	.LASF258:
 5462 0b3d 494E5445 		.ascii	"INTEN\000"
 5462      4E00
 5463              	.LASF157:
 5464 0b43 4C444F43 		.ascii	"LDOCTL\000"
 5464      544C00
 5465              	.LASF44:
 5466 0b4a 53504930 		.ascii	"SPI0_IRQn\000"
 5466      5F495251 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 179


 5466      6E00
 5467              	.LASF14:
 5468 0b54 75696E74 		.ascii	"uint32_t\000"
 5468      33325F74 
 5468      00
 5469              	.LASF316:
 5470 0b5d 4E564943 		.ascii	"NVIC_SetPriority\000"
 5470      5F536574 
 5470      5072696F 
 5470      72697479 
 5470      00
 5471              	.LASF38:
 5472 0b6e 4750415F 		.ascii	"GPA_IRQn\000"
 5472      4952516E 
 5472      00
 5473              	.LASF144:
 5474 0b77 504C4C43 		.ascii	"PLLCTL\000"
 5474      544C00
 5475              	.LASF70:
 5476 0b7e 55415254 		.ascii	"UART3_IRQn\000"
 5476      335F4952 
 5476      516E00
 5477              	.LASF264:
 5478 0b89 494E5453 		.ascii	"INTSTS\000"
 5478      545300
 5479              	.LASF253:
 5480 0b90 43564354 		.ascii	"CVCTL\000"
 5480      4C00
 5481              	.LASF6:
 5482 0b96 73686F72 		.ascii	"short unsigned int\000"
 5482      7420756E 
 5482      7369676E 
 5482      65642069 
 5482      6E7400
 5483              	.LASF299:
 5484 0ba9 7533324D 		.ascii	"u32MSP_ns\000"
 5484      53505F6E 
 5484      7300
 5485              	.LASF52:
 5486 0bb3 50574D31 		.ascii	"PWM1_P1_IRQn\000"
 5486      5F50315F 
 5486      4952516E 
 5486      00
 5487              	.LASF74:
 5488 0bc0 55534248 		.ascii	"USBH_IRQn\000"
 5488      5F495251 
 5488      6E00
 5489              	.LASF21:
 5490 0bca 50656E64 		.ascii	"PendSV_IRQn\000"
 5490      53565F49 
 5490      52516E00 
 5491              	.LASF305:
 5492 0bd6 61746573 		.ascii	"atest\000"
 5492      7400
 5493              	.LASF246:
 5494 0bdc 49524354 		.ascii	"IRCTCTL\000"
 5494      43544C00 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 180


 5495              	.LASF220:
 5496 0be4 49565343 		.ascii	"IVSCTL\000"
 5496      544C00
 5497              	.LASF8:
 5498 0beb 5F5F696E 		.ascii	"__int32_t\000"
 5498      7433325F 
 5498      7400
 5499              	.LASF281:
 5500 0bf5 746F704F 		.ascii	"topOfMainStack\000"
 5500      664D6169 
 5500      6E537461 
 5500      636B00
 5501              	.LASF307:
 5502 0c04 70664E6F 		.ascii	"pfNonSecure_LED_On\000"
 5502      6E536563 
 5502      7572655F 
 5502      4C45445F 
 5502      4F6E00
 5503              	.LASF279:
 5504 0c17 5F5F545A 		.ascii	"__TZ_set_MSP_NS\000"
 5504      5F736574 
 5504      5F4D5350 
 5504      5F4E5300 
 5505              	.LASF105:
 5506 0c27 49534552 		.ascii	"ISER\000"
 5506      00
 5507              	.LASF185:
 5508 0c2c 43524356 		.ascii	"CRCVA\000"
 5508      4100
 5509              	.LASF19:
 5510 0c32 48617264 		.ascii	"HardFault_IRQn\000"
 5510      4661756C 
 5510      745F4952 
 5510      516E00
 5511              	.LASF36:
 5512 0c41 45494E54 		.ascii	"EINT4_IRQn\000"
 5512      345F4952 
 5512      516E00
 5513              	.LASF199:
 5514 0c4c 464D4356 		.ascii	"FMCVA\000"
 5514      4100
 5515              	.LASF92:
 5516 0c52 4250574D 		.ascii	"BPWM0_IRQn\000"
 5516      305F4952 
 5516      516E00
 5517              	.LASF197:
 5518 0c5d 5352414D 		.ascii	"SRAM1VA\000"
 5518      31564100 
 5519              	.LASF150:
 5520 0c65 434C4B44 		.ascii	"CLKDCTL\000"
 5520      43544C00 
 5521              	.LASF275:
 5522 0c6d 44574B43 		.ascii	"DWKCOMP\000"
 5522      4F4D5000 
 5523              	.LASF28:
 5524 0c75 5254435F 		.ascii	"RTC_IRQn\000"
 5524      4952516E 
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 181


 5524      00
 5525              	.LASF210:
 5526 0c7e 4E534D56 		.ascii	"NSMVAL\000"
 5526      414C00
 5527              	.LASF60:
 5528 0c85 49324330 		.ascii	"I2C0_IRQn\000"
 5528      5F495251 
 5528      6E00
 5529              	.LASF205:
 5530 0c8f 53595356 		.ascii	"SYSVA\000"
 5530      4100
 5531              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160919 (release) [ARM/embedded-5-bran
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 182


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:19     .text:00000000 $t
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:23     .text:00000000 NVIC_SetPriority
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:161    .text:000000d4 $d
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:166    .text:000000dc $t
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:170    .text:000000dc SysTick_Config
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:229    .text:0000011c $d
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:234    .text:00000124 $t
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:238    .text:00000124 SYS_UnlockReg
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:292    .bss:00000000 pfNonSecure_LED_On
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:289    .bss:00000000 $d
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:298    .bss:00000004 pfNonSecure_LED_Off
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:301    .rodata:00000000 $d
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:314    .text:00000160 Secure_LED_On
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:315    .text:00000160 __acle_se_Secure_LED_On
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:360    .text:00000190 $d
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:369    .text:00000194 $t
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:378    .text:00000194 Secure_LED_Off
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:379    .text:00000194 __acle_se_Secure_LED_Off
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:423    .text:000001c4 $d
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:427    .text:000001c8 $t
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:436    .text:000001c8 Secure_LED_On_callback
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:437    .text:000001c8 __acle_se_Secure_LED_On_callback
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:481    .text:000001f8 $d
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:485    .text:000001fc $t
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:494    .text:000001fc Secure_LED_Off_callback
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:495    .text:000001fc __acle_se_Secure_LED_Off_callback
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:539    .text:0000022c $d
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:543    .text:00000230 $t
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:552    .text:00000230 GetSystemCoreClock
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:553    .text:00000230 __acle_se_GetSystemCoreClock
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:590    .text:00000250 SysTick_Handler
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:712    .text:000002f8 $d
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:1179   .bss:00000008 ticks.7522
                            *COM*:00000032 tests1
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:724    .data:00000000 tests2
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:721    .data:00000000 $d
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:731    .data:00000014 tests3
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:738    .rodata:00000040 atest
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:758    .text:00000304 $t
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:763    .text:00000304 main
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:1068   .text:00000440 SYS_Init
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:1142   .text:00000498 UART0_Init
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:978    .text:000003e4 Nonsecure_Init
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:961    .text:000003c0 $d
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:973    .text:000003e4 $t
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:1058   .text:00000438 $d
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:1063   .text:00000440 $t
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:1133   .text:00000494 $d
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:1137   .text:00000498 $t
C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s:1172   .text:000004b0 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
puts
__gnu_cmse_nonsecure_call
ARM GAS  C:\Users\CCMA\AppData\Local\Temp\ccBmsV6I.s 			page 183


printf
SystemCoreClockUpdate
